// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logical_port.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "logical_port.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GLogicalPort_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GLogicalPort_reflection_ = NULL;
const ::google::protobuf::Descriptor* LogicalInterfaceInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogicalInterfaceInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* IngressInterfaceStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IngressInterfaceStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* EgressInterfaceStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EgressInterfaceStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* OperationalState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OperationalState_reflection_ = NULL;
const ::google::protobuf::Descriptor* ForwardingClassAccounting_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ForwardingClassAccounting_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_logical_5fport_2eproto() {
  protobuf_AddDesc_logical_5fport_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "logical_port.proto");
  GOOGLE_CHECK(file != NULL);
  GLogicalPort_descriptor_ = file->message_type(0);
  static const int GLogicalPort_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLogicalPort, interface_info_),
  };
  GLogicalPort_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GLogicalPort_descriptor_,
      GLogicalPort::default_instance_,
      GLogicalPort_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLogicalPort, _has_bits_[0]),
      -1,
      -1,
      sizeof(GLogicalPort),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GLogicalPort, _internal_metadata_),
      -1);
  LogicalInterfaceInfo_descriptor_ = file->message_type(1);
  static const int LogicalInterfaceInfo_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicalInterfaceInfo, if_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicalInterfaceInfo, init_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicalInterfaceInfo, snmp_if_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicalInterfaceInfo, parent_ae_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicalInterfaceInfo, ingress_stats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicalInterfaceInfo, egress_stats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicalInterfaceInfo, op_state_),
  };
  LogicalInterfaceInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LogicalInterfaceInfo_descriptor_,
      LogicalInterfaceInfo::default_instance_,
      LogicalInterfaceInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicalInterfaceInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(LogicalInterfaceInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogicalInterfaceInfo, _internal_metadata_),
      -1);
  IngressInterfaceStats_descriptor_ = file->message_type(2);
  static const int IngressInterfaceStats_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceStats, if_pkts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceStats, if_octets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceStats, if_ucast_pkts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceStats, if_mcast_pkts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceStats, if_fc_stats_),
  };
  IngressInterfaceStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IngressInterfaceStats_descriptor_,
      IngressInterfaceStats::default_instance_,
      IngressInterfaceStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceStats, _has_bits_[0]),
      -1,
      -1,
      sizeof(IngressInterfaceStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceStats, _internal_metadata_),
      -1);
  EgressInterfaceStats_descriptor_ = file->message_type(3);
  static const int EgressInterfaceStats_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EgressInterfaceStats, if_pkts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EgressInterfaceStats, if_octets_),
  };
  EgressInterfaceStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EgressInterfaceStats_descriptor_,
      EgressInterfaceStats::default_instance_,
      EgressInterfaceStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EgressInterfaceStats, _has_bits_[0]),
      -1,
      -1,
      sizeof(EgressInterfaceStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EgressInterfaceStats, _internal_metadata_),
      -1);
  OperationalState_descriptor_ = file->message_type(4);
  static const int OperationalState_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationalState, operational_status_),
  };
  OperationalState_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OperationalState_descriptor_,
      OperationalState::default_instance_,
      OperationalState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationalState, _has_bits_[0]),
      -1,
      -1,
      sizeof(OperationalState),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperationalState, _internal_metadata_),
      -1);
  ForwardingClassAccounting_descriptor_ = file->message_type(5);
  static const int ForwardingClassAccounting_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardingClassAccounting, if_family_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardingClassAccounting, fc_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardingClassAccounting, if_pkts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardingClassAccounting, if_octets_),
  };
  ForwardingClassAccounting_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ForwardingClassAccounting_descriptor_,
      ForwardingClassAccounting::default_instance_,
      ForwardingClassAccounting_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardingClassAccounting, _has_bits_[0]),
      -1,
      -1,
      sizeof(ForwardingClassAccounting),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForwardingClassAccounting, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_logical_5fport_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GLogicalPort_descriptor_, &GLogicalPort::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LogicalInterfaceInfo_descriptor_, &LogicalInterfaceInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IngressInterfaceStats_descriptor_, &IngressInterfaceStats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EgressInterfaceStats_descriptor_, &EgressInterfaceStats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OperationalState_descriptor_, &OperationalState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ForwardingClassAccounting_descriptor_, &ForwardingClassAccounting::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_logical_5fport_2eproto() {
  delete GLogicalPort::default_instance_;
  delete GLogicalPort_reflection_;
  delete LogicalInterfaceInfo::default_instance_;
  delete LogicalInterfaceInfo_reflection_;
  delete IngressInterfaceStats::default_instance_;
  delete IngressInterfaceStats_reflection_;
  delete EgressInterfaceStats::default_instance_;
  delete EgressInterfaceStats_reflection_;
  delete OperationalState::default_instance_;
  delete OperationalState_reflection_;
  delete ForwardingClassAccounting::default_instance_;
  delete ForwardingClassAccounting_reflection_;
}

void protobuf_AddDesc_logical_5fport_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_jvision_5ftop_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022logical_port.proto\032\021jvision_top.proto\""
    "=\n\014GLogicalPort\022-\n\016interface_info\030\001 \003(\0132"
    "\025.LogicalInterfaceInfo\"\206\002\n\024LogicalInterf"
    "aceInfo\022\026\n\007if_name\030\001 \002(\tB\005\202@\002\010\001\022\030\n\tinit_"
    "time\030\002 \002(\004B\005\202@\002\020\001\022\034\n\rsnmp_if_index\030\003 \001(\r"
    "B\005\202@\002\010\001\022\035\n\016parent_ae_name\030\004 \001(\tB\005\202@\002\010\001\022-"
    "\n\ringress_stats\030\005 \001(\0132\026.IngressInterface"
    "Stats\022+\n\014egress_stats\030\006 \001(\0132\025.EgressInte"
    "rfaceStats\022#\n\010op_state\030\007 \001(\0132\021.Operation"
    "alState\"\266\001\n\025IngressInterfaceStats\022\026\n\007if_"
    "pkts\030\001 \002(\004B\005\202@\002\030\001\022\030\n\tif_octets\030\002 \002(\004B\005\202@"
    "\002\030\001\022\034\n\rif_ucast_pkts\030\003 \001(\004B\005\202@\002\030\001\022\034\n\rif_"
    "mcast_pkts\030\004 \002(\004B\005\202@\002\030\001\022/\n\013if_fc_stats\030\005"
    " \003(\0132\032.ForwardingClassAccounting\"H\n\024Egre"
    "ssInterfaceStats\022\026\n\007if_pkts\030\001 \002(\004B\005\202@\002\030\001"
    "\022\030\n\tif_octets\030\002 \002(\004B\005\202@\002\030\001\".\n\020Operationa"
    "lState\022\032\n\022operational_status\030\001 \001(\t\"\201\001\n\031F"
    "orwardingClassAccounting\022\030\n\tif_family\030\001 "
    "\001(\tB\005\202@\002\010\001\022\030\n\tfc_number\030\002 \001(\rB\005\202@\002\010\001\022\026\n\007"
    "if_pkts\030\003 \001(\004B\005\202@\002\030\001\022\030\n\tif_octets\030\004 \001(\004B"
    "\005\202@\002\030\001:G\n\027jnprLogicalInterfaceExt\022\027.Juni"
    "perNetworksSensors\030\007 \001(\0132\r.GLogicalPort", 879);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "logical_port.proto", &protobuf_RegisterTypes);
  GLogicalPort::default_instance_ = new GLogicalPort();
  LogicalInterfaceInfo::default_instance_ = new LogicalInterfaceInfo();
  IngressInterfaceStats::default_instance_ = new IngressInterfaceStats();
  EgressInterfaceStats::default_instance_ = new EgressInterfaceStats();
  OperationalState::default_instance_ = new OperationalState();
  ForwardingClassAccounting::default_instance_ = new ForwardingClassAccounting();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::JuniperNetworksSensors::default_instance(),
    7, 11, false, false,
    &::GLogicalPort::default_instance());
  GLogicalPort::default_instance_->InitAsDefaultInstance();
  LogicalInterfaceInfo::default_instance_->InitAsDefaultInstance();
  IngressInterfaceStats::default_instance_->InitAsDefaultInstance();
  EgressInterfaceStats::default_instance_->InitAsDefaultInstance();
  OperationalState::default_instance_->InitAsDefaultInstance();
  ForwardingClassAccounting::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_logical_5fport_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_logical_5fport_2eproto {
  StaticDescriptorInitializer_logical_5fport_2eproto() {
    protobuf_AddDesc_logical_5fport_2eproto();
  }
} static_descriptor_initializer_logical_5fport_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int GLogicalPort::kInterfaceInfoFieldNumber;
#endif  // !_MSC_VER

GLogicalPort::GLogicalPort()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GLogicalPort)
}

void GLogicalPort::InitAsDefaultInstance() {
}

GLogicalPort::GLogicalPort(const GLogicalPort& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GLogicalPort)
}

void GLogicalPort::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GLogicalPort::~GLogicalPort() {
  // @@protoc_insertion_point(destructor:GLogicalPort)
  SharedDtor();
}

void GLogicalPort::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GLogicalPort::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GLogicalPort::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GLogicalPort_descriptor_;
}

const GLogicalPort& GLogicalPort::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_logical_5fport_2eproto();
  return *default_instance_;
}

GLogicalPort* GLogicalPort::default_instance_ = NULL;

GLogicalPort* GLogicalPort::New(::google::protobuf::Arena* arena) const {
  GLogicalPort* n = new GLogicalPort;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GLogicalPort::Clear() {
  interface_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GLogicalPort::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GLogicalPort)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .LogicalInterfaceInfo interface_info = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_interface_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_interface_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_interface_info;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GLogicalPort)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GLogicalPort)
  return false;
#undef DO_
}

void GLogicalPort::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GLogicalPort)
  // repeated .LogicalInterfaceInfo interface_info = 1;
  for (unsigned int i = 0, n = this->interface_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->interface_info(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GLogicalPort)
}

::google::protobuf::uint8* GLogicalPort::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GLogicalPort)
  // repeated .LogicalInterfaceInfo interface_info = 1;
  for (unsigned int i = 0, n = this->interface_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->interface_info(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GLogicalPort)
  return target;
}

int GLogicalPort::ByteSize() const {
  int total_size = 0;

  // repeated .LogicalInterfaceInfo interface_info = 1;
  total_size += 1 * this->interface_info_size();
  for (int i = 0; i < this->interface_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->interface_info(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GLogicalPort::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GLogicalPort* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GLogicalPort>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GLogicalPort::MergeFrom(const GLogicalPort& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  interface_info_.MergeFrom(from.interface_info_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GLogicalPort::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GLogicalPort::CopyFrom(const GLogicalPort& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GLogicalPort::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->interface_info())) return false;
  return true;
}

void GLogicalPort::Swap(GLogicalPort* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GLogicalPort::InternalSwap(GLogicalPort* other) {
  interface_info_.UnsafeArenaSwap(&other->interface_info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GLogicalPort::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GLogicalPort_descriptor_;
  metadata.reflection = GLogicalPort_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GLogicalPort

// repeated .LogicalInterfaceInfo interface_info = 1;
int GLogicalPort::interface_info_size() const {
  return interface_info_.size();
}
void GLogicalPort::clear_interface_info() {
  interface_info_.Clear();
}
const ::LogicalInterfaceInfo& GLogicalPort::interface_info(int index) const {
  // @@protoc_insertion_point(field_get:GLogicalPort.interface_info)
  return interface_info_.Get(index);
}
::LogicalInterfaceInfo* GLogicalPort::mutable_interface_info(int index) {
  // @@protoc_insertion_point(field_mutable:GLogicalPort.interface_info)
  return interface_info_.Mutable(index);
}
::LogicalInterfaceInfo* GLogicalPort::add_interface_info() {
  // @@protoc_insertion_point(field_add:GLogicalPort.interface_info)
  return interface_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::LogicalInterfaceInfo >*
GLogicalPort::mutable_interface_info() {
  // @@protoc_insertion_point(field_mutable_list:GLogicalPort.interface_info)
  return &interface_info_;
}
const ::google::protobuf::RepeatedPtrField< ::LogicalInterfaceInfo >&
GLogicalPort::interface_info() const {
  // @@protoc_insertion_point(field_list:GLogicalPort.interface_info)
  return interface_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int LogicalInterfaceInfo::kIfNameFieldNumber;
const int LogicalInterfaceInfo::kInitTimeFieldNumber;
const int LogicalInterfaceInfo::kSnmpIfIndexFieldNumber;
const int LogicalInterfaceInfo::kParentAeNameFieldNumber;
const int LogicalInterfaceInfo::kIngressStatsFieldNumber;
const int LogicalInterfaceInfo::kEgressStatsFieldNumber;
const int LogicalInterfaceInfo::kOpStateFieldNumber;
#endif  // !_MSC_VER

LogicalInterfaceInfo::LogicalInterfaceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogicalInterfaceInfo)
}

void LogicalInterfaceInfo::InitAsDefaultInstance() {
  ingress_stats_ = const_cast< ::IngressInterfaceStats*>(&::IngressInterfaceStats::default_instance());
  egress_stats_ = const_cast< ::EgressInterfaceStats*>(&::EgressInterfaceStats::default_instance());
  op_state_ = const_cast< ::OperationalState*>(&::OperationalState::default_instance());
}

LogicalInterfaceInfo::LogicalInterfaceInfo(const LogicalInterfaceInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LogicalInterfaceInfo)
}

void LogicalInterfaceInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  if_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  init_time_ = GOOGLE_ULONGLONG(0);
  snmp_if_index_ = 0u;
  parent_ae_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ingress_stats_ = NULL;
  egress_stats_ = NULL;
  op_state_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LogicalInterfaceInfo::~LogicalInterfaceInfo() {
  // @@protoc_insertion_point(destructor:LogicalInterfaceInfo)
  SharedDtor();
}

void LogicalInterfaceInfo::SharedDtor() {
  if_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_ae_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete ingress_stats_;
    delete egress_stats_;
    delete op_state_;
  }
}

void LogicalInterfaceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogicalInterfaceInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogicalInterfaceInfo_descriptor_;
}

const LogicalInterfaceInfo& LogicalInterfaceInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_logical_5fport_2eproto();
  return *default_instance_;
}

LogicalInterfaceInfo* LogicalInterfaceInfo::default_instance_ = NULL;

LogicalInterfaceInfo* LogicalInterfaceInfo::New(::google::protobuf::Arena* arena) const {
  LogicalInterfaceInfo* n = new LogicalInterfaceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogicalInterfaceInfo::Clear() {
  if (_has_bits_[0 / 32] & 127u) {
    if (has_if_name()) {
      if_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    init_time_ = GOOGLE_ULONGLONG(0);
    snmp_if_index_ = 0u;
    if (has_parent_ae_name()) {
      parent_ae_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_ingress_stats()) {
      if (ingress_stats_ != NULL) ingress_stats_->::IngressInterfaceStats::Clear();
    }
    if (has_egress_stats()) {
      if (egress_stats_ != NULL) egress_stats_->::EgressInterfaceStats::Clear();
    }
    if (has_op_state()) {
      if (op_state_ != NULL) op_state_->::OperationalState::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LogicalInterfaceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogicalInterfaceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string if_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_if_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->if_name().data(), this->if_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LogicalInterfaceInfo.if_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_init_time;
        break;
      }

      // required uint64 init_time = 2;
      case 2: {
        if (tag == 16) {
         parse_init_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &init_time_)));
          set_has_init_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_snmp_if_index;
        break;
      }

      // optional uint32 snmp_if_index = 3;
      case 3: {
        if (tag == 24) {
         parse_snmp_if_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &snmp_if_index_)));
          set_has_snmp_if_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_parent_ae_name;
        break;
      }

      // optional string parent_ae_name = 4;
      case 4: {
        if (tag == 34) {
         parse_parent_ae_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_ae_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parent_ae_name().data(), this->parent_ae_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LogicalInterfaceInfo.parent_ae_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ingress_stats;
        break;
      }

      // optional .IngressInterfaceStats ingress_stats = 5;
      case 5: {
        if (tag == 42) {
         parse_ingress_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ingress_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_egress_stats;
        break;
      }

      // optional .EgressInterfaceStats egress_stats = 6;
      case 6: {
        if (tag == 50) {
         parse_egress_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_egress_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_op_state;
        break;
      }

      // optional .OperationalState op_state = 7;
      case 7: {
        if (tag == 58) {
         parse_op_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_op_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogicalInterfaceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogicalInterfaceInfo)
  return false;
#undef DO_
}

void LogicalInterfaceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogicalInterfaceInfo)
  // required string if_name = 1;
  if (has_if_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->if_name().data(), this->if_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LogicalInterfaceInfo.if_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->if_name(), output);
  }

  // required uint64 init_time = 2;
  if (has_init_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->init_time(), output);
  }

  // optional uint32 snmp_if_index = 3;
  if (has_snmp_if_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->snmp_if_index(), output);
  }

  // optional string parent_ae_name = 4;
  if (has_parent_ae_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parent_ae_name().data(), this->parent_ae_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LogicalInterfaceInfo.parent_ae_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->parent_ae_name(), output);
  }

  // optional .IngressInterfaceStats ingress_stats = 5;
  if (has_ingress_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->ingress_stats_, output);
  }

  // optional .EgressInterfaceStats egress_stats = 6;
  if (has_egress_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->egress_stats_, output);
  }

  // optional .OperationalState op_state = 7;
  if (has_op_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->op_state_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LogicalInterfaceInfo)
}

::google::protobuf::uint8* LogicalInterfaceInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LogicalInterfaceInfo)
  // required string if_name = 1;
  if (has_if_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->if_name().data(), this->if_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LogicalInterfaceInfo.if_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->if_name(), target);
  }

  // required uint64 init_time = 2;
  if (has_init_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->init_time(), target);
  }

  // optional uint32 snmp_if_index = 3;
  if (has_snmp_if_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->snmp_if_index(), target);
  }

  // optional string parent_ae_name = 4;
  if (has_parent_ae_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parent_ae_name().data(), this->parent_ae_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LogicalInterfaceInfo.parent_ae_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->parent_ae_name(), target);
  }

  // optional .IngressInterfaceStats ingress_stats = 5;
  if (has_ingress_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->ingress_stats_, target);
  }

  // optional .EgressInterfaceStats egress_stats = 6;
  if (has_egress_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->egress_stats_, target);
  }

  // optional .OperationalState op_state = 7;
  if (has_op_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, *this->op_state_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogicalInterfaceInfo)
  return target;
}

int LogicalInterfaceInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_if_name()) {
    // required string if_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->if_name());
  }

  if (has_init_time()) {
    // required uint64 init_time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->init_time());
  }

  return total_size;
}
int LogicalInterfaceInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string if_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->if_name());

    // required uint64 init_time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->init_time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 124u) {
    // optional uint32 snmp_if_index = 3;
    if (has_snmp_if_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->snmp_if_index());
    }

    // optional string parent_ae_name = 4;
    if (has_parent_ae_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->parent_ae_name());
    }

    // optional .IngressInterfaceStats ingress_stats = 5;
    if (has_ingress_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->ingress_stats_);
    }

    // optional .EgressInterfaceStats egress_stats = 6;
    if (has_egress_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->egress_stats_);
    }

    // optional .OperationalState op_state = 7;
    if (has_op_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->op_state_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogicalInterfaceInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LogicalInterfaceInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LogicalInterfaceInfo>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LogicalInterfaceInfo::MergeFrom(const LogicalInterfaceInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_if_name()) {
      set_has_if_name();
      if_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.if_name_);
    }
    if (from.has_init_time()) {
      set_init_time(from.init_time());
    }
    if (from.has_snmp_if_index()) {
      set_snmp_if_index(from.snmp_if_index());
    }
    if (from.has_parent_ae_name()) {
      set_has_parent_ae_name();
      parent_ae_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_ae_name_);
    }
    if (from.has_ingress_stats()) {
      mutable_ingress_stats()->::IngressInterfaceStats::MergeFrom(from.ingress_stats());
    }
    if (from.has_egress_stats()) {
      mutable_egress_stats()->::EgressInterfaceStats::MergeFrom(from.egress_stats());
    }
    if (from.has_op_state()) {
      mutable_op_state()->::OperationalState::MergeFrom(from.op_state());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LogicalInterfaceInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogicalInterfaceInfo::CopyFrom(const LogicalInterfaceInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicalInterfaceInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_ingress_stats()) {
    if (!this->ingress_stats_->IsInitialized()) return false;
  }
  if (has_egress_stats()) {
    if (!this->egress_stats_->IsInitialized()) return false;
  }
  return true;
}

void LogicalInterfaceInfo::Swap(LogicalInterfaceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogicalInterfaceInfo::InternalSwap(LogicalInterfaceInfo* other) {
  if_name_.Swap(&other->if_name_);
  std::swap(init_time_, other->init_time_);
  std::swap(snmp_if_index_, other->snmp_if_index_);
  parent_ae_name_.Swap(&other->parent_ae_name_);
  std::swap(ingress_stats_, other->ingress_stats_);
  std::swap(egress_stats_, other->egress_stats_);
  std::swap(op_state_, other->op_state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogicalInterfaceInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogicalInterfaceInfo_descriptor_;
  metadata.reflection = LogicalInterfaceInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogicalInterfaceInfo

// required string if_name = 1;
bool LogicalInterfaceInfo::has_if_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LogicalInterfaceInfo::set_has_if_name() {
  _has_bits_[0] |= 0x00000001u;
}
void LogicalInterfaceInfo::clear_has_if_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void LogicalInterfaceInfo::clear_if_name() {
  if_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_if_name();
}
 const ::std::string& LogicalInterfaceInfo::if_name() const {
  // @@protoc_insertion_point(field_get:LogicalInterfaceInfo.if_name)
  return if_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogicalInterfaceInfo::set_if_name(const ::std::string& value) {
  set_has_if_name();
  if_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LogicalInterfaceInfo.if_name)
}
 void LogicalInterfaceInfo::set_if_name(const char* value) {
  set_has_if_name();
  if_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LogicalInterfaceInfo.if_name)
}
 void LogicalInterfaceInfo::set_if_name(const char* value, size_t size) {
  set_has_if_name();
  if_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LogicalInterfaceInfo.if_name)
}
 ::std::string* LogicalInterfaceInfo::mutable_if_name() {
  set_has_if_name();
  // @@protoc_insertion_point(field_mutable:LogicalInterfaceInfo.if_name)
  return if_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LogicalInterfaceInfo::release_if_name() {
  clear_has_if_name();
  return if_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogicalInterfaceInfo::set_allocated_if_name(::std::string* if_name) {
  if (if_name != NULL) {
    set_has_if_name();
  } else {
    clear_has_if_name();
  }
  if_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), if_name);
  // @@protoc_insertion_point(field_set_allocated:LogicalInterfaceInfo.if_name)
}

// required uint64 init_time = 2;
bool LogicalInterfaceInfo::has_init_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LogicalInterfaceInfo::set_has_init_time() {
  _has_bits_[0] |= 0x00000002u;
}
void LogicalInterfaceInfo::clear_has_init_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void LogicalInterfaceInfo::clear_init_time() {
  init_time_ = GOOGLE_ULONGLONG(0);
  clear_has_init_time();
}
 ::google::protobuf::uint64 LogicalInterfaceInfo::init_time() const {
  // @@protoc_insertion_point(field_get:LogicalInterfaceInfo.init_time)
  return init_time_;
}
 void LogicalInterfaceInfo::set_init_time(::google::protobuf::uint64 value) {
  set_has_init_time();
  init_time_ = value;
  // @@protoc_insertion_point(field_set:LogicalInterfaceInfo.init_time)
}

// optional uint32 snmp_if_index = 3;
bool LogicalInterfaceInfo::has_snmp_if_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LogicalInterfaceInfo::set_has_snmp_if_index() {
  _has_bits_[0] |= 0x00000004u;
}
void LogicalInterfaceInfo::clear_has_snmp_if_index() {
  _has_bits_[0] &= ~0x00000004u;
}
void LogicalInterfaceInfo::clear_snmp_if_index() {
  snmp_if_index_ = 0u;
  clear_has_snmp_if_index();
}
 ::google::protobuf::uint32 LogicalInterfaceInfo::snmp_if_index() const {
  // @@protoc_insertion_point(field_get:LogicalInterfaceInfo.snmp_if_index)
  return snmp_if_index_;
}
 void LogicalInterfaceInfo::set_snmp_if_index(::google::protobuf::uint32 value) {
  set_has_snmp_if_index();
  snmp_if_index_ = value;
  // @@protoc_insertion_point(field_set:LogicalInterfaceInfo.snmp_if_index)
}

// optional string parent_ae_name = 4;
bool LogicalInterfaceInfo::has_parent_ae_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LogicalInterfaceInfo::set_has_parent_ae_name() {
  _has_bits_[0] |= 0x00000008u;
}
void LogicalInterfaceInfo::clear_has_parent_ae_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void LogicalInterfaceInfo::clear_parent_ae_name() {
  parent_ae_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_parent_ae_name();
}
 const ::std::string& LogicalInterfaceInfo::parent_ae_name() const {
  // @@protoc_insertion_point(field_get:LogicalInterfaceInfo.parent_ae_name)
  return parent_ae_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogicalInterfaceInfo::set_parent_ae_name(const ::std::string& value) {
  set_has_parent_ae_name();
  parent_ae_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LogicalInterfaceInfo.parent_ae_name)
}
 void LogicalInterfaceInfo::set_parent_ae_name(const char* value) {
  set_has_parent_ae_name();
  parent_ae_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LogicalInterfaceInfo.parent_ae_name)
}
 void LogicalInterfaceInfo::set_parent_ae_name(const char* value, size_t size) {
  set_has_parent_ae_name();
  parent_ae_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LogicalInterfaceInfo.parent_ae_name)
}
 ::std::string* LogicalInterfaceInfo::mutable_parent_ae_name() {
  set_has_parent_ae_name();
  // @@protoc_insertion_point(field_mutable:LogicalInterfaceInfo.parent_ae_name)
  return parent_ae_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LogicalInterfaceInfo::release_parent_ae_name() {
  clear_has_parent_ae_name();
  return parent_ae_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogicalInterfaceInfo::set_allocated_parent_ae_name(::std::string* parent_ae_name) {
  if (parent_ae_name != NULL) {
    set_has_parent_ae_name();
  } else {
    clear_has_parent_ae_name();
  }
  parent_ae_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent_ae_name);
  // @@protoc_insertion_point(field_set_allocated:LogicalInterfaceInfo.parent_ae_name)
}

// optional .IngressInterfaceStats ingress_stats = 5;
bool LogicalInterfaceInfo::has_ingress_stats() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LogicalInterfaceInfo::set_has_ingress_stats() {
  _has_bits_[0] |= 0x00000010u;
}
void LogicalInterfaceInfo::clear_has_ingress_stats() {
  _has_bits_[0] &= ~0x00000010u;
}
void LogicalInterfaceInfo::clear_ingress_stats() {
  if (ingress_stats_ != NULL) ingress_stats_->::IngressInterfaceStats::Clear();
  clear_has_ingress_stats();
}
const ::IngressInterfaceStats& LogicalInterfaceInfo::ingress_stats() const {
  // @@protoc_insertion_point(field_get:LogicalInterfaceInfo.ingress_stats)
  return ingress_stats_ != NULL ? *ingress_stats_ : *default_instance_->ingress_stats_;
}
::IngressInterfaceStats* LogicalInterfaceInfo::mutable_ingress_stats() {
  set_has_ingress_stats();
  if (ingress_stats_ == NULL) {
    ingress_stats_ = new ::IngressInterfaceStats;
  }
  // @@protoc_insertion_point(field_mutable:LogicalInterfaceInfo.ingress_stats)
  return ingress_stats_;
}
::IngressInterfaceStats* LogicalInterfaceInfo::release_ingress_stats() {
  clear_has_ingress_stats();
  ::IngressInterfaceStats* temp = ingress_stats_;
  ingress_stats_ = NULL;
  return temp;
}
void LogicalInterfaceInfo::set_allocated_ingress_stats(::IngressInterfaceStats* ingress_stats) {
  delete ingress_stats_;
  ingress_stats_ = ingress_stats;
  if (ingress_stats) {
    set_has_ingress_stats();
  } else {
    clear_has_ingress_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:LogicalInterfaceInfo.ingress_stats)
}

// optional .EgressInterfaceStats egress_stats = 6;
bool LogicalInterfaceInfo::has_egress_stats() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LogicalInterfaceInfo::set_has_egress_stats() {
  _has_bits_[0] |= 0x00000020u;
}
void LogicalInterfaceInfo::clear_has_egress_stats() {
  _has_bits_[0] &= ~0x00000020u;
}
void LogicalInterfaceInfo::clear_egress_stats() {
  if (egress_stats_ != NULL) egress_stats_->::EgressInterfaceStats::Clear();
  clear_has_egress_stats();
}
const ::EgressInterfaceStats& LogicalInterfaceInfo::egress_stats() const {
  // @@protoc_insertion_point(field_get:LogicalInterfaceInfo.egress_stats)
  return egress_stats_ != NULL ? *egress_stats_ : *default_instance_->egress_stats_;
}
::EgressInterfaceStats* LogicalInterfaceInfo::mutable_egress_stats() {
  set_has_egress_stats();
  if (egress_stats_ == NULL) {
    egress_stats_ = new ::EgressInterfaceStats;
  }
  // @@protoc_insertion_point(field_mutable:LogicalInterfaceInfo.egress_stats)
  return egress_stats_;
}
::EgressInterfaceStats* LogicalInterfaceInfo::release_egress_stats() {
  clear_has_egress_stats();
  ::EgressInterfaceStats* temp = egress_stats_;
  egress_stats_ = NULL;
  return temp;
}
void LogicalInterfaceInfo::set_allocated_egress_stats(::EgressInterfaceStats* egress_stats) {
  delete egress_stats_;
  egress_stats_ = egress_stats;
  if (egress_stats) {
    set_has_egress_stats();
  } else {
    clear_has_egress_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:LogicalInterfaceInfo.egress_stats)
}

// optional .OperationalState op_state = 7;
bool LogicalInterfaceInfo::has_op_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void LogicalInterfaceInfo::set_has_op_state() {
  _has_bits_[0] |= 0x00000040u;
}
void LogicalInterfaceInfo::clear_has_op_state() {
  _has_bits_[0] &= ~0x00000040u;
}
void LogicalInterfaceInfo::clear_op_state() {
  if (op_state_ != NULL) op_state_->::OperationalState::Clear();
  clear_has_op_state();
}
const ::OperationalState& LogicalInterfaceInfo::op_state() const {
  // @@protoc_insertion_point(field_get:LogicalInterfaceInfo.op_state)
  return op_state_ != NULL ? *op_state_ : *default_instance_->op_state_;
}
::OperationalState* LogicalInterfaceInfo::mutable_op_state() {
  set_has_op_state();
  if (op_state_ == NULL) {
    op_state_ = new ::OperationalState;
  }
  // @@protoc_insertion_point(field_mutable:LogicalInterfaceInfo.op_state)
  return op_state_;
}
::OperationalState* LogicalInterfaceInfo::release_op_state() {
  clear_has_op_state();
  ::OperationalState* temp = op_state_;
  op_state_ = NULL;
  return temp;
}
void LogicalInterfaceInfo::set_allocated_op_state(::OperationalState* op_state) {
  delete op_state_;
  op_state_ = op_state;
  if (op_state) {
    set_has_op_state();
  } else {
    clear_has_op_state();
  }
  // @@protoc_insertion_point(field_set_allocated:LogicalInterfaceInfo.op_state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int IngressInterfaceStats::kIfPktsFieldNumber;
const int IngressInterfaceStats::kIfOctetsFieldNumber;
const int IngressInterfaceStats::kIfUcastPktsFieldNumber;
const int IngressInterfaceStats::kIfMcastPktsFieldNumber;
const int IngressInterfaceStats::kIfFcStatsFieldNumber;
#endif  // !_MSC_VER

IngressInterfaceStats::IngressInterfaceStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IngressInterfaceStats)
}

void IngressInterfaceStats::InitAsDefaultInstance() {
}

IngressInterfaceStats::IngressInterfaceStats(const IngressInterfaceStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:IngressInterfaceStats)
}

void IngressInterfaceStats::SharedCtor() {
  _cached_size_ = 0;
  if_pkts_ = GOOGLE_ULONGLONG(0);
  if_octets_ = GOOGLE_ULONGLONG(0);
  if_ucast_pkts_ = GOOGLE_ULONGLONG(0);
  if_mcast_pkts_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IngressInterfaceStats::~IngressInterfaceStats() {
  // @@protoc_insertion_point(destructor:IngressInterfaceStats)
  SharedDtor();
}

void IngressInterfaceStats::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IngressInterfaceStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IngressInterfaceStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IngressInterfaceStats_descriptor_;
}

const IngressInterfaceStats& IngressInterfaceStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_logical_5fport_2eproto();
  return *default_instance_;
}

IngressInterfaceStats* IngressInterfaceStats::default_instance_ = NULL;

IngressInterfaceStats* IngressInterfaceStats::New(::google::protobuf::Arena* arena) const {
  IngressInterfaceStats* n = new IngressInterfaceStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IngressInterfaceStats::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<IngressInterfaceStats*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(if_pkts_, if_mcast_pkts_);

#undef ZR_HELPER_
#undef ZR_

  if_fc_stats_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool IngressInterfaceStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IngressInterfaceStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 if_pkts = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_pkts_)));
          set_has_if_pkts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_if_octets;
        break;
      }

      // required uint64 if_octets = 2;
      case 2: {
        if (tag == 16) {
         parse_if_octets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_octets_)));
          set_has_if_octets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_if_ucast_pkts;
        break;
      }

      // optional uint64 if_ucast_pkts = 3;
      case 3: {
        if (tag == 24) {
         parse_if_ucast_pkts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_ucast_pkts_)));
          set_has_if_ucast_pkts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_if_mcast_pkts;
        break;
      }

      // required uint64 if_mcast_pkts = 4;
      case 4: {
        if (tag == 32) {
         parse_if_mcast_pkts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_mcast_pkts_)));
          set_has_if_mcast_pkts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_if_fc_stats;
        break;
      }

      // repeated .ForwardingClassAccounting if_fc_stats = 5;
      case 5: {
        if (tag == 42) {
         parse_if_fc_stats:
          DO_(input->IncrementRecursionDepth());
         parse_loop_if_fc_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_if_fc_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_if_fc_stats;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IngressInterfaceStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IngressInterfaceStats)
  return false;
#undef DO_
}

void IngressInterfaceStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IngressInterfaceStats)
  // required uint64 if_pkts = 1;
  if (has_if_pkts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->if_pkts(), output);
  }

  // required uint64 if_octets = 2;
  if (has_if_octets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->if_octets(), output);
  }

  // optional uint64 if_ucast_pkts = 3;
  if (has_if_ucast_pkts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->if_ucast_pkts(), output);
  }

  // required uint64 if_mcast_pkts = 4;
  if (has_if_mcast_pkts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->if_mcast_pkts(), output);
  }

  // repeated .ForwardingClassAccounting if_fc_stats = 5;
  for (unsigned int i = 0, n = this->if_fc_stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->if_fc_stats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:IngressInterfaceStats)
}

::google::protobuf::uint8* IngressInterfaceStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:IngressInterfaceStats)
  // required uint64 if_pkts = 1;
  if (has_if_pkts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->if_pkts(), target);
  }

  // required uint64 if_octets = 2;
  if (has_if_octets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->if_octets(), target);
  }

  // optional uint64 if_ucast_pkts = 3;
  if (has_if_ucast_pkts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->if_ucast_pkts(), target);
  }

  // required uint64 if_mcast_pkts = 4;
  if (has_if_mcast_pkts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->if_mcast_pkts(), target);
  }

  // repeated .ForwardingClassAccounting if_fc_stats = 5;
  for (unsigned int i = 0, n = this->if_fc_stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->if_fc_stats(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IngressInterfaceStats)
  return target;
}

int IngressInterfaceStats::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_if_pkts()) {
    // required uint64 if_pkts = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_pkts());
  }

  if (has_if_octets()) {
    // required uint64 if_octets = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_octets());
  }

  if (has_if_mcast_pkts()) {
    // required uint64 if_mcast_pkts = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_mcast_pkts());
  }

  return total_size;
}
int IngressInterfaceStats::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required uint64 if_pkts = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_pkts());

    // required uint64 if_octets = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_octets());

    // required uint64 if_mcast_pkts = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_mcast_pkts());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint64 if_ucast_pkts = 3;
  if (has_if_ucast_pkts()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_ucast_pkts());
  }

  // repeated .ForwardingClassAccounting if_fc_stats = 5;
  total_size += 1 * this->if_fc_stats_size();
  for (int i = 0; i < this->if_fc_stats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->if_fc_stats(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IngressInterfaceStats::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const IngressInterfaceStats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const IngressInterfaceStats>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IngressInterfaceStats::MergeFrom(const IngressInterfaceStats& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if_fc_stats_.MergeFrom(from.if_fc_stats_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_if_pkts()) {
      set_if_pkts(from.if_pkts());
    }
    if (from.has_if_octets()) {
      set_if_octets(from.if_octets());
    }
    if (from.has_if_ucast_pkts()) {
      set_if_ucast_pkts(from.if_ucast_pkts());
    }
    if (from.has_if_mcast_pkts()) {
      set_if_mcast_pkts(from.if_mcast_pkts());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void IngressInterfaceStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IngressInterfaceStats::CopyFrom(const IngressInterfaceStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IngressInterfaceStats::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;

  return true;
}

void IngressInterfaceStats::Swap(IngressInterfaceStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IngressInterfaceStats::InternalSwap(IngressInterfaceStats* other) {
  std::swap(if_pkts_, other->if_pkts_);
  std::swap(if_octets_, other->if_octets_);
  std::swap(if_ucast_pkts_, other->if_ucast_pkts_);
  std::swap(if_mcast_pkts_, other->if_mcast_pkts_);
  if_fc_stats_.UnsafeArenaSwap(&other->if_fc_stats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IngressInterfaceStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IngressInterfaceStats_descriptor_;
  metadata.reflection = IngressInterfaceStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IngressInterfaceStats

// required uint64 if_pkts = 1;
bool IngressInterfaceStats::has_if_pkts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void IngressInterfaceStats::set_has_if_pkts() {
  _has_bits_[0] |= 0x00000001u;
}
void IngressInterfaceStats::clear_has_if_pkts() {
  _has_bits_[0] &= ~0x00000001u;
}
void IngressInterfaceStats::clear_if_pkts() {
  if_pkts_ = GOOGLE_ULONGLONG(0);
  clear_has_if_pkts();
}
 ::google::protobuf::uint64 IngressInterfaceStats::if_pkts() const {
  // @@protoc_insertion_point(field_get:IngressInterfaceStats.if_pkts)
  return if_pkts_;
}
 void IngressInterfaceStats::set_if_pkts(::google::protobuf::uint64 value) {
  set_has_if_pkts();
  if_pkts_ = value;
  // @@protoc_insertion_point(field_set:IngressInterfaceStats.if_pkts)
}

// required uint64 if_octets = 2;
bool IngressInterfaceStats::has_if_octets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void IngressInterfaceStats::set_has_if_octets() {
  _has_bits_[0] |= 0x00000002u;
}
void IngressInterfaceStats::clear_has_if_octets() {
  _has_bits_[0] &= ~0x00000002u;
}
void IngressInterfaceStats::clear_if_octets() {
  if_octets_ = GOOGLE_ULONGLONG(0);
  clear_has_if_octets();
}
 ::google::protobuf::uint64 IngressInterfaceStats::if_octets() const {
  // @@protoc_insertion_point(field_get:IngressInterfaceStats.if_octets)
  return if_octets_;
}
 void IngressInterfaceStats::set_if_octets(::google::protobuf::uint64 value) {
  set_has_if_octets();
  if_octets_ = value;
  // @@protoc_insertion_point(field_set:IngressInterfaceStats.if_octets)
}

// optional uint64 if_ucast_pkts = 3;
bool IngressInterfaceStats::has_if_ucast_pkts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void IngressInterfaceStats::set_has_if_ucast_pkts() {
  _has_bits_[0] |= 0x00000004u;
}
void IngressInterfaceStats::clear_has_if_ucast_pkts() {
  _has_bits_[0] &= ~0x00000004u;
}
void IngressInterfaceStats::clear_if_ucast_pkts() {
  if_ucast_pkts_ = GOOGLE_ULONGLONG(0);
  clear_has_if_ucast_pkts();
}
 ::google::protobuf::uint64 IngressInterfaceStats::if_ucast_pkts() const {
  // @@protoc_insertion_point(field_get:IngressInterfaceStats.if_ucast_pkts)
  return if_ucast_pkts_;
}
 void IngressInterfaceStats::set_if_ucast_pkts(::google::protobuf::uint64 value) {
  set_has_if_ucast_pkts();
  if_ucast_pkts_ = value;
  // @@protoc_insertion_point(field_set:IngressInterfaceStats.if_ucast_pkts)
}

// required uint64 if_mcast_pkts = 4;
bool IngressInterfaceStats::has_if_mcast_pkts() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void IngressInterfaceStats::set_has_if_mcast_pkts() {
  _has_bits_[0] |= 0x00000008u;
}
void IngressInterfaceStats::clear_has_if_mcast_pkts() {
  _has_bits_[0] &= ~0x00000008u;
}
void IngressInterfaceStats::clear_if_mcast_pkts() {
  if_mcast_pkts_ = GOOGLE_ULONGLONG(0);
  clear_has_if_mcast_pkts();
}
 ::google::protobuf::uint64 IngressInterfaceStats::if_mcast_pkts() const {
  // @@protoc_insertion_point(field_get:IngressInterfaceStats.if_mcast_pkts)
  return if_mcast_pkts_;
}
 void IngressInterfaceStats::set_if_mcast_pkts(::google::protobuf::uint64 value) {
  set_has_if_mcast_pkts();
  if_mcast_pkts_ = value;
  // @@protoc_insertion_point(field_set:IngressInterfaceStats.if_mcast_pkts)
}

// repeated .ForwardingClassAccounting if_fc_stats = 5;
int IngressInterfaceStats::if_fc_stats_size() const {
  return if_fc_stats_.size();
}
void IngressInterfaceStats::clear_if_fc_stats() {
  if_fc_stats_.Clear();
}
const ::ForwardingClassAccounting& IngressInterfaceStats::if_fc_stats(int index) const {
  // @@protoc_insertion_point(field_get:IngressInterfaceStats.if_fc_stats)
  return if_fc_stats_.Get(index);
}
::ForwardingClassAccounting* IngressInterfaceStats::mutable_if_fc_stats(int index) {
  // @@protoc_insertion_point(field_mutable:IngressInterfaceStats.if_fc_stats)
  return if_fc_stats_.Mutable(index);
}
::ForwardingClassAccounting* IngressInterfaceStats::add_if_fc_stats() {
  // @@protoc_insertion_point(field_add:IngressInterfaceStats.if_fc_stats)
  return if_fc_stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::ForwardingClassAccounting >*
IngressInterfaceStats::mutable_if_fc_stats() {
  // @@protoc_insertion_point(field_mutable_list:IngressInterfaceStats.if_fc_stats)
  return &if_fc_stats_;
}
const ::google::protobuf::RepeatedPtrField< ::ForwardingClassAccounting >&
IngressInterfaceStats::if_fc_stats() const {
  // @@protoc_insertion_point(field_list:IngressInterfaceStats.if_fc_stats)
  return if_fc_stats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int EgressInterfaceStats::kIfPktsFieldNumber;
const int EgressInterfaceStats::kIfOctetsFieldNumber;
#endif  // !_MSC_VER

EgressInterfaceStats::EgressInterfaceStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EgressInterfaceStats)
}

void EgressInterfaceStats::InitAsDefaultInstance() {
}

EgressInterfaceStats::EgressInterfaceStats(const EgressInterfaceStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EgressInterfaceStats)
}

void EgressInterfaceStats::SharedCtor() {
  _cached_size_ = 0;
  if_pkts_ = GOOGLE_ULONGLONG(0);
  if_octets_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EgressInterfaceStats::~EgressInterfaceStats() {
  // @@protoc_insertion_point(destructor:EgressInterfaceStats)
  SharedDtor();
}

void EgressInterfaceStats::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EgressInterfaceStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EgressInterfaceStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EgressInterfaceStats_descriptor_;
}

const EgressInterfaceStats& EgressInterfaceStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_logical_5fport_2eproto();
  return *default_instance_;
}

EgressInterfaceStats* EgressInterfaceStats::default_instance_ = NULL;

EgressInterfaceStats* EgressInterfaceStats::New(::google::protobuf::Arena* arena) const {
  EgressInterfaceStats* n = new EgressInterfaceStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EgressInterfaceStats::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<EgressInterfaceStats*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(if_pkts_, if_octets_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EgressInterfaceStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EgressInterfaceStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 if_pkts = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_pkts_)));
          set_has_if_pkts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_if_octets;
        break;
      }

      // required uint64 if_octets = 2;
      case 2: {
        if (tag == 16) {
         parse_if_octets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_octets_)));
          set_has_if_octets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EgressInterfaceStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EgressInterfaceStats)
  return false;
#undef DO_
}

void EgressInterfaceStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EgressInterfaceStats)
  // required uint64 if_pkts = 1;
  if (has_if_pkts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->if_pkts(), output);
  }

  // required uint64 if_octets = 2;
  if (has_if_octets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->if_octets(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EgressInterfaceStats)
}

::google::protobuf::uint8* EgressInterfaceStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EgressInterfaceStats)
  // required uint64 if_pkts = 1;
  if (has_if_pkts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->if_pkts(), target);
  }

  // required uint64 if_octets = 2;
  if (has_if_octets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->if_octets(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EgressInterfaceStats)
  return target;
}

int EgressInterfaceStats::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_if_pkts()) {
    // required uint64 if_pkts = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_pkts());
  }

  if (has_if_octets()) {
    // required uint64 if_octets = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_octets());
  }

  return total_size;
}
int EgressInterfaceStats::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint64 if_pkts = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_pkts());

    // required uint64 if_octets = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_octets());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EgressInterfaceStats::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EgressInterfaceStats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EgressInterfaceStats>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EgressInterfaceStats::MergeFrom(const EgressInterfaceStats& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_if_pkts()) {
      set_if_pkts(from.if_pkts());
    }
    if (from.has_if_octets()) {
      set_if_octets(from.if_octets());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void EgressInterfaceStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EgressInterfaceStats::CopyFrom(const EgressInterfaceStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EgressInterfaceStats::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void EgressInterfaceStats::Swap(EgressInterfaceStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EgressInterfaceStats::InternalSwap(EgressInterfaceStats* other) {
  std::swap(if_pkts_, other->if_pkts_);
  std::swap(if_octets_, other->if_octets_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EgressInterfaceStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EgressInterfaceStats_descriptor_;
  metadata.reflection = EgressInterfaceStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EgressInterfaceStats

// required uint64 if_pkts = 1;
bool EgressInterfaceStats::has_if_pkts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EgressInterfaceStats::set_has_if_pkts() {
  _has_bits_[0] |= 0x00000001u;
}
void EgressInterfaceStats::clear_has_if_pkts() {
  _has_bits_[0] &= ~0x00000001u;
}
void EgressInterfaceStats::clear_if_pkts() {
  if_pkts_ = GOOGLE_ULONGLONG(0);
  clear_has_if_pkts();
}
 ::google::protobuf::uint64 EgressInterfaceStats::if_pkts() const {
  // @@protoc_insertion_point(field_get:EgressInterfaceStats.if_pkts)
  return if_pkts_;
}
 void EgressInterfaceStats::set_if_pkts(::google::protobuf::uint64 value) {
  set_has_if_pkts();
  if_pkts_ = value;
  // @@protoc_insertion_point(field_set:EgressInterfaceStats.if_pkts)
}

// required uint64 if_octets = 2;
bool EgressInterfaceStats::has_if_octets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EgressInterfaceStats::set_has_if_octets() {
  _has_bits_[0] |= 0x00000002u;
}
void EgressInterfaceStats::clear_has_if_octets() {
  _has_bits_[0] &= ~0x00000002u;
}
void EgressInterfaceStats::clear_if_octets() {
  if_octets_ = GOOGLE_ULONGLONG(0);
  clear_has_if_octets();
}
 ::google::protobuf::uint64 EgressInterfaceStats::if_octets() const {
  // @@protoc_insertion_point(field_get:EgressInterfaceStats.if_octets)
  return if_octets_;
}
 void EgressInterfaceStats::set_if_octets(::google::protobuf::uint64 value) {
  set_has_if_octets();
  if_octets_ = value;
  // @@protoc_insertion_point(field_set:EgressInterfaceStats.if_octets)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int OperationalState::kOperationalStatusFieldNumber;
#endif  // !_MSC_VER

OperationalState::OperationalState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:OperationalState)
}

void OperationalState::InitAsDefaultInstance() {
}

OperationalState::OperationalState(const OperationalState& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:OperationalState)
}

void OperationalState::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  operational_status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OperationalState::~OperationalState() {
  // @@protoc_insertion_point(destructor:OperationalState)
  SharedDtor();
}

void OperationalState::SharedDtor() {
  operational_status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void OperationalState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperationalState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperationalState_descriptor_;
}

const OperationalState& OperationalState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_logical_5fport_2eproto();
  return *default_instance_;
}

OperationalState* OperationalState::default_instance_ = NULL;

OperationalState* OperationalState::New(::google::protobuf::Arena* arena) const {
  OperationalState* n = new OperationalState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperationalState::Clear() {
  if (has_operational_status()) {
    operational_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OperationalState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OperationalState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string operational_status = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_operational_status()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->operational_status().data(), this->operational_status().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "OperationalState.operational_status");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OperationalState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OperationalState)
  return false;
#undef DO_
}

void OperationalState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OperationalState)
  // optional string operational_status = 1;
  if (has_operational_status()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operational_status().data(), this->operational_status().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OperationalState.operational_status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->operational_status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:OperationalState)
}

::google::protobuf::uint8* OperationalState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:OperationalState)
  // optional string operational_status = 1;
  if (has_operational_status()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->operational_status().data(), this->operational_status().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "OperationalState.operational_status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->operational_status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OperationalState)
  return target;
}

int OperationalState::ByteSize() const {
  int total_size = 0;

  // optional string operational_status = 1;
  if (has_operational_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->operational_status());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperationalState::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OperationalState* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const OperationalState>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OperationalState::MergeFrom(const OperationalState& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_operational_status()) {
      set_has_operational_status();
      operational_status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.operational_status_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void OperationalState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperationalState::CopyFrom(const OperationalState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OperationalState::IsInitialized() const {

  return true;
}

void OperationalState::Swap(OperationalState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperationalState::InternalSwap(OperationalState* other) {
  operational_status_.Swap(&other->operational_status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperationalState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OperationalState_descriptor_;
  metadata.reflection = OperationalState_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OperationalState

// optional string operational_status = 1;
bool OperationalState::has_operational_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OperationalState::set_has_operational_status() {
  _has_bits_[0] |= 0x00000001u;
}
void OperationalState::clear_has_operational_status() {
  _has_bits_[0] &= ~0x00000001u;
}
void OperationalState::clear_operational_status() {
  operational_status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_operational_status();
}
 const ::std::string& OperationalState::operational_status() const {
  // @@protoc_insertion_point(field_get:OperationalState.operational_status)
  return operational_status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OperationalState::set_operational_status(const ::std::string& value) {
  set_has_operational_status();
  operational_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OperationalState.operational_status)
}
 void OperationalState::set_operational_status(const char* value) {
  set_has_operational_status();
  operational_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OperationalState.operational_status)
}
 void OperationalState::set_operational_status(const char* value, size_t size) {
  set_has_operational_status();
  operational_status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OperationalState.operational_status)
}
 ::std::string* OperationalState::mutable_operational_status() {
  set_has_operational_status();
  // @@protoc_insertion_point(field_mutable:OperationalState.operational_status)
  return operational_status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* OperationalState::release_operational_status() {
  clear_has_operational_status();
  return operational_status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void OperationalState::set_allocated_operational_status(::std::string* operational_status) {
  if (operational_status != NULL) {
    set_has_operational_status();
  } else {
    clear_has_operational_status();
  }
  operational_status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operational_status);
  // @@protoc_insertion_point(field_set_allocated:OperationalState.operational_status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ForwardingClassAccounting::kIfFamilyFieldNumber;
const int ForwardingClassAccounting::kFcNumberFieldNumber;
const int ForwardingClassAccounting::kIfPktsFieldNumber;
const int ForwardingClassAccounting::kIfOctetsFieldNumber;
#endif  // !_MSC_VER

ForwardingClassAccounting::ForwardingClassAccounting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ForwardingClassAccounting)
}

void ForwardingClassAccounting::InitAsDefaultInstance() {
}

ForwardingClassAccounting::ForwardingClassAccounting(const ForwardingClassAccounting& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ForwardingClassAccounting)
}

void ForwardingClassAccounting::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  if_family_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fc_number_ = 0u;
  if_pkts_ = GOOGLE_ULONGLONG(0);
  if_octets_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ForwardingClassAccounting::~ForwardingClassAccounting() {
  // @@protoc_insertion_point(destructor:ForwardingClassAccounting)
  SharedDtor();
}

void ForwardingClassAccounting::SharedDtor() {
  if_family_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ForwardingClassAccounting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ForwardingClassAccounting::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ForwardingClassAccounting_descriptor_;
}

const ForwardingClassAccounting& ForwardingClassAccounting::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_logical_5fport_2eproto();
  return *default_instance_;
}

ForwardingClassAccounting* ForwardingClassAccounting::default_instance_ = NULL;

ForwardingClassAccounting* ForwardingClassAccounting::New(::google::protobuf::Arena* arena) const {
  ForwardingClassAccounting* n = new ForwardingClassAccounting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ForwardingClassAccounting::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ForwardingClassAccounting*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(if_pkts_, fc_number_);
    if (has_if_family()) {
      if_family_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ForwardingClassAccounting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ForwardingClassAccounting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string if_family = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_if_family()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->if_family().data(), this->if_family().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ForwardingClassAccounting.if_family");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_fc_number;
        break;
      }

      // optional uint32 fc_number = 2;
      case 2: {
        if (tag == 16) {
         parse_fc_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fc_number_)));
          set_has_fc_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_if_pkts;
        break;
      }

      // optional uint64 if_pkts = 3;
      case 3: {
        if (tag == 24) {
         parse_if_pkts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_pkts_)));
          set_has_if_pkts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_if_octets;
        break;
      }

      // optional uint64 if_octets = 4;
      case 4: {
        if (tag == 32) {
         parse_if_octets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_octets_)));
          set_has_if_octets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ForwardingClassAccounting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ForwardingClassAccounting)
  return false;
#undef DO_
}

void ForwardingClassAccounting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ForwardingClassAccounting)
  // optional string if_family = 1;
  if (has_if_family()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->if_family().data(), this->if_family().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ForwardingClassAccounting.if_family");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->if_family(), output);
  }

  // optional uint32 fc_number = 2;
  if (has_fc_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->fc_number(), output);
  }

  // optional uint64 if_pkts = 3;
  if (has_if_pkts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->if_pkts(), output);
  }

  // optional uint64 if_octets = 4;
  if (has_if_octets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->if_octets(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ForwardingClassAccounting)
}

::google::protobuf::uint8* ForwardingClassAccounting::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ForwardingClassAccounting)
  // optional string if_family = 1;
  if (has_if_family()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->if_family().data(), this->if_family().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ForwardingClassAccounting.if_family");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->if_family(), target);
  }

  // optional uint32 fc_number = 2;
  if (has_fc_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->fc_number(), target);
  }

  // optional uint64 if_pkts = 3;
  if (has_if_pkts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->if_pkts(), target);
  }

  // optional uint64 if_octets = 4;
  if (has_if_octets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->if_octets(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ForwardingClassAccounting)
  return target;
}

int ForwardingClassAccounting::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional string if_family = 1;
    if (has_if_family()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->if_family());
    }

    // optional uint32 fc_number = 2;
    if (has_fc_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fc_number());
    }

    // optional uint64 if_pkts = 3;
    if (has_if_pkts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->if_pkts());
    }

    // optional uint64 if_octets = 4;
    if (has_if_octets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->if_octets());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForwardingClassAccounting::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ForwardingClassAccounting* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ForwardingClassAccounting>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ForwardingClassAccounting::MergeFrom(const ForwardingClassAccounting& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_if_family()) {
      set_has_if_family();
      if_family_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.if_family_);
    }
    if (from.has_fc_number()) {
      set_fc_number(from.fc_number());
    }
    if (from.has_if_pkts()) {
      set_if_pkts(from.if_pkts());
    }
    if (from.has_if_octets()) {
      set_if_octets(from.if_octets());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ForwardingClassAccounting::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardingClassAccounting::CopyFrom(const ForwardingClassAccounting& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardingClassAccounting::IsInitialized() const {

  return true;
}

void ForwardingClassAccounting::Swap(ForwardingClassAccounting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForwardingClassAccounting::InternalSwap(ForwardingClassAccounting* other) {
  if_family_.Swap(&other->if_family_);
  std::swap(fc_number_, other->fc_number_);
  std::swap(if_pkts_, other->if_pkts_);
  std::swap(if_octets_, other->if_octets_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ForwardingClassAccounting::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ForwardingClassAccounting_descriptor_;
  metadata.reflection = ForwardingClassAccounting_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ForwardingClassAccounting

// optional string if_family = 1;
bool ForwardingClassAccounting::has_if_family() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ForwardingClassAccounting::set_has_if_family() {
  _has_bits_[0] |= 0x00000001u;
}
void ForwardingClassAccounting::clear_has_if_family() {
  _has_bits_[0] &= ~0x00000001u;
}
void ForwardingClassAccounting::clear_if_family() {
  if_family_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_if_family();
}
 const ::std::string& ForwardingClassAccounting::if_family() const {
  // @@protoc_insertion_point(field_get:ForwardingClassAccounting.if_family)
  return if_family_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ForwardingClassAccounting::set_if_family(const ::std::string& value) {
  set_has_if_family();
  if_family_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ForwardingClassAccounting.if_family)
}
 void ForwardingClassAccounting::set_if_family(const char* value) {
  set_has_if_family();
  if_family_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ForwardingClassAccounting.if_family)
}
 void ForwardingClassAccounting::set_if_family(const char* value, size_t size) {
  set_has_if_family();
  if_family_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ForwardingClassAccounting.if_family)
}
 ::std::string* ForwardingClassAccounting::mutable_if_family() {
  set_has_if_family();
  // @@protoc_insertion_point(field_mutable:ForwardingClassAccounting.if_family)
  return if_family_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ForwardingClassAccounting::release_if_family() {
  clear_has_if_family();
  return if_family_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ForwardingClassAccounting::set_allocated_if_family(::std::string* if_family) {
  if (if_family != NULL) {
    set_has_if_family();
  } else {
    clear_has_if_family();
  }
  if_family_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), if_family);
  // @@protoc_insertion_point(field_set_allocated:ForwardingClassAccounting.if_family)
}

// optional uint32 fc_number = 2;
bool ForwardingClassAccounting::has_fc_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ForwardingClassAccounting::set_has_fc_number() {
  _has_bits_[0] |= 0x00000002u;
}
void ForwardingClassAccounting::clear_has_fc_number() {
  _has_bits_[0] &= ~0x00000002u;
}
void ForwardingClassAccounting::clear_fc_number() {
  fc_number_ = 0u;
  clear_has_fc_number();
}
 ::google::protobuf::uint32 ForwardingClassAccounting::fc_number() const {
  // @@protoc_insertion_point(field_get:ForwardingClassAccounting.fc_number)
  return fc_number_;
}
 void ForwardingClassAccounting::set_fc_number(::google::protobuf::uint32 value) {
  set_has_fc_number();
  fc_number_ = value;
  // @@protoc_insertion_point(field_set:ForwardingClassAccounting.fc_number)
}

// optional uint64 if_pkts = 3;
bool ForwardingClassAccounting::has_if_pkts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ForwardingClassAccounting::set_has_if_pkts() {
  _has_bits_[0] |= 0x00000004u;
}
void ForwardingClassAccounting::clear_has_if_pkts() {
  _has_bits_[0] &= ~0x00000004u;
}
void ForwardingClassAccounting::clear_if_pkts() {
  if_pkts_ = GOOGLE_ULONGLONG(0);
  clear_has_if_pkts();
}
 ::google::protobuf::uint64 ForwardingClassAccounting::if_pkts() const {
  // @@protoc_insertion_point(field_get:ForwardingClassAccounting.if_pkts)
  return if_pkts_;
}
 void ForwardingClassAccounting::set_if_pkts(::google::protobuf::uint64 value) {
  set_has_if_pkts();
  if_pkts_ = value;
  // @@protoc_insertion_point(field_set:ForwardingClassAccounting.if_pkts)
}

// optional uint64 if_octets = 4;
bool ForwardingClassAccounting::has_if_octets() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ForwardingClassAccounting::set_has_if_octets() {
  _has_bits_[0] |= 0x00000008u;
}
void ForwardingClassAccounting::clear_has_if_octets() {
  _has_bits_[0] &= ~0x00000008u;
}
void ForwardingClassAccounting::clear_if_octets() {
  if_octets_ = GOOGLE_ULONGLONG(0);
  clear_has_if_octets();
}
 ::google::protobuf::uint64 ForwardingClassAccounting::if_octets() const {
  // @@protoc_insertion_point(field_get:ForwardingClassAccounting.if_octets)
  return if_octets_;
}
 void ForwardingClassAccounting::set_if_octets(::google::protobuf::uint64 value) {
  set_has_if_octets();
  if_octets_ = value;
  // @@protoc_insertion_point(field_set:ForwardingClassAccounting.if_octets)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::JuniperNetworksSensors,
    ::google::protobuf::internal::MessageTypeTraits< ::GLogicalPort >, 11, false >
  jnprLogicalInterfaceExt(kJnprLogicalInterfaceExtFieldNumber, ::GLogicalPort::default_instance());

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
