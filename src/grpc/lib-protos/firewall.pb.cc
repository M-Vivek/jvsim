// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: firewall.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "firewall.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Firewall_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Firewall_reflection_ = NULL;
const ::google::protobuf::Descriptor* FirewallStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FirewallStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* MemoryUsage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MemoryUsage_reflection_ = NULL;
const ::google::protobuf::Descriptor* CounterStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CounterStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* PolicerStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PolicerStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExtendedPolicerStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExtendedPolicerStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* HierarchicalPolicerStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HierarchicalPolicerStats_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_firewall_2eproto() {
  protobuf_AddDesc_firewall_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "firewall.proto");
  GOOGLE_CHECK(file != NULL);
  Firewall_descriptor_ = file->message_type(0);
  static const int Firewall_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Firewall, firewall_stats_),
  };
  Firewall_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Firewall_descriptor_,
      Firewall::default_instance_,
      Firewall_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Firewall, _has_bits_[0]),
      -1,
      -1,
      sizeof(Firewall),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Firewall, _internal_metadata_),
      -1);
  FirewallStats_descriptor_ = file->message_type(1);
  static const int FirewallStats_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FirewallStats, filter_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FirewallStats, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FirewallStats, memory_usage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FirewallStats, counter_stats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FirewallStats, policer_stats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FirewallStats, hierarchical_policer_stats_),
  };
  FirewallStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FirewallStats_descriptor_,
      FirewallStats::default_instance_,
      FirewallStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FirewallStats, _has_bits_[0]),
      -1,
      -1,
      sizeof(FirewallStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FirewallStats, _internal_metadata_),
      -1);
  MemoryUsage_descriptor_ = file->message_type(2);
  static const int MemoryUsage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryUsage, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryUsage, allocated_),
  };
  MemoryUsage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MemoryUsage_descriptor_,
      MemoryUsage::default_instance_,
      MemoryUsage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryUsage, _has_bits_[0]),
      -1,
      -1,
      sizeof(MemoryUsage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MemoryUsage, _internal_metadata_),
      -1);
  CounterStats_descriptor_ = file->message_type(3);
  static const int CounterStats_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterStats, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterStats, packets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterStats, bytes_),
  };
  CounterStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CounterStats_descriptor_,
      CounterStats::default_instance_,
      CounterStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterStats, _has_bits_[0]),
      -1,
      -1,
      sizeof(CounterStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CounterStats, _internal_metadata_),
      -1);
  PolicerStats_descriptor_ = file->message_type(4);
  static const int PolicerStats_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PolicerStats, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PolicerStats, out_of_spec_packets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PolicerStats, out_of_spec_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PolicerStats, extended_policer_stats_),
  };
  PolicerStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PolicerStats_descriptor_,
      PolicerStats::default_instance_,
      PolicerStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PolicerStats, _has_bits_[0]),
      -1,
      -1,
      sizeof(PolicerStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PolicerStats, _internal_metadata_),
      -1);
  ExtendedPolicerStats_descriptor_ = file->message_type(5);
  static const int ExtendedPolicerStats_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedPolicerStats, offered_packets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedPolicerStats, offered_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedPolicerStats, transmitted_packets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedPolicerStats, transmitted_bytes_),
  };
  ExtendedPolicerStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExtendedPolicerStats_descriptor_,
      ExtendedPolicerStats::default_instance_,
      ExtendedPolicerStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedPolicerStats, _has_bits_[0]),
      -1,
      -1,
      sizeof(ExtendedPolicerStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExtendedPolicerStats, _internal_metadata_),
      -1);
  HierarchicalPolicerStats_descriptor_ = file->message_type(6);
  static const int HierarchicalPolicerStats_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HierarchicalPolicerStats, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HierarchicalPolicerStats, premium_packets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HierarchicalPolicerStats, premium_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HierarchicalPolicerStats, aggregate_packets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HierarchicalPolicerStats, aggregate_bytes_),
  };
  HierarchicalPolicerStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HierarchicalPolicerStats_descriptor_,
      HierarchicalPolicerStats::default_instance_,
      HierarchicalPolicerStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HierarchicalPolicerStats, _has_bits_[0]),
      -1,
      -1,
      sizeof(HierarchicalPolicerStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HierarchicalPolicerStats, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_firewall_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Firewall_descriptor_, &Firewall::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FirewallStats_descriptor_, &FirewallStats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MemoryUsage_descriptor_, &MemoryUsage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CounterStats_descriptor_, &CounterStats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PolicerStats_descriptor_, &PolicerStats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExtendedPolicerStats_descriptor_, &ExtendedPolicerStats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HierarchicalPolicerStats_descriptor_, &HierarchicalPolicerStats::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_firewall_2eproto() {
  delete Firewall::default_instance_;
  delete Firewall_reflection_;
  delete FirewallStats::default_instance_;
  delete FirewallStats_reflection_;
  delete MemoryUsage::default_instance_;
  delete MemoryUsage_reflection_;
  delete CounterStats::default_instance_;
  delete CounterStats_reflection_;
  delete PolicerStats::default_instance_;
  delete PolicerStats_reflection_;
  delete ExtendedPolicerStats::default_instance_;
  delete ExtendedPolicerStats_reflection_;
  delete HierarchicalPolicerStats::default_instance_;
  delete HierarchicalPolicerStats_reflection_;
}

void protobuf_AddDesc_firewall_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_telemetry_5ftop_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016firewall.proto\032\023telemetry_top.proto\"2\n"
    "\010Firewall\022&\n\016firewall_stats\030\001 \003(\0132\016.Fire"
    "wallStats\"\364\001\n\rFirewallStats\022\032\n\013filter_na"
    "me\030\001 \002(\tB\005\202@\002\010\001\022\030\n\ttimestamp\030\002 \001(\004B\005\202@\002\020"
    "\001\022\"\n\014memory_usage\030\003 \003(\0132\014.MemoryUsage\022$\n"
    "\rcounter_stats\030\004 \003(\0132\r.CounterStats\022$\n\rp"
    "olicer_stats\030\005 \003(\0132\r.PolicerStats\022=\n\032hie"
    "rarchical_policer_stats\030\006 \003(\0132\031.Hierarch"
    "icalPolicerStats\"<\n\013MemoryUsage\022\023\n\004name\030"
    "\001 \002(\tB\005\202@\002\010\001\022\030\n\tallocated\030\002 \001(\004B\005\202@\002 \001\"Q"
    "\n\014CounterStats\022\023\n\004name\030\001 \002(\tB\005\202@\002\010\001\022\026\n\007p"
    "ackets\030\002 \001(\004B\005\202@\002\030\001\022\024\n\005bytes\030\003 \001(\004B\005\202@\002\030"
    "\001\"\240\001\n\014PolicerStats\022\023\n\004name\030\001 \002(\tB\005\202@\002\010\001\022"
    "\"\n\023out_of_spec_packets\030\002 \001(\004B\005\202@\002\030\001\022 \n\021o"
    "ut_of_spec_bytes\030\003 \001(\004B\005\202@\002\030\001\0225\n\026extende"
    "d_policer_stats\030\004 \001(\0132\025.ExtendedPolicerS"
    "tats\"\232\001\n\024ExtendedPolicerStats\022\036\n\017offered"
    "_packets\030\001 \001(\004B\005\202@\002\030\001\022\034\n\roffered_bytes\030\002"
    " \001(\004B\005\202@\002\030\001\022\"\n\023transmitted_packets\030\003 \001(\004"
    "B\005\202@\002\030\001\022 \n\021transmitted_bytes\030\004 \001(\004B\005\202@\002\030"
    "\001\"\257\001\n\030HierarchicalPolicerStats\022\023\n\004name\030\001"
    " \002(\tB\005\202@\002\010\001\022\036\n\017premium_packets\030\002 \001(\004B\005\202@"
    "\002\030\001\022\034\n\rpremium_bytes\030\003 \001(\004B\005\202@\002\030\001\022 \n\021agg"
    "regate_packets\030\004 \001(\004B\005\202@\002\030\001\022\036\n\017aggregate"
    "_bytes\030\005 \001(\004B\005\202@\002\030\001:=\n\021jnpr_firewall_ext"
    "\022\027.JuniperNetworksSensors\030\006 \001(\0132\t.Firewa"
    "ll", 1042);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "firewall.proto", &protobuf_RegisterTypes);
  Firewall::default_instance_ = new Firewall();
  FirewallStats::default_instance_ = new FirewallStats();
  MemoryUsage::default_instance_ = new MemoryUsage();
  CounterStats::default_instance_ = new CounterStats();
  PolicerStats::default_instance_ = new PolicerStats();
  ExtendedPolicerStats::default_instance_ = new ExtendedPolicerStats();
  HierarchicalPolicerStats::default_instance_ = new HierarchicalPolicerStats();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::JuniperNetworksSensors::default_instance(),
    6, 11, false, false,
    &::Firewall::default_instance());
  Firewall::default_instance_->InitAsDefaultInstance();
  FirewallStats::default_instance_->InitAsDefaultInstance();
  MemoryUsage::default_instance_->InitAsDefaultInstance();
  CounterStats::default_instance_->InitAsDefaultInstance();
  PolicerStats::default_instance_->InitAsDefaultInstance();
  ExtendedPolicerStats::default_instance_->InitAsDefaultInstance();
  HierarchicalPolicerStats::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_firewall_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_firewall_2eproto {
  StaticDescriptorInitializer_firewall_2eproto() {
    protobuf_AddDesc_firewall_2eproto();
  }
} static_descriptor_initializer_firewall_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int Firewall::kFirewallStatsFieldNumber;
#endif  // !_MSC_VER

Firewall::Firewall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Firewall)
}

void Firewall::InitAsDefaultInstance() {
}

Firewall::Firewall(const Firewall& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Firewall)
}

void Firewall::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Firewall::~Firewall() {
  // @@protoc_insertion_point(destructor:Firewall)
  SharedDtor();
}

void Firewall::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Firewall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Firewall::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Firewall_descriptor_;
}

const Firewall& Firewall::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_firewall_2eproto();
  return *default_instance_;
}

Firewall* Firewall::default_instance_ = NULL;

Firewall* Firewall::New(::google::protobuf::Arena* arena) const {
  Firewall* n = new Firewall;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Firewall::Clear() {
  firewall_stats_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Firewall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Firewall)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .FirewallStats firewall_stats = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_firewall_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_firewall_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_firewall_stats;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Firewall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Firewall)
  return false;
#undef DO_
}

void Firewall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Firewall)
  // repeated .FirewallStats firewall_stats = 1;
  for (unsigned int i = 0, n = this->firewall_stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->firewall_stats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Firewall)
}

::google::protobuf::uint8* Firewall::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Firewall)
  // repeated .FirewallStats firewall_stats = 1;
  for (unsigned int i = 0, n = this->firewall_stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->firewall_stats(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Firewall)
  return target;
}

int Firewall::ByteSize() const {
  int total_size = 0;

  // repeated .FirewallStats firewall_stats = 1;
  total_size += 1 * this->firewall_stats_size();
  for (int i = 0; i < this->firewall_stats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->firewall_stats(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Firewall::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Firewall* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Firewall>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Firewall::MergeFrom(const Firewall& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  firewall_stats_.MergeFrom(from.firewall_stats_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Firewall::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Firewall::CopyFrom(const Firewall& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Firewall::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->firewall_stats())) return false;
  return true;
}

void Firewall::Swap(Firewall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Firewall::InternalSwap(Firewall* other) {
  firewall_stats_.UnsafeArenaSwap(&other->firewall_stats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Firewall::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Firewall_descriptor_;
  metadata.reflection = Firewall_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Firewall

// repeated .FirewallStats firewall_stats = 1;
int Firewall::firewall_stats_size() const {
  return firewall_stats_.size();
}
void Firewall::clear_firewall_stats() {
  firewall_stats_.Clear();
}
const ::FirewallStats& Firewall::firewall_stats(int index) const {
  // @@protoc_insertion_point(field_get:Firewall.firewall_stats)
  return firewall_stats_.Get(index);
}
::FirewallStats* Firewall::mutable_firewall_stats(int index) {
  // @@protoc_insertion_point(field_mutable:Firewall.firewall_stats)
  return firewall_stats_.Mutable(index);
}
::FirewallStats* Firewall::add_firewall_stats() {
  // @@protoc_insertion_point(field_add:Firewall.firewall_stats)
  return firewall_stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::FirewallStats >*
Firewall::mutable_firewall_stats() {
  // @@protoc_insertion_point(field_mutable_list:Firewall.firewall_stats)
  return &firewall_stats_;
}
const ::google::protobuf::RepeatedPtrField< ::FirewallStats >&
Firewall::firewall_stats() const {
  // @@protoc_insertion_point(field_list:Firewall.firewall_stats)
  return firewall_stats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int FirewallStats::kFilterNameFieldNumber;
const int FirewallStats::kTimestampFieldNumber;
const int FirewallStats::kMemoryUsageFieldNumber;
const int FirewallStats::kCounterStatsFieldNumber;
const int FirewallStats::kPolicerStatsFieldNumber;
const int FirewallStats::kHierarchicalPolicerStatsFieldNumber;
#endif  // !_MSC_VER

FirewallStats::FirewallStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:FirewallStats)
}

void FirewallStats::InitAsDefaultInstance() {
}

FirewallStats::FirewallStats(const FirewallStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:FirewallStats)
}

void FirewallStats::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  filter_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FirewallStats::~FirewallStats() {
  // @@protoc_insertion_point(destructor:FirewallStats)
  SharedDtor();
}

void FirewallStats::SharedDtor() {
  filter_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void FirewallStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FirewallStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FirewallStats_descriptor_;
}

const FirewallStats& FirewallStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_firewall_2eproto();
  return *default_instance_;
}

FirewallStats* FirewallStats::default_instance_ = NULL;

FirewallStats* FirewallStats::New(::google::protobuf::Arena* arena) const {
  FirewallStats* n = new FirewallStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FirewallStats::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_filter_name()) {
      filter_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    timestamp_ = GOOGLE_ULONGLONG(0);
  }
  memory_usage_.Clear();
  counter_stats_.Clear();
  policer_stats_.Clear();
  hierarchical_policer_stats_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FirewallStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:FirewallStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string filter_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filter_name().data(), this->filter_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "FirewallStats.filter_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_timestamp;
        break;
      }

      // optional uint64 timestamp = 2;
      case 2: {
        if (tag == 16) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_memory_usage;
        break;
      }

      // repeated .MemoryUsage memory_usage = 3;
      case 3: {
        if (tag == 26) {
         parse_memory_usage:
          DO_(input->IncrementRecursionDepth());
         parse_loop_memory_usage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_memory_usage()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_memory_usage;
        if (input->ExpectTag(34)) goto parse_loop_counter_stats;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .CounterStats counter_stats = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_counter_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_counter_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_counter_stats;
        if (input->ExpectTag(42)) goto parse_loop_policer_stats;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .PolicerStats policer_stats = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_policer_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_policer_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_policer_stats;
        if (input->ExpectTag(50)) goto parse_loop_hierarchical_policer_stats;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .HierarchicalPolicerStats hierarchical_policer_stats = 6;
      case 6: {
        if (tag == 50) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_hierarchical_policer_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_hierarchical_policer_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_hierarchical_policer_stats;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:FirewallStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:FirewallStats)
  return false;
#undef DO_
}

void FirewallStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:FirewallStats)
  // required string filter_name = 1;
  if (has_filter_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filter_name().data(), this->filter_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FirewallStats.filter_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filter_name(), output);
  }

  // optional uint64 timestamp = 2;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp(), output);
  }

  // repeated .MemoryUsage memory_usage = 3;
  for (unsigned int i = 0, n = this->memory_usage_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->memory_usage(i), output);
  }

  // repeated .CounterStats counter_stats = 4;
  for (unsigned int i = 0, n = this->counter_stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->counter_stats(i), output);
  }

  // repeated .PolicerStats policer_stats = 5;
  for (unsigned int i = 0, n = this->policer_stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->policer_stats(i), output);
  }

  // repeated .HierarchicalPolicerStats hierarchical_policer_stats = 6;
  for (unsigned int i = 0, n = this->hierarchical_policer_stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->hierarchical_policer_stats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:FirewallStats)
}

::google::protobuf::uint8* FirewallStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:FirewallStats)
  // required string filter_name = 1;
  if (has_filter_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filter_name().data(), this->filter_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "FirewallStats.filter_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filter_name(), target);
  }

  // optional uint64 timestamp = 2;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->timestamp(), target);
  }

  // repeated .MemoryUsage memory_usage = 3;
  for (unsigned int i = 0, n = this->memory_usage_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->memory_usage(i), target);
  }

  // repeated .CounterStats counter_stats = 4;
  for (unsigned int i = 0, n = this->counter_stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->counter_stats(i), target);
  }

  // repeated .PolicerStats policer_stats = 5;
  for (unsigned int i = 0, n = this->policer_stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->policer_stats(i), target);
  }

  // repeated .HierarchicalPolicerStats hierarchical_policer_stats = 6;
  for (unsigned int i = 0, n = this->hierarchical_policer_stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->hierarchical_policer_stats(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:FirewallStats)
  return target;
}

int FirewallStats::ByteSize() const {
  int total_size = 0;

  // required string filter_name = 1;
  if (has_filter_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filter_name());
  }
  // optional uint64 timestamp = 2;
  if (has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  // repeated .MemoryUsage memory_usage = 3;
  total_size += 1 * this->memory_usage_size();
  for (int i = 0; i < this->memory_usage_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->memory_usage(i));
  }

  // repeated .CounterStats counter_stats = 4;
  total_size += 1 * this->counter_stats_size();
  for (int i = 0; i < this->counter_stats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->counter_stats(i));
  }

  // repeated .PolicerStats policer_stats = 5;
  total_size += 1 * this->policer_stats_size();
  for (int i = 0; i < this->policer_stats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->policer_stats(i));
  }

  // repeated .HierarchicalPolicerStats hierarchical_policer_stats = 6;
  total_size += 1 * this->hierarchical_policer_stats_size();
  for (int i = 0; i < this->hierarchical_policer_stats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->hierarchical_policer_stats(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FirewallStats::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FirewallStats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const FirewallStats>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FirewallStats::MergeFrom(const FirewallStats& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  memory_usage_.MergeFrom(from.memory_usage_);
  counter_stats_.MergeFrom(from.counter_stats_);
  policer_stats_.MergeFrom(from.policer_stats_);
  hierarchical_policer_stats_.MergeFrom(from.hierarchical_policer_stats_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_filter_name()) {
      set_has_filter_name();
      filter_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_name_);
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void FirewallStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FirewallStats::CopyFrom(const FirewallStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FirewallStats::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->memory_usage())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->counter_stats())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->policer_stats())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->hierarchical_policer_stats())) return false;
  return true;
}

void FirewallStats::Swap(FirewallStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FirewallStats::InternalSwap(FirewallStats* other) {
  filter_name_.Swap(&other->filter_name_);
  std::swap(timestamp_, other->timestamp_);
  memory_usage_.UnsafeArenaSwap(&other->memory_usage_);
  counter_stats_.UnsafeArenaSwap(&other->counter_stats_);
  policer_stats_.UnsafeArenaSwap(&other->policer_stats_);
  hierarchical_policer_stats_.UnsafeArenaSwap(&other->hierarchical_policer_stats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FirewallStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FirewallStats_descriptor_;
  metadata.reflection = FirewallStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FirewallStats

// required string filter_name = 1;
bool FirewallStats::has_filter_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FirewallStats::set_has_filter_name() {
  _has_bits_[0] |= 0x00000001u;
}
void FirewallStats::clear_has_filter_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void FirewallStats::clear_filter_name() {
  filter_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filter_name();
}
 const ::std::string& FirewallStats::filter_name() const {
  // @@protoc_insertion_point(field_get:FirewallStats.filter_name)
  return filter_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FirewallStats::set_filter_name(const ::std::string& value) {
  set_has_filter_name();
  filter_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:FirewallStats.filter_name)
}
 void FirewallStats::set_filter_name(const char* value) {
  set_has_filter_name();
  filter_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:FirewallStats.filter_name)
}
 void FirewallStats::set_filter_name(const char* value, size_t size) {
  set_has_filter_name();
  filter_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:FirewallStats.filter_name)
}
 ::std::string* FirewallStats::mutable_filter_name() {
  set_has_filter_name();
  // @@protoc_insertion_point(field_mutable:FirewallStats.filter_name)
  return filter_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* FirewallStats::release_filter_name() {
  clear_has_filter_name();
  return filter_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void FirewallStats::set_allocated_filter_name(::std::string* filter_name) {
  if (filter_name != NULL) {
    set_has_filter_name();
  } else {
    clear_has_filter_name();
  }
  filter_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter_name);
  // @@protoc_insertion_point(field_set_allocated:FirewallStats.filter_name)
}

// optional uint64 timestamp = 2;
bool FirewallStats::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FirewallStats::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
void FirewallStats::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
void FirewallStats::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
 ::google::protobuf::uint64 FirewallStats::timestamp() const {
  // @@protoc_insertion_point(field_get:FirewallStats.timestamp)
  return timestamp_;
}
 void FirewallStats::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:FirewallStats.timestamp)
}

// repeated .MemoryUsage memory_usage = 3;
int FirewallStats::memory_usage_size() const {
  return memory_usage_.size();
}
void FirewallStats::clear_memory_usage() {
  memory_usage_.Clear();
}
const ::MemoryUsage& FirewallStats::memory_usage(int index) const {
  // @@protoc_insertion_point(field_get:FirewallStats.memory_usage)
  return memory_usage_.Get(index);
}
::MemoryUsage* FirewallStats::mutable_memory_usage(int index) {
  // @@protoc_insertion_point(field_mutable:FirewallStats.memory_usage)
  return memory_usage_.Mutable(index);
}
::MemoryUsage* FirewallStats::add_memory_usage() {
  // @@protoc_insertion_point(field_add:FirewallStats.memory_usage)
  return memory_usage_.Add();
}
::google::protobuf::RepeatedPtrField< ::MemoryUsage >*
FirewallStats::mutable_memory_usage() {
  // @@protoc_insertion_point(field_mutable_list:FirewallStats.memory_usage)
  return &memory_usage_;
}
const ::google::protobuf::RepeatedPtrField< ::MemoryUsage >&
FirewallStats::memory_usage() const {
  // @@protoc_insertion_point(field_list:FirewallStats.memory_usage)
  return memory_usage_;
}

// repeated .CounterStats counter_stats = 4;
int FirewallStats::counter_stats_size() const {
  return counter_stats_.size();
}
void FirewallStats::clear_counter_stats() {
  counter_stats_.Clear();
}
const ::CounterStats& FirewallStats::counter_stats(int index) const {
  // @@protoc_insertion_point(field_get:FirewallStats.counter_stats)
  return counter_stats_.Get(index);
}
::CounterStats* FirewallStats::mutable_counter_stats(int index) {
  // @@protoc_insertion_point(field_mutable:FirewallStats.counter_stats)
  return counter_stats_.Mutable(index);
}
::CounterStats* FirewallStats::add_counter_stats() {
  // @@protoc_insertion_point(field_add:FirewallStats.counter_stats)
  return counter_stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::CounterStats >*
FirewallStats::mutable_counter_stats() {
  // @@protoc_insertion_point(field_mutable_list:FirewallStats.counter_stats)
  return &counter_stats_;
}
const ::google::protobuf::RepeatedPtrField< ::CounterStats >&
FirewallStats::counter_stats() const {
  // @@protoc_insertion_point(field_list:FirewallStats.counter_stats)
  return counter_stats_;
}

// repeated .PolicerStats policer_stats = 5;
int FirewallStats::policer_stats_size() const {
  return policer_stats_.size();
}
void FirewallStats::clear_policer_stats() {
  policer_stats_.Clear();
}
const ::PolicerStats& FirewallStats::policer_stats(int index) const {
  // @@protoc_insertion_point(field_get:FirewallStats.policer_stats)
  return policer_stats_.Get(index);
}
::PolicerStats* FirewallStats::mutable_policer_stats(int index) {
  // @@protoc_insertion_point(field_mutable:FirewallStats.policer_stats)
  return policer_stats_.Mutable(index);
}
::PolicerStats* FirewallStats::add_policer_stats() {
  // @@protoc_insertion_point(field_add:FirewallStats.policer_stats)
  return policer_stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::PolicerStats >*
FirewallStats::mutable_policer_stats() {
  // @@protoc_insertion_point(field_mutable_list:FirewallStats.policer_stats)
  return &policer_stats_;
}
const ::google::protobuf::RepeatedPtrField< ::PolicerStats >&
FirewallStats::policer_stats() const {
  // @@protoc_insertion_point(field_list:FirewallStats.policer_stats)
  return policer_stats_;
}

// repeated .HierarchicalPolicerStats hierarchical_policer_stats = 6;
int FirewallStats::hierarchical_policer_stats_size() const {
  return hierarchical_policer_stats_.size();
}
void FirewallStats::clear_hierarchical_policer_stats() {
  hierarchical_policer_stats_.Clear();
}
const ::HierarchicalPolicerStats& FirewallStats::hierarchical_policer_stats(int index) const {
  // @@protoc_insertion_point(field_get:FirewallStats.hierarchical_policer_stats)
  return hierarchical_policer_stats_.Get(index);
}
::HierarchicalPolicerStats* FirewallStats::mutable_hierarchical_policer_stats(int index) {
  // @@protoc_insertion_point(field_mutable:FirewallStats.hierarchical_policer_stats)
  return hierarchical_policer_stats_.Mutable(index);
}
::HierarchicalPolicerStats* FirewallStats::add_hierarchical_policer_stats() {
  // @@protoc_insertion_point(field_add:FirewallStats.hierarchical_policer_stats)
  return hierarchical_policer_stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::HierarchicalPolicerStats >*
FirewallStats::mutable_hierarchical_policer_stats() {
  // @@protoc_insertion_point(field_mutable_list:FirewallStats.hierarchical_policer_stats)
  return &hierarchical_policer_stats_;
}
const ::google::protobuf::RepeatedPtrField< ::HierarchicalPolicerStats >&
FirewallStats::hierarchical_policer_stats() const {
  // @@protoc_insertion_point(field_list:FirewallStats.hierarchical_policer_stats)
  return hierarchical_policer_stats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int MemoryUsage::kNameFieldNumber;
const int MemoryUsage::kAllocatedFieldNumber;
#endif  // !_MSC_VER

MemoryUsage::MemoryUsage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MemoryUsage)
}

void MemoryUsage::InitAsDefaultInstance() {
}

MemoryUsage::MemoryUsage(const MemoryUsage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MemoryUsage)
}

void MemoryUsage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allocated_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MemoryUsage::~MemoryUsage() {
  // @@protoc_insertion_point(destructor:MemoryUsage)
  SharedDtor();
}

void MemoryUsage::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void MemoryUsage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MemoryUsage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MemoryUsage_descriptor_;
}

const MemoryUsage& MemoryUsage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_firewall_2eproto();
  return *default_instance_;
}

MemoryUsage* MemoryUsage::default_instance_ = NULL;

MemoryUsage* MemoryUsage::New(::google::protobuf::Arena* arena) const {
  MemoryUsage* n = new MemoryUsage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MemoryUsage::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    allocated_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MemoryUsage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MemoryUsage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MemoryUsage.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_allocated;
        break;
      }

      // optional uint64 allocated = 2;
      case 2: {
        if (tag == 16) {
         parse_allocated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &allocated_)));
          set_has_allocated();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MemoryUsage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MemoryUsage)
  return false;
#undef DO_
}

void MemoryUsage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MemoryUsage)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MemoryUsage.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 allocated = 2;
  if (has_allocated()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->allocated(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MemoryUsage)
}

::google::protobuf::uint8* MemoryUsage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MemoryUsage)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MemoryUsage.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 allocated = 2;
  if (has_allocated()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->allocated(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MemoryUsage)
  return target;
}

int MemoryUsage::ByteSize() const {
  int total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // optional uint64 allocated = 2;
  if (has_allocated()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->allocated());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MemoryUsage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MemoryUsage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MemoryUsage>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MemoryUsage::MergeFrom(const MemoryUsage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_allocated()) {
      set_allocated(from.allocated());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MemoryUsage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MemoryUsage::CopyFrom(const MemoryUsage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MemoryUsage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void MemoryUsage::Swap(MemoryUsage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MemoryUsage::InternalSwap(MemoryUsage* other) {
  name_.Swap(&other->name_);
  std::swap(allocated_, other->allocated_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MemoryUsage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MemoryUsage_descriptor_;
  metadata.reflection = MemoryUsage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MemoryUsage

// required string name = 1;
bool MemoryUsage::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MemoryUsage::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void MemoryUsage::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void MemoryUsage::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& MemoryUsage::name() const {
  // @@protoc_insertion_point(field_get:MemoryUsage.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MemoryUsage::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MemoryUsage.name)
}
 void MemoryUsage::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MemoryUsage.name)
}
 void MemoryUsage::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MemoryUsage.name)
}
 ::std::string* MemoryUsage::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MemoryUsage.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* MemoryUsage::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void MemoryUsage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MemoryUsage.name)
}

// optional uint64 allocated = 2;
bool MemoryUsage::has_allocated() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MemoryUsage::set_has_allocated() {
  _has_bits_[0] |= 0x00000002u;
}
void MemoryUsage::clear_has_allocated() {
  _has_bits_[0] &= ~0x00000002u;
}
void MemoryUsage::clear_allocated() {
  allocated_ = GOOGLE_ULONGLONG(0);
  clear_has_allocated();
}
 ::google::protobuf::uint64 MemoryUsage::allocated() const {
  // @@protoc_insertion_point(field_get:MemoryUsage.allocated)
  return allocated_;
}
 void MemoryUsage::set_allocated(::google::protobuf::uint64 value) {
  set_has_allocated();
  allocated_ = value;
  // @@protoc_insertion_point(field_set:MemoryUsage.allocated)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CounterStats::kNameFieldNumber;
const int CounterStats::kPacketsFieldNumber;
const int CounterStats::kBytesFieldNumber;
#endif  // !_MSC_VER

CounterStats::CounterStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CounterStats)
}

void CounterStats::InitAsDefaultInstance() {
}

CounterStats::CounterStats(const CounterStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CounterStats)
}

void CounterStats::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  packets_ = GOOGLE_ULONGLONG(0);
  bytes_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CounterStats::~CounterStats() {
  // @@protoc_insertion_point(destructor:CounterStats)
  SharedDtor();
}

void CounterStats::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CounterStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CounterStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CounterStats_descriptor_;
}

const CounterStats& CounterStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_firewall_2eproto();
  return *default_instance_;
}

CounterStats* CounterStats::default_instance_ = NULL;

CounterStats* CounterStats::New(::google::protobuf::Arena* arena) const {
  CounterStats* n = new CounterStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CounterStats::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CounterStats*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(packets_, bytes_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CounterStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CounterStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CounterStats.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_packets;
        break;
      }

      // optional uint64 packets = 2;
      case 2: {
        if (tag == 16) {
         parse_packets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &packets_)));
          set_has_packets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_bytes;
        break;
      }

      // optional uint64 bytes = 3;
      case 3: {
        if (tag == 24) {
         parse_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_)));
          set_has_bytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CounterStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CounterStats)
  return false;
#undef DO_
}

void CounterStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CounterStats)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CounterStats.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 packets = 2;
  if (has_packets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->packets(), output);
  }

  // optional uint64 bytes = 3;
  if (has_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->bytes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CounterStats)
}

::google::protobuf::uint8* CounterStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CounterStats)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CounterStats.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 packets = 2;
  if (has_packets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->packets(), target);
  }

  // optional uint64 bytes = 3;
  if (has_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->bytes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CounterStats)
  return target;
}

int CounterStats::ByteSize() const {
  int total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  if (_has_bits_[1 / 32] & 6u) {
    // optional uint64 packets = 2;
    if (has_packets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->packets());
    }

    // optional uint64 bytes = 3;
    if (has_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CounterStats::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CounterStats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CounterStats>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CounterStats::MergeFrom(const CounterStats& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_packets()) {
      set_packets(from.packets());
    }
    if (from.has_bytes()) {
      set_bytes(from.bytes());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CounterStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CounterStats::CopyFrom(const CounterStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CounterStats::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void CounterStats::Swap(CounterStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CounterStats::InternalSwap(CounterStats* other) {
  name_.Swap(&other->name_);
  std::swap(packets_, other->packets_);
  std::swap(bytes_, other->bytes_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CounterStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CounterStats_descriptor_;
  metadata.reflection = CounterStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CounterStats

// required string name = 1;
bool CounterStats::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CounterStats::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CounterStats::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CounterStats::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CounterStats::name() const {
  // @@protoc_insertion_point(field_get:CounterStats.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CounterStats::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CounterStats.name)
}
 void CounterStats::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CounterStats.name)
}
 void CounterStats::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CounterStats.name)
}
 ::std::string* CounterStats::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CounterStats.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CounterStats::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CounterStats::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CounterStats.name)
}

// optional uint64 packets = 2;
bool CounterStats::has_packets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CounterStats::set_has_packets() {
  _has_bits_[0] |= 0x00000002u;
}
void CounterStats::clear_has_packets() {
  _has_bits_[0] &= ~0x00000002u;
}
void CounterStats::clear_packets() {
  packets_ = GOOGLE_ULONGLONG(0);
  clear_has_packets();
}
 ::google::protobuf::uint64 CounterStats::packets() const {
  // @@protoc_insertion_point(field_get:CounterStats.packets)
  return packets_;
}
 void CounterStats::set_packets(::google::protobuf::uint64 value) {
  set_has_packets();
  packets_ = value;
  // @@protoc_insertion_point(field_set:CounterStats.packets)
}

// optional uint64 bytes = 3;
bool CounterStats::has_bytes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CounterStats::set_has_bytes() {
  _has_bits_[0] |= 0x00000004u;
}
void CounterStats::clear_has_bytes() {
  _has_bits_[0] &= ~0x00000004u;
}
void CounterStats::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes();
}
 ::google::protobuf::uint64 CounterStats::bytes() const {
  // @@protoc_insertion_point(field_get:CounterStats.bytes)
  return bytes_;
}
 void CounterStats::set_bytes(::google::protobuf::uint64 value) {
  set_has_bytes();
  bytes_ = value;
  // @@protoc_insertion_point(field_set:CounterStats.bytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int PolicerStats::kNameFieldNumber;
const int PolicerStats::kOutOfSpecPacketsFieldNumber;
const int PolicerStats::kOutOfSpecBytesFieldNumber;
const int PolicerStats::kExtendedPolicerStatsFieldNumber;
#endif  // !_MSC_VER

PolicerStats::PolicerStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PolicerStats)
}

void PolicerStats::InitAsDefaultInstance() {
  extended_policer_stats_ = const_cast< ::ExtendedPolicerStats*>(&::ExtendedPolicerStats::default_instance());
}

PolicerStats::PolicerStats(const PolicerStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PolicerStats)
}

void PolicerStats::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  out_of_spec_packets_ = GOOGLE_ULONGLONG(0);
  out_of_spec_bytes_ = GOOGLE_ULONGLONG(0);
  extended_policer_stats_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PolicerStats::~PolicerStats() {
  // @@protoc_insertion_point(destructor:PolicerStats)
  SharedDtor();
}

void PolicerStats::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete extended_policer_stats_;
  }
}

void PolicerStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PolicerStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PolicerStats_descriptor_;
}

const PolicerStats& PolicerStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_firewall_2eproto();
  return *default_instance_;
}

PolicerStats* PolicerStats::default_instance_ = NULL;

PolicerStats* PolicerStats::New(::google::protobuf::Arena* arena) const {
  PolicerStats* n = new PolicerStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PolicerStats::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PolicerStats*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(out_of_spec_packets_, out_of_spec_bytes_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_extended_policer_stats()) {
      if (extended_policer_stats_ != NULL) extended_policer_stats_->::ExtendedPolicerStats::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PolicerStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PolicerStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PolicerStats.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_out_of_spec_packets;
        break;
      }

      // optional uint64 out_of_spec_packets = 2;
      case 2: {
        if (tag == 16) {
         parse_out_of_spec_packets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &out_of_spec_packets_)));
          set_has_out_of_spec_packets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_out_of_spec_bytes;
        break;
      }

      // optional uint64 out_of_spec_bytes = 3;
      case 3: {
        if (tag == 24) {
         parse_out_of_spec_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &out_of_spec_bytes_)));
          set_has_out_of_spec_bytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_extended_policer_stats;
        break;
      }

      // optional .ExtendedPolicerStats extended_policer_stats = 4;
      case 4: {
        if (tag == 34) {
         parse_extended_policer_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extended_policer_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PolicerStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PolicerStats)
  return false;
#undef DO_
}

void PolicerStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PolicerStats)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PolicerStats.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 out_of_spec_packets = 2;
  if (has_out_of_spec_packets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->out_of_spec_packets(), output);
  }

  // optional uint64 out_of_spec_bytes = 3;
  if (has_out_of_spec_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->out_of_spec_bytes(), output);
  }

  // optional .ExtendedPolicerStats extended_policer_stats = 4;
  if (has_extended_policer_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->extended_policer_stats_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PolicerStats)
}

::google::protobuf::uint8* PolicerStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PolicerStats)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PolicerStats.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 out_of_spec_packets = 2;
  if (has_out_of_spec_packets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->out_of_spec_packets(), target);
  }

  // optional uint64 out_of_spec_bytes = 3;
  if (has_out_of_spec_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->out_of_spec_bytes(), target);
  }

  // optional .ExtendedPolicerStats extended_policer_stats = 4;
  if (has_extended_policer_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->extended_policer_stats_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PolicerStats)
  return target;
}

int PolicerStats::ByteSize() const {
  int total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  if (_has_bits_[1 / 32] & 14u) {
    // optional uint64 out_of_spec_packets = 2;
    if (has_out_of_spec_packets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->out_of_spec_packets());
    }

    // optional uint64 out_of_spec_bytes = 3;
    if (has_out_of_spec_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->out_of_spec_bytes());
    }

    // optional .ExtendedPolicerStats extended_policer_stats = 4;
    if (has_extended_policer_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->extended_policer_stats_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PolicerStats::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PolicerStats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PolicerStats>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PolicerStats::MergeFrom(const PolicerStats& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_out_of_spec_packets()) {
      set_out_of_spec_packets(from.out_of_spec_packets());
    }
    if (from.has_out_of_spec_bytes()) {
      set_out_of_spec_bytes(from.out_of_spec_bytes());
    }
    if (from.has_extended_policer_stats()) {
      mutable_extended_policer_stats()->::ExtendedPolicerStats::MergeFrom(from.extended_policer_stats());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PolicerStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PolicerStats::CopyFrom(const PolicerStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PolicerStats::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PolicerStats::Swap(PolicerStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PolicerStats::InternalSwap(PolicerStats* other) {
  name_.Swap(&other->name_);
  std::swap(out_of_spec_packets_, other->out_of_spec_packets_);
  std::swap(out_of_spec_bytes_, other->out_of_spec_bytes_);
  std::swap(extended_policer_stats_, other->extended_policer_stats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PolicerStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PolicerStats_descriptor_;
  metadata.reflection = PolicerStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PolicerStats

// required string name = 1;
bool PolicerStats::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PolicerStats::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void PolicerStats::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void PolicerStats::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& PolicerStats::name() const {
  // @@protoc_insertion_point(field_get:PolicerStats.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PolicerStats::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PolicerStats.name)
}
 void PolicerStats::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PolicerStats.name)
}
 void PolicerStats::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PolicerStats.name)
}
 ::std::string* PolicerStats::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:PolicerStats.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PolicerStats::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PolicerStats::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PolicerStats.name)
}

// optional uint64 out_of_spec_packets = 2;
bool PolicerStats::has_out_of_spec_packets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PolicerStats::set_has_out_of_spec_packets() {
  _has_bits_[0] |= 0x00000002u;
}
void PolicerStats::clear_has_out_of_spec_packets() {
  _has_bits_[0] &= ~0x00000002u;
}
void PolicerStats::clear_out_of_spec_packets() {
  out_of_spec_packets_ = GOOGLE_ULONGLONG(0);
  clear_has_out_of_spec_packets();
}
 ::google::protobuf::uint64 PolicerStats::out_of_spec_packets() const {
  // @@protoc_insertion_point(field_get:PolicerStats.out_of_spec_packets)
  return out_of_spec_packets_;
}
 void PolicerStats::set_out_of_spec_packets(::google::protobuf::uint64 value) {
  set_has_out_of_spec_packets();
  out_of_spec_packets_ = value;
  // @@protoc_insertion_point(field_set:PolicerStats.out_of_spec_packets)
}

// optional uint64 out_of_spec_bytes = 3;
bool PolicerStats::has_out_of_spec_bytes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PolicerStats::set_has_out_of_spec_bytes() {
  _has_bits_[0] |= 0x00000004u;
}
void PolicerStats::clear_has_out_of_spec_bytes() {
  _has_bits_[0] &= ~0x00000004u;
}
void PolicerStats::clear_out_of_spec_bytes() {
  out_of_spec_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_out_of_spec_bytes();
}
 ::google::protobuf::uint64 PolicerStats::out_of_spec_bytes() const {
  // @@protoc_insertion_point(field_get:PolicerStats.out_of_spec_bytes)
  return out_of_spec_bytes_;
}
 void PolicerStats::set_out_of_spec_bytes(::google::protobuf::uint64 value) {
  set_has_out_of_spec_bytes();
  out_of_spec_bytes_ = value;
  // @@protoc_insertion_point(field_set:PolicerStats.out_of_spec_bytes)
}

// optional .ExtendedPolicerStats extended_policer_stats = 4;
bool PolicerStats::has_extended_policer_stats() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PolicerStats::set_has_extended_policer_stats() {
  _has_bits_[0] |= 0x00000008u;
}
void PolicerStats::clear_has_extended_policer_stats() {
  _has_bits_[0] &= ~0x00000008u;
}
void PolicerStats::clear_extended_policer_stats() {
  if (extended_policer_stats_ != NULL) extended_policer_stats_->::ExtendedPolicerStats::Clear();
  clear_has_extended_policer_stats();
}
const ::ExtendedPolicerStats& PolicerStats::extended_policer_stats() const {
  // @@protoc_insertion_point(field_get:PolicerStats.extended_policer_stats)
  return extended_policer_stats_ != NULL ? *extended_policer_stats_ : *default_instance_->extended_policer_stats_;
}
::ExtendedPolicerStats* PolicerStats::mutable_extended_policer_stats() {
  set_has_extended_policer_stats();
  if (extended_policer_stats_ == NULL) {
    extended_policer_stats_ = new ::ExtendedPolicerStats;
  }
  // @@protoc_insertion_point(field_mutable:PolicerStats.extended_policer_stats)
  return extended_policer_stats_;
}
::ExtendedPolicerStats* PolicerStats::release_extended_policer_stats() {
  clear_has_extended_policer_stats();
  ::ExtendedPolicerStats* temp = extended_policer_stats_;
  extended_policer_stats_ = NULL;
  return temp;
}
void PolicerStats::set_allocated_extended_policer_stats(::ExtendedPolicerStats* extended_policer_stats) {
  delete extended_policer_stats_;
  extended_policer_stats_ = extended_policer_stats;
  if (extended_policer_stats) {
    set_has_extended_policer_stats();
  } else {
    clear_has_extended_policer_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:PolicerStats.extended_policer_stats)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int ExtendedPolicerStats::kOfferedPacketsFieldNumber;
const int ExtendedPolicerStats::kOfferedBytesFieldNumber;
const int ExtendedPolicerStats::kTransmittedPacketsFieldNumber;
const int ExtendedPolicerStats::kTransmittedBytesFieldNumber;
#endif  // !_MSC_VER

ExtendedPolicerStats::ExtendedPolicerStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ExtendedPolicerStats)
}

void ExtendedPolicerStats::InitAsDefaultInstance() {
}

ExtendedPolicerStats::ExtendedPolicerStats(const ExtendedPolicerStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ExtendedPolicerStats)
}

void ExtendedPolicerStats::SharedCtor() {
  _cached_size_ = 0;
  offered_packets_ = GOOGLE_ULONGLONG(0);
  offered_bytes_ = GOOGLE_ULONGLONG(0);
  transmitted_packets_ = GOOGLE_ULONGLONG(0);
  transmitted_bytes_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExtendedPolicerStats::~ExtendedPolicerStats() {
  // @@protoc_insertion_point(destructor:ExtendedPolicerStats)
  SharedDtor();
}

void ExtendedPolicerStats::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExtendedPolicerStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExtendedPolicerStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExtendedPolicerStats_descriptor_;
}

const ExtendedPolicerStats& ExtendedPolicerStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_firewall_2eproto();
  return *default_instance_;
}

ExtendedPolicerStats* ExtendedPolicerStats::default_instance_ = NULL;

ExtendedPolicerStats* ExtendedPolicerStats::New(::google::protobuf::Arena* arena) const {
  ExtendedPolicerStats* n = new ExtendedPolicerStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExtendedPolicerStats::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ExtendedPolicerStats*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(offered_packets_, transmitted_bytes_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ExtendedPolicerStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ExtendedPolicerStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 offered_packets = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offered_packets_)));
          set_has_offered_packets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_offered_bytes;
        break;
      }

      // optional uint64 offered_bytes = 2;
      case 2: {
        if (tag == 16) {
         parse_offered_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offered_bytes_)));
          set_has_offered_bytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_transmitted_packets;
        break;
      }

      // optional uint64 transmitted_packets = 3;
      case 3: {
        if (tag == 24) {
         parse_transmitted_packets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &transmitted_packets_)));
          set_has_transmitted_packets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_transmitted_bytes;
        break;
      }

      // optional uint64 transmitted_bytes = 4;
      case 4: {
        if (tag == 32) {
         parse_transmitted_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &transmitted_bytes_)));
          set_has_transmitted_bytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ExtendedPolicerStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ExtendedPolicerStats)
  return false;
#undef DO_
}

void ExtendedPolicerStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ExtendedPolicerStats)
  // optional uint64 offered_packets = 1;
  if (has_offered_packets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->offered_packets(), output);
  }

  // optional uint64 offered_bytes = 2;
  if (has_offered_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->offered_bytes(), output);
  }

  // optional uint64 transmitted_packets = 3;
  if (has_transmitted_packets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->transmitted_packets(), output);
  }

  // optional uint64 transmitted_bytes = 4;
  if (has_transmitted_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->transmitted_bytes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ExtendedPolicerStats)
}

::google::protobuf::uint8* ExtendedPolicerStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExtendedPolicerStats)
  // optional uint64 offered_packets = 1;
  if (has_offered_packets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->offered_packets(), target);
  }

  // optional uint64 offered_bytes = 2;
  if (has_offered_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->offered_bytes(), target);
  }

  // optional uint64 transmitted_packets = 3;
  if (has_transmitted_packets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->transmitted_packets(), target);
  }

  // optional uint64 transmitted_bytes = 4;
  if (has_transmitted_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->transmitted_bytes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ExtendedPolicerStats)
  return target;
}

int ExtendedPolicerStats::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 offered_packets = 1;
    if (has_offered_packets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offered_packets());
    }

    // optional uint64 offered_bytes = 2;
    if (has_offered_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offered_bytes());
    }

    // optional uint64 transmitted_packets = 3;
    if (has_transmitted_packets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->transmitted_packets());
    }

    // optional uint64 transmitted_bytes = 4;
    if (has_transmitted_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->transmitted_bytes());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExtendedPolicerStats::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ExtendedPolicerStats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExtendedPolicerStats>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExtendedPolicerStats::MergeFrom(const ExtendedPolicerStats& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_offered_packets()) {
      set_offered_packets(from.offered_packets());
    }
    if (from.has_offered_bytes()) {
      set_offered_bytes(from.offered_bytes());
    }
    if (from.has_transmitted_packets()) {
      set_transmitted_packets(from.transmitted_packets());
    }
    if (from.has_transmitted_bytes()) {
      set_transmitted_bytes(from.transmitted_bytes());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ExtendedPolicerStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtendedPolicerStats::CopyFrom(const ExtendedPolicerStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtendedPolicerStats::IsInitialized() const {

  return true;
}

void ExtendedPolicerStats::Swap(ExtendedPolicerStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExtendedPolicerStats::InternalSwap(ExtendedPolicerStats* other) {
  std::swap(offered_packets_, other->offered_packets_);
  std::swap(offered_bytes_, other->offered_bytes_);
  std::swap(transmitted_packets_, other->transmitted_packets_);
  std::swap(transmitted_bytes_, other->transmitted_bytes_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExtendedPolicerStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExtendedPolicerStats_descriptor_;
  metadata.reflection = ExtendedPolicerStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExtendedPolicerStats

// optional uint64 offered_packets = 1;
bool ExtendedPolicerStats::has_offered_packets() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ExtendedPolicerStats::set_has_offered_packets() {
  _has_bits_[0] |= 0x00000001u;
}
void ExtendedPolicerStats::clear_has_offered_packets() {
  _has_bits_[0] &= ~0x00000001u;
}
void ExtendedPolicerStats::clear_offered_packets() {
  offered_packets_ = GOOGLE_ULONGLONG(0);
  clear_has_offered_packets();
}
 ::google::protobuf::uint64 ExtendedPolicerStats::offered_packets() const {
  // @@protoc_insertion_point(field_get:ExtendedPolicerStats.offered_packets)
  return offered_packets_;
}
 void ExtendedPolicerStats::set_offered_packets(::google::protobuf::uint64 value) {
  set_has_offered_packets();
  offered_packets_ = value;
  // @@protoc_insertion_point(field_set:ExtendedPolicerStats.offered_packets)
}

// optional uint64 offered_bytes = 2;
bool ExtendedPolicerStats::has_offered_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ExtendedPolicerStats::set_has_offered_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
void ExtendedPolicerStats::clear_has_offered_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
void ExtendedPolicerStats::clear_offered_bytes() {
  offered_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_offered_bytes();
}
 ::google::protobuf::uint64 ExtendedPolicerStats::offered_bytes() const {
  // @@protoc_insertion_point(field_get:ExtendedPolicerStats.offered_bytes)
  return offered_bytes_;
}
 void ExtendedPolicerStats::set_offered_bytes(::google::protobuf::uint64 value) {
  set_has_offered_bytes();
  offered_bytes_ = value;
  // @@protoc_insertion_point(field_set:ExtendedPolicerStats.offered_bytes)
}

// optional uint64 transmitted_packets = 3;
bool ExtendedPolicerStats::has_transmitted_packets() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ExtendedPolicerStats::set_has_transmitted_packets() {
  _has_bits_[0] |= 0x00000004u;
}
void ExtendedPolicerStats::clear_has_transmitted_packets() {
  _has_bits_[0] &= ~0x00000004u;
}
void ExtendedPolicerStats::clear_transmitted_packets() {
  transmitted_packets_ = GOOGLE_ULONGLONG(0);
  clear_has_transmitted_packets();
}
 ::google::protobuf::uint64 ExtendedPolicerStats::transmitted_packets() const {
  // @@protoc_insertion_point(field_get:ExtendedPolicerStats.transmitted_packets)
  return transmitted_packets_;
}
 void ExtendedPolicerStats::set_transmitted_packets(::google::protobuf::uint64 value) {
  set_has_transmitted_packets();
  transmitted_packets_ = value;
  // @@protoc_insertion_point(field_set:ExtendedPolicerStats.transmitted_packets)
}

// optional uint64 transmitted_bytes = 4;
bool ExtendedPolicerStats::has_transmitted_bytes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ExtendedPolicerStats::set_has_transmitted_bytes() {
  _has_bits_[0] |= 0x00000008u;
}
void ExtendedPolicerStats::clear_has_transmitted_bytes() {
  _has_bits_[0] &= ~0x00000008u;
}
void ExtendedPolicerStats::clear_transmitted_bytes() {
  transmitted_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_transmitted_bytes();
}
 ::google::protobuf::uint64 ExtendedPolicerStats::transmitted_bytes() const {
  // @@protoc_insertion_point(field_get:ExtendedPolicerStats.transmitted_bytes)
  return transmitted_bytes_;
}
 void ExtendedPolicerStats::set_transmitted_bytes(::google::protobuf::uint64 value) {
  set_has_transmitted_bytes();
  transmitted_bytes_ = value;
  // @@protoc_insertion_point(field_set:ExtendedPolicerStats.transmitted_bytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int HierarchicalPolicerStats::kNameFieldNumber;
const int HierarchicalPolicerStats::kPremiumPacketsFieldNumber;
const int HierarchicalPolicerStats::kPremiumBytesFieldNumber;
const int HierarchicalPolicerStats::kAggregatePacketsFieldNumber;
const int HierarchicalPolicerStats::kAggregateBytesFieldNumber;
#endif  // !_MSC_VER

HierarchicalPolicerStats::HierarchicalPolicerStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HierarchicalPolicerStats)
}

void HierarchicalPolicerStats::InitAsDefaultInstance() {
}

HierarchicalPolicerStats::HierarchicalPolicerStats(const HierarchicalPolicerStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:HierarchicalPolicerStats)
}

void HierarchicalPolicerStats::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  premium_packets_ = GOOGLE_ULONGLONG(0);
  premium_bytes_ = GOOGLE_ULONGLONG(0);
  aggregate_packets_ = GOOGLE_ULONGLONG(0);
  aggregate_bytes_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HierarchicalPolicerStats::~HierarchicalPolicerStats() {
  // @@protoc_insertion_point(destructor:HierarchicalPolicerStats)
  SharedDtor();
}

void HierarchicalPolicerStats::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HierarchicalPolicerStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HierarchicalPolicerStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HierarchicalPolicerStats_descriptor_;
}

const HierarchicalPolicerStats& HierarchicalPolicerStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_firewall_2eproto();
  return *default_instance_;
}

HierarchicalPolicerStats* HierarchicalPolicerStats::default_instance_ = NULL;

HierarchicalPolicerStats* HierarchicalPolicerStats::New(::google::protobuf::Arena* arena) const {
  HierarchicalPolicerStats* n = new HierarchicalPolicerStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HierarchicalPolicerStats::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HierarchicalPolicerStats*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(premium_packets_, aggregate_bytes_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HierarchicalPolicerStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HierarchicalPolicerStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "HierarchicalPolicerStats.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_premium_packets;
        break;
      }

      // optional uint64 premium_packets = 2;
      case 2: {
        if (tag == 16) {
         parse_premium_packets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &premium_packets_)));
          set_has_premium_packets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_premium_bytes;
        break;
      }

      // optional uint64 premium_bytes = 3;
      case 3: {
        if (tag == 24) {
         parse_premium_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &premium_bytes_)));
          set_has_premium_bytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_aggregate_packets;
        break;
      }

      // optional uint64 aggregate_packets = 4;
      case 4: {
        if (tag == 32) {
         parse_aggregate_packets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &aggregate_packets_)));
          set_has_aggregate_packets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_aggregate_bytes;
        break;
      }

      // optional uint64 aggregate_bytes = 5;
      case 5: {
        if (tag == 40) {
         parse_aggregate_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &aggregate_bytes_)));
          set_has_aggregate_bytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HierarchicalPolicerStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HierarchicalPolicerStats)
  return false;
#undef DO_
}

void HierarchicalPolicerStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HierarchicalPolicerStats)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "HierarchicalPolicerStats.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 premium_packets = 2;
  if (has_premium_packets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->premium_packets(), output);
  }

  // optional uint64 premium_bytes = 3;
  if (has_premium_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->premium_bytes(), output);
  }

  // optional uint64 aggregate_packets = 4;
  if (has_aggregate_packets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->aggregate_packets(), output);
  }

  // optional uint64 aggregate_bytes = 5;
  if (has_aggregate_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->aggregate_bytes(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HierarchicalPolicerStats)
}

::google::protobuf::uint8* HierarchicalPolicerStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HierarchicalPolicerStats)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "HierarchicalPolicerStats.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 premium_packets = 2;
  if (has_premium_packets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->premium_packets(), target);
  }

  // optional uint64 premium_bytes = 3;
  if (has_premium_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->premium_bytes(), target);
  }

  // optional uint64 aggregate_packets = 4;
  if (has_aggregate_packets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->aggregate_packets(), target);
  }

  // optional uint64 aggregate_bytes = 5;
  if (has_aggregate_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->aggregate_bytes(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HierarchicalPolicerStats)
  return target;
}

int HierarchicalPolicerStats::ByteSize() const {
  int total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  if (_has_bits_[1 / 32] & 30u) {
    // optional uint64 premium_packets = 2;
    if (has_premium_packets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->premium_packets());
    }

    // optional uint64 premium_bytes = 3;
    if (has_premium_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->premium_bytes());
    }

    // optional uint64 aggregate_packets = 4;
    if (has_aggregate_packets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->aggregate_packets());
    }

    // optional uint64 aggregate_bytes = 5;
    if (has_aggregate_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->aggregate_bytes());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HierarchicalPolicerStats::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HierarchicalPolicerStats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HierarchicalPolicerStats>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HierarchicalPolicerStats::MergeFrom(const HierarchicalPolicerStats& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_premium_packets()) {
      set_premium_packets(from.premium_packets());
    }
    if (from.has_premium_bytes()) {
      set_premium_bytes(from.premium_bytes());
    }
    if (from.has_aggregate_packets()) {
      set_aggregate_packets(from.aggregate_packets());
    }
    if (from.has_aggregate_bytes()) {
      set_aggregate_bytes(from.aggregate_bytes());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HierarchicalPolicerStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HierarchicalPolicerStats::CopyFrom(const HierarchicalPolicerStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HierarchicalPolicerStats::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void HierarchicalPolicerStats::Swap(HierarchicalPolicerStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HierarchicalPolicerStats::InternalSwap(HierarchicalPolicerStats* other) {
  name_.Swap(&other->name_);
  std::swap(premium_packets_, other->premium_packets_);
  std::swap(premium_bytes_, other->premium_bytes_);
  std::swap(aggregate_packets_, other->aggregate_packets_);
  std::swap(aggregate_bytes_, other->aggregate_bytes_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HierarchicalPolicerStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HierarchicalPolicerStats_descriptor_;
  metadata.reflection = HierarchicalPolicerStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HierarchicalPolicerStats

// required string name = 1;
bool HierarchicalPolicerStats::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HierarchicalPolicerStats::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void HierarchicalPolicerStats::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void HierarchicalPolicerStats::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& HierarchicalPolicerStats::name() const {
  // @@protoc_insertion_point(field_get:HierarchicalPolicerStats.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HierarchicalPolicerStats::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:HierarchicalPolicerStats.name)
}
 void HierarchicalPolicerStats::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:HierarchicalPolicerStats.name)
}
 void HierarchicalPolicerStats::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:HierarchicalPolicerStats.name)
}
 ::std::string* HierarchicalPolicerStats::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:HierarchicalPolicerStats.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HierarchicalPolicerStats::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HierarchicalPolicerStats::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:HierarchicalPolicerStats.name)
}

// optional uint64 premium_packets = 2;
bool HierarchicalPolicerStats::has_premium_packets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HierarchicalPolicerStats::set_has_premium_packets() {
  _has_bits_[0] |= 0x00000002u;
}
void HierarchicalPolicerStats::clear_has_premium_packets() {
  _has_bits_[0] &= ~0x00000002u;
}
void HierarchicalPolicerStats::clear_premium_packets() {
  premium_packets_ = GOOGLE_ULONGLONG(0);
  clear_has_premium_packets();
}
 ::google::protobuf::uint64 HierarchicalPolicerStats::premium_packets() const {
  // @@protoc_insertion_point(field_get:HierarchicalPolicerStats.premium_packets)
  return premium_packets_;
}
 void HierarchicalPolicerStats::set_premium_packets(::google::protobuf::uint64 value) {
  set_has_premium_packets();
  premium_packets_ = value;
  // @@protoc_insertion_point(field_set:HierarchicalPolicerStats.premium_packets)
}

// optional uint64 premium_bytes = 3;
bool HierarchicalPolicerStats::has_premium_bytes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HierarchicalPolicerStats::set_has_premium_bytes() {
  _has_bits_[0] |= 0x00000004u;
}
void HierarchicalPolicerStats::clear_has_premium_bytes() {
  _has_bits_[0] &= ~0x00000004u;
}
void HierarchicalPolicerStats::clear_premium_bytes() {
  premium_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_premium_bytes();
}
 ::google::protobuf::uint64 HierarchicalPolicerStats::premium_bytes() const {
  // @@protoc_insertion_point(field_get:HierarchicalPolicerStats.premium_bytes)
  return premium_bytes_;
}
 void HierarchicalPolicerStats::set_premium_bytes(::google::protobuf::uint64 value) {
  set_has_premium_bytes();
  premium_bytes_ = value;
  // @@protoc_insertion_point(field_set:HierarchicalPolicerStats.premium_bytes)
}

// optional uint64 aggregate_packets = 4;
bool HierarchicalPolicerStats::has_aggregate_packets() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HierarchicalPolicerStats::set_has_aggregate_packets() {
  _has_bits_[0] |= 0x00000008u;
}
void HierarchicalPolicerStats::clear_has_aggregate_packets() {
  _has_bits_[0] &= ~0x00000008u;
}
void HierarchicalPolicerStats::clear_aggregate_packets() {
  aggregate_packets_ = GOOGLE_ULONGLONG(0);
  clear_has_aggregate_packets();
}
 ::google::protobuf::uint64 HierarchicalPolicerStats::aggregate_packets() const {
  // @@protoc_insertion_point(field_get:HierarchicalPolicerStats.aggregate_packets)
  return aggregate_packets_;
}
 void HierarchicalPolicerStats::set_aggregate_packets(::google::protobuf::uint64 value) {
  set_has_aggregate_packets();
  aggregate_packets_ = value;
  // @@protoc_insertion_point(field_set:HierarchicalPolicerStats.aggregate_packets)
}

// optional uint64 aggregate_bytes = 5;
bool HierarchicalPolicerStats::has_aggregate_bytes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void HierarchicalPolicerStats::set_has_aggregate_bytes() {
  _has_bits_[0] |= 0x00000010u;
}
void HierarchicalPolicerStats::clear_has_aggregate_bytes() {
  _has_bits_[0] &= ~0x00000010u;
}
void HierarchicalPolicerStats::clear_aggregate_bytes() {
  aggregate_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_aggregate_bytes();
}
 ::google::protobuf::uint64 HierarchicalPolicerStats::aggregate_bytes() const {
  // @@protoc_insertion_point(field_get:HierarchicalPolicerStats.aggregate_bytes)
  return aggregate_bytes_;
}
 void HierarchicalPolicerStats::set_aggregate_bytes(::google::protobuf::uint64 value) {
  set_has_aggregate_bytes();
  aggregate_bytes_ = value;
  // @@protoc_insertion_point(field_set:HierarchicalPolicerStats.aggregate_bytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::JuniperNetworksSensors,
    ::google::protobuf::internal::MessageTypeTraits< ::Firewall >, 11, false >
  jnpr_firewall_ext(kJnprFirewallExtFieldNumber, ::Firewall::default_instance());

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
