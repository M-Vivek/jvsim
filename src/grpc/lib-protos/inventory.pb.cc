// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inventory.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "inventory.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Inventory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Inventory_reflection_ = NULL;
const ::google::protobuf::Descriptor* Component_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Component_reflection_ = NULL;
const ::google::protobuf::Descriptor* InventoryKeyVal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InventoryKeyVal_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ComponentType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_inventory_2eproto() {
  protobuf_AddDesc_inventory_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "inventory.proto");
  GOOGLE_CHECK(file != NULL);
  Inventory_descriptor_ = file->message_type(0);
  static const int Inventory_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Inventory, component_),
  };
  Inventory_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Inventory_descriptor_,
      Inventory::default_instance_,
      Inventory_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Inventory, _has_bits_[0]),
      -1,
      -1,
      sizeof(Inventory),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Inventory, _internal_metadata_),
      -1);
  Component_descriptor_ = file->message_type(1);
  static const int Component_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, serial_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, part_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, properties_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, operational_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, sub_components_),
  };
  Component_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Component_descriptor_,
      Component::default_instance_,
      Component_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, _has_bits_[0]),
      -1,
      -1,
      sizeof(Component),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Component, _internal_metadata_),
      -1);
  InventoryKeyVal_descriptor_ = file->message_type(2);
  static const int InventoryKeyVal_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InventoryKeyVal, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InventoryKeyVal, int_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InventoryKeyVal, str_value_),
  };
  InventoryKeyVal_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InventoryKeyVal_descriptor_,
      InventoryKeyVal::default_instance_,
      InventoryKeyVal_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InventoryKeyVal, _has_bits_[0]),
      -1,
      -1,
      sizeof(InventoryKeyVal),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InventoryKeyVal, _internal_metadata_),
      -1);
  ComponentType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_inventory_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Inventory_descriptor_, &Inventory::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Component_descriptor_, &Component::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InventoryKeyVal_descriptor_, &InventoryKeyVal::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_inventory_2eproto() {
  delete Inventory::default_instance_;
  delete Inventory_reflection_;
  delete Component::default_instance_;
  delete Component_reflection_;
  delete InventoryKeyVal::default_instance_;
  delete InventoryKeyVal_reflection_;
}

void protobuf_AddDesc_inventory_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_telemetry_5ftop_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017inventory.proto\032\023telemetry_top.proto\"*"
    "\n\tInventory\022\035\n\tcomponent\030\001 \003(\0132\n.Compone"
    "nt\"\343\001\n\tComponent\022\014\n\004name\030\001 \002(\t\022\025\n\rserial"
    "_number\030\002 \001(\r\022\023\n\013part_number\030\003 \001(\r\022\023\n\013de"
    "scription\030\004 \001(\t\022\034\n\004type\030\005 \001(\0162\016.Componen"
    "tType\022$\n\nproperties\030\006 \003(\0132\020.InventoryKey"
    "Val\022+\n\021operational_state\030\007 \003(\0132\020.Invento"
    "ryKeyVal\022\026\n\016sub_components\030\010 \003(\t\"D\n\017Inve"
    "ntoryKeyVal\022\013\n\003key\030\001 \002(\t\022\021\n\tint_value\030\002 "
    "\001(\003\022\021\n\tstr_value\030\003 \001(\t*K\n\rComponentType\022"
    "\010\n\004Null\020\000\022\010\n\004Port\020\001\022\014\n\010Linecard\020\002\022\t\n\005Opt"
    "ic\020\003\022\r\n\tBackplane\020\004:\?\n\022jnpr_inventory_ex"
    "t\022\027.JuniperNetworksSensors\030\r \001(\0132\n.Inven"
    "tory", 524);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "inventory.proto", &protobuf_RegisterTypes);
  Inventory::default_instance_ = new Inventory();
  Component::default_instance_ = new Component();
  InventoryKeyVal::default_instance_ = new InventoryKeyVal();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::JuniperNetworksSensors::default_instance(),
    13, 11, false, false,
    &::Inventory::default_instance());
  Inventory::default_instance_->InitAsDefaultInstance();
  Component::default_instance_->InitAsDefaultInstance();
  InventoryKeyVal::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_inventory_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_inventory_2eproto {
  StaticDescriptorInitializer_inventory_2eproto() {
    protobuf_AddDesc_inventory_2eproto();
  }
} static_descriptor_initializer_inventory_2eproto_;
const ::google::protobuf::EnumDescriptor* ComponentType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentType_descriptor_;
}
bool ComponentType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int Inventory::kComponentFieldNumber;
#endif  // !_MSC_VER

Inventory::Inventory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Inventory)
}

void Inventory::InitAsDefaultInstance() {
}

Inventory::Inventory(const Inventory& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Inventory)
}

void Inventory::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Inventory::~Inventory() {
  // @@protoc_insertion_point(destructor:Inventory)
  SharedDtor();
}

void Inventory::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Inventory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Inventory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Inventory_descriptor_;
}

const Inventory& Inventory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inventory_2eproto();
  return *default_instance_;
}

Inventory* Inventory::default_instance_ = NULL;

Inventory* Inventory::New(::google::protobuf::Arena* arena) const {
  Inventory* n = new Inventory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Inventory::Clear() {
  component_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Inventory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Inventory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Component component = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_component:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_component()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_component;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Inventory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Inventory)
  return false;
#undef DO_
}

void Inventory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Inventory)
  // repeated .Component component = 1;
  for (unsigned int i = 0, n = this->component_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->component(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Inventory)
}

::google::protobuf::uint8* Inventory::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Inventory)
  // repeated .Component component = 1;
  for (unsigned int i = 0, n = this->component_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->component(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Inventory)
  return target;
}

int Inventory::ByteSize() const {
  int total_size = 0;

  // repeated .Component component = 1;
  total_size += 1 * this->component_size();
  for (int i = 0; i < this->component_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->component(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Inventory::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Inventory* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Inventory>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Inventory::MergeFrom(const Inventory& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  component_.MergeFrom(from.component_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Inventory::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Inventory::CopyFrom(const Inventory& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Inventory::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->component())) return false;
  return true;
}

void Inventory::Swap(Inventory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Inventory::InternalSwap(Inventory* other) {
  component_.UnsafeArenaSwap(&other->component_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Inventory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Inventory_descriptor_;
  metadata.reflection = Inventory_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Inventory

// repeated .Component component = 1;
int Inventory::component_size() const {
  return component_.size();
}
void Inventory::clear_component() {
  component_.Clear();
}
const ::Component& Inventory::component(int index) const {
  // @@protoc_insertion_point(field_get:Inventory.component)
  return component_.Get(index);
}
::Component* Inventory::mutable_component(int index) {
  // @@protoc_insertion_point(field_mutable:Inventory.component)
  return component_.Mutable(index);
}
::Component* Inventory::add_component() {
  // @@protoc_insertion_point(field_add:Inventory.component)
  return component_.Add();
}
::google::protobuf::RepeatedPtrField< ::Component >*
Inventory::mutable_component() {
  // @@protoc_insertion_point(field_mutable_list:Inventory.component)
  return &component_;
}
const ::google::protobuf::RepeatedPtrField< ::Component >&
Inventory::component() const {
  // @@protoc_insertion_point(field_list:Inventory.component)
  return component_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Component::kNameFieldNumber;
const int Component::kSerialNumberFieldNumber;
const int Component::kPartNumberFieldNumber;
const int Component::kDescriptionFieldNumber;
const int Component::kTypeFieldNumber;
const int Component::kPropertiesFieldNumber;
const int Component::kOperationalStateFieldNumber;
const int Component::kSubComponentsFieldNumber;
#endif  // !_MSC_VER

Component::Component()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Component)
}

void Component::InitAsDefaultInstance() {
}

Component::Component(const Component& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Component)
}

void Component::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serial_number_ = 0u;
  part_number_ = 0u;
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Component::~Component() {
  // @@protoc_insertion_point(destructor:Component)
  SharedDtor();
}

void Component::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Component::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Component::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Component_descriptor_;
}

const Component& Component::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inventory_2eproto();
  return *default_instance_;
}

Component* Component::default_instance_ = NULL;

Component* Component::New(::google::protobuf::Arena* arena) const {
  Component* n = new Component;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Component::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Component*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(serial_number_, part_number_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_description()) {
      description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    type_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  properties_.Clear();
  operational_state_.Clear();
  sub_components_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Component::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Component)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Component.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_serial_number;
        break;
      }

      // optional uint32 serial_number = 2;
      case 2: {
        if (tag == 16) {
         parse_serial_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serial_number_)));
          set_has_serial_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_part_number;
        break;
      }

      // optional uint32 part_number = 3;
      case 3: {
        if (tag == 24) {
         parse_part_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &part_number_)));
          set_has_part_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_description;
        break;
      }

      // optional string description = 4;
      case 4: {
        if (tag == 34) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Component.description");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional .ComponentType type = 5;
      case 5: {
        if (tag == 40) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ComponentType_IsValid(value)) {
            set_type(static_cast< ::ComponentType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_properties;
        break;
      }

      // repeated .InventoryKeyVal properties = 6;
      case 6: {
        if (tag == 50) {
         parse_properties:
          DO_(input->IncrementRecursionDepth());
         parse_loop_properties:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_properties()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_properties;
        if (input->ExpectTag(58)) goto parse_loop_operational_state;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .InventoryKeyVal operational_state = 7;
      case 7: {
        if (tag == 58) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_operational_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_operational_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_operational_state;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(66)) goto parse_sub_components;
        break;
      }

      // repeated string sub_components = 8;
      case 8: {
        if (tag == 66) {
         parse_sub_components:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_sub_components()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sub_components(this->sub_components_size() - 1).data(),
            this->sub_components(this->sub_components_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Component.sub_components");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_sub_components;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Component)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Component)
  return false;
#undef DO_
}

void Component::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Component)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Component.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 serial_number = 2;
  if (has_serial_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->serial_number(), output);
  }

  // optional uint32 part_number = 3;
  if (has_part_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->part_number(), output);
  }

  // optional string description = 4;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Component.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // optional .ComponentType type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // repeated .InventoryKeyVal properties = 6;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->properties(i), output);
  }

  // repeated .InventoryKeyVal operational_state = 7;
  for (unsigned int i = 0, n = this->operational_state_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->operational_state(i), output);
  }

  // repeated string sub_components = 8;
  for (int i = 0; i < this->sub_components_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sub_components(i).data(), this->sub_components(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Component.sub_components");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->sub_components(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Component)
}

::google::protobuf::uint8* Component::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Component)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Component.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 serial_number = 2;
  if (has_serial_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->serial_number(), target);
  }

  // optional uint32 part_number = 3;
  if (has_part_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->part_number(), target);
  }

  // optional string description = 4;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Component.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // optional .ComponentType type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // repeated .InventoryKeyVal properties = 6;
  for (unsigned int i = 0, n = this->properties_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->properties(i), target);
  }

  // repeated .InventoryKeyVal operational_state = 7;
  for (unsigned int i = 0, n = this->operational_state_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->operational_state(i), target);
  }

  // repeated string sub_components = 8;
  for (int i = 0; i < this->sub_components_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sub_components(i).data(), this->sub_components(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Component.sub_components");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->sub_components(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Component)
  return target;
}

int Component::ByteSize() const {
  int total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  if (_has_bits_[1 / 32] & 30u) {
    // optional uint32 serial_number = 2;
    if (has_serial_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->serial_number());
    }

    // optional uint32 part_number = 3;
    if (has_part_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->part_number());
    }

    // optional string description = 4;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional .ComponentType type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  // repeated .InventoryKeyVal properties = 6;
  total_size += 1 * this->properties_size();
  for (int i = 0; i < this->properties_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->properties(i));
  }

  // repeated .InventoryKeyVal operational_state = 7;
  total_size += 1 * this->operational_state_size();
  for (int i = 0; i < this->operational_state_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->operational_state(i));
  }

  // repeated string sub_components = 8;
  total_size += 1 * this->sub_components_size();
  for (int i = 0; i < this->sub_components_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->sub_components(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Component::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Component* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Component>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Component::MergeFrom(const Component& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  properties_.MergeFrom(from.properties_);
  operational_state_.MergeFrom(from.operational_state_);
  sub_components_.MergeFrom(from.sub_components_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_serial_number()) {
      set_serial_number(from.serial_number());
    }
    if (from.has_part_number()) {
      set_part_number(from.part_number());
    }
    if (from.has_description()) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Component::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Component::CopyFrom(const Component& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Component::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->properties())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->operational_state())) return false;
  return true;
}

void Component::Swap(Component* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Component::InternalSwap(Component* other) {
  name_.Swap(&other->name_);
  std::swap(serial_number_, other->serial_number_);
  std::swap(part_number_, other->part_number_);
  description_.Swap(&other->description_);
  std::swap(type_, other->type_);
  properties_.UnsafeArenaSwap(&other->properties_);
  operational_state_.UnsafeArenaSwap(&other->operational_state_);
  sub_components_.UnsafeArenaSwap(&other->sub_components_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Component::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Component_descriptor_;
  metadata.reflection = Component_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Component

// required string name = 1;
bool Component::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Component::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Component::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Component::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& Component::name() const {
  // @@protoc_insertion_point(field_get:Component.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Component::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Component.name)
}
 void Component::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Component.name)
}
 void Component::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Component.name)
}
 ::std::string* Component::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:Component.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Component::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Component::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Component.name)
}

// optional uint32 serial_number = 2;
bool Component::has_serial_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Component::set_has_serial_number() {
  _has_bits_[0] |= 0x00000002u;
}
void Component::clear_has_serial_number() {
  _has_bits_[0] &= ~0x00000002u;
}
void Component::clear_serial_number() {
  serial_number_ = 0u;
  clear_has_serial_number();
}
 ::google::protobuf::uint32 Component::serial_number() const {
  // @@protoc_insertion_point(field_get:Component.serial_number)
  return serial_number_;
}
 void Component::set_serial_number(::google::protobuf::uint32 value) {
  set_has_serial_number();
  serial_number_ = value;
  // @@protoc_insertion_point(field_set:Component.serial_number)
}

// optional uint32 part_number = 3;
bool Component::has_part_number() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Component::set_has_part_number() {
  _has_bits_[0] |= 0x00000004u;
}
void Component::clear_has_part_number() {
  _has_bits_[0] &= ~0x00000004u;
}
void Component::clear_part_number() {
  part_number_ = 0u;
  clear_has_part_number();
}
 ::google::protobuf::uint32 Component::part_number() const {
  // @@protoc_insertion_point(field_get:Component.part_number)
  return part_number_;
}
 void Component::set_part_number(::google::protobuf::uint32 value) {
  set_has_part_number();
  part_number_ = value;
  // @@protoc_insertion_point(field_set:Component.part_number)
}

// optional string description = 4;
bool Component::has_description() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Component::set_has_description() {
  _has_bits_[0] |= 0x00000008u;
}
void Component::clear_has_description() {
  _has_bits_[0] &= ~0x00000008u;
}
void Component::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
 const ::std::string& Component::description() const {
  // @@protoc_insertion_point(field_get:Component.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Component::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Component.description)
}
 void Component::set_description(const char* value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Component.description)
}
 void Component::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Component.description)
}
 ::std::string* Component::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:Component.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Component::release_description() {
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Component::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:Component.description)
}

// optional .ComponentType type = 5;
bool Component::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Component::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
void Component::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void Component::clear_type() {
  type_ = 0;
  clear_has_type();
}
 ::ComponentType Component::type() const {
  // @@protoc_insertion_point(field_get:Component.type)
  return static_cast< ::ComponentType >(type_);
}
 void Component::set_type(::ComponentType value) {
  assert(::ComponentType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Component.type)
}

// repeated .InventoryKeyVal properties = 6;
int Component::properties_size() const {
  return properties_.size();
}
void Component::clear_properties() {
  properties_.Clear();
}
const ::InventoryKeyVal& Component::properties(int index) const {
  // @@protoc_insertion_point(field_get:Component.properties)
  return properties_.Get(index);
}
::InventoryKeyVal* Component::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:Component.properties)
  return properties_.Mutable(index);
}
::InventoryKeyVal* Component::add_properties() {
  // @@protoc_insertion_point(field_add:Component.properties)
  return properties_.Add();
}
::google::protobuf::RepeatedPtrField< ::InventoryKeyVal >*
Component::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:Component.properties)
  return &properties_;
}
const ::google::protobuf::RepeatedPtrField< ::InventoryKeyVal >&
Component::properties() const {
  // @@protoc_insertion_point(field_list:Component.properties)
  return properties_;
}

// repeated .InventoryKeyVal operational_state = 7;
int Component::operational_state_size() const {
  return operational_state_.size();
}
void Component::clear_operational_state() {
  operational_state_.Clear();
}
const ::InventoryKeyVal& Component::operational_state(int index) const {
  // @@protoc_insertion_point(field_get:Component.operational_state)
  return operational_state_.Get(index);
}
::InventoryKeyVal* Component::mutable_operational_state(int index) {
  // @@protoc_insertion_point(field_mutable:Component.operational_state)
  return operational_state_.Mutable(index);
}
::InventoryKeyVal* Component::add_operational_state() {
  // @@protoc_insertion_point(field_add:Component.operational_state)
  return operational_state_.Add();
}
::google::protobuf::RepeatedPtrField< ::InventoryKeyVal >*
Component::mutable_operational_state() {
  // @@protoc_insertion_point(field_mutable_list:Component.operational_state)
  return &operational_state_;
}
const ::google::protobuf::RepeatedPtrField< ::InventoryKeyVal >&
Component::operational_state() const {
  // @@protoc_insertion_point(field_list:Component.operational_state)
  return operational_state_;
}

// repeated string sub_components = 8;
int Component::sub_components_size() const {
  return sub_components_.size();
}
void Component::clear_sub_components() {
  sub_components_.Clear();
}
 const ::std::string& Component::sub_components(int index) const {
  // @@protoc_insertion_point(field_get:Component.sub_components)
  return sub_components_.Get(index);
}
 ::std::string* Component::mutable_sub_components(int index) {
  // @@protoc_insertion_point(field_mutable:Component.sub_components)
  return sub_components_.Mutable(index);
}
 void Component::set_sub_components(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Component.sub_components)
  sub_components_.Mutable(index)->assign(value);
}
 void Component::set_sub_components(int index, const char* value) {
  sub_components_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Component.sub_components)
}
 void Component::set_sub_components(int index, const char* value, size_t size) {
  sub_components_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Component.sub_components)
}
 ::std::string* Component::add_sub_components() {
  return sub_components_.Add();
}
 void Component::add_sub_components(const ::std::string& value) {
  sub_components_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Component.sub_components)
}
 void Component::add_sub_components(const char* value) {
  sub_components_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Component.sub_components)
}
 void Component::add_sub_components(const char* value, size_t size) {
  sub_components_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Component.sub_components)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Component::sub_components() const {
  // @@protoc_insertion_point(field_list:Component.sub_components)
  return sub_components_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Component::mutable_sub_components() {
  // @@protoc_insertion_point(field_mutable_list:Component.sub_components)
  return &sub_components_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int InventoryKeyVal::kKeyFieldNumber;
const int InventoryKeyVal::kIntValueFieldNumber;
const int InventoryKeyVal::kStrValueFieldNumber;
#endif  // !_MSC_VER

InventoryKeyVal::InventoryKeyVal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InventoryKeyVal)
}

void InventoryKeyVal::InitAsDefaultInstance() {
}

InventoryKeyVal::InventoryKeyVal(const InventoryKeyVal& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:InventoryKeyVal)
}

void InventoryKeyVal::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  int_value_ = GOOGLE_LONGLONG(0);
  str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InventoryKeyVal::~InventoryKeyVal() {
  // @@protoc_insertion_point(destructor:InventoryKeyVal)
  SharedDtor();
}

void InventoryKeyVal::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  str_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void InventoryKeyVal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InventoryKeyVal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InventoryKeyVal_descriptor_;
}

const InventoryKeyVal& InventoryKeyVal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_inventory_2eproto();
  return *default_instance_;
}

InventoryKeyVal* InventoryKeyVal::default_instance_ = NULL;

InventoryKeyVal* InventoryKeyVal::New(::google::protobuf::Arena* arena) const {
  InventoryKeyVal* n = new InventoryKeyVal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InventoryKeyVal::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_key()) {
      key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    int_value_ = GOOGLE_LONGLONG(0);
    if (has_str_value()) {
      str_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InventoryKeyVal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InventoryKeyVal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "InventoryKeyVal.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_int_value;
        break;
      }

      // optional int64 int_value = 2;
      case 2: {
        if (tag == 16) {
         parse_int_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int_value_)));
          set_has_int_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_str_value;
        break;
      }

      // optional string str_value = 3;
      case 3: {
        if (tag == 26) {
         parse_str_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->str_value().data(), this->str_value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "InventoryKeyVal.str_value");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InventoryKeyVal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InventoryKeyVal)
  return false;
#undef DO_
}

void InventoryKeyVal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InventoryKeyVal)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InventoryKeyVal.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional int64 int_value = 2;
  if (has_int_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->int_value(), output);
  }

  // optional string str_value = 3;
  if (has_str_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str_value().data(), this->str_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InventoryKeyVal.str_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->str_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:InventoryKeyVal)
}

::google::protobuf::uint8* InventoryKeyVal::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:InventoryKeyVal)
  // required string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InventoryKeyVal.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional int64 int_value = 2;
  if (has_int_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->int_value(), target);
  }

  // optional string str_value = 3;
  if (has_str_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->str_value().data(), this->str_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InventoryKeyVal.str_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->str_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InventoryKeyVal)
  return target;
}

int InventoryKeyVal::ByteSize() const {
  int total_size = 0;

  // required string key = 1;
  if (has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }
  if (_has_bits_[1 / 32] & 6u) {
    // optional int64 int_value = 2;
    if (has_int_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int_value());
    }

    // optional string str_value = 3;
    if (has_str_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str_value());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InventoryKeyVal::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InventoryKeyVal* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InventoryKeyVal>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InventoryKeyVal::MergeFrom(const InventoryKeyVal& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_int_value()) {
      set_int_value(from.int_value());
    }
    if (from.has_str_value()) {
      set_has_str_value();
      str_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_value_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InventoryKeyVal::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InventoryKeyVal::CopyFrom(const InventoryKeyVal& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InventoryKeyVal::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void InventoryKeyVal::Swap(InventoryKeyVal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InventoryKeyVal::InternalSwap(InventoryKeyVal* other) {
  key_.Swap(&other->key_);
  std::swap(int_value_, other->int_value_);
  str_value_.Swap(&other->str_value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InventoryKeyVal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InventoryKeyVal_descriptor_;
  metadata.reflection = InventoryKeyVal_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InventoryKeyVal

// required string key = 1;
bool InventoryKeyVal::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InventoryKeyVal::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void InventoryKeyVal::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void InventoryKeyVal::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& InventoryKeyVal::key() const {
  // @@protoc_insertion_point(field_get:InventoryKeyVal.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InventoryKeyVal::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InventoryKeyVal.key)
}
 void InventoryKeyVal::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InventoryKeyVal.key)
}
 void InventoryKeyVal::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InventoryKeyVal.key)
}
 ::std::string* InventoryKeyVal::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:InventoryKeyVal.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InventoryKeyVal::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InventoryKeyVal::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:InventoryKeyVal.key)
}

// optional int64 int_value = 2;
bool InventoryKeyVal::has_int_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InventoryKeyVal::set_has_int_value() {
  _has_bits_[0] |= 0x00000002u;
}
void InventoryKeyVal::clear_has_int_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void InventoryKeyVal::clear_int_value() {
  int_value_ = GOOGLE_LONGLONG(0);
  clear_has_int_value();
}
 ::google::protobuf::int64 InventoryKeyVal::int_value() const {
  // @@protoc_insertion_point(field_get:InventoryKeyVal.int_value)
  return int_value_;
}
 void InventoryKeyVal::set_int_value(::google::protobuf::int64 value) {
  set_has_int_value();
  int_value_ = value;
  // @@protoc_insertion_point(field_set:InventoryKeyVal.int_value)
}

// optional string str_value = 3;
bool InventoryKeyVal::has_str_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InventoryKeyVal::set_has_str_value() {
  _has_bits_[0] |= 0x00000004u;
}
void InventoryKeyVal::clear_has_str_value() {
  _has_bits_[0] &= ~0x00000004u;
}
void InventoryKeyVal::clear_str_value() {
  str_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str_value();
}
 const ::std::string& InventoryKeyVal::str_value() const {
  // @@protoc_insertion_point(field_get:InventoryKeyVal.str_value)
  return str_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InventoryKeyVal::set_str_value(const ::std::string& value) {
  set_has_str_value();
  str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InventoryKeyVal.str_value)
}
 void InventoryKeyVal::set_str_value(const char* value) {
  set_has_str_value();
  str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InventoryKeyVal.str_value)
}
 void InventoryKeyVal::set_str_value(const char* value, size_t size) {
  set_has_str_value();
  str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InventoryKeyVal.str_value)
}
 ::std::string* InventoryKeyVal::mutable_str_value() {
  set_has_str_value();
  // @@protoc_insertion_point(field_mutable:InventoryKeyVal.str_value)
  return str_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InventoryKeyVal::release_str_value() {
  clear_has_str_value();
  return str_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InventoryKeyVal::set_allocated_str_value(::std::string* str_value) {
  if (str_value != NULL) {
    set_has_str_value();
  } else {
    clear_has_str_value();
  }
  str_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str_value);
  // @@protoc_insertion_point(field_set_allocated:InventoryKeyVal.str_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::JuniperNetworksSensors,
    ::google::protobuf::internal::MessageTypeTraits< ::Inventory >, 11, false >
  jnpr_inventory_ext(kJnprInventoryExtFieldNumber, ::Inventory::default_instance());

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
