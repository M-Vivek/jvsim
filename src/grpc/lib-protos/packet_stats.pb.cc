// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packet_stats.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "packet_stats.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PacketStatistics_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PacketStatistics_reflection_ = NULL;
const ::google::protobuf::Descriptor* PacketStatsPacketForwardingEngine_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PacketStatsPacketForwardingEngine_reflection_ = NULL;
const ::google::protobuf::Descriptor* PacketStatsClass_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PacketStatsClass_reflection_ = NULL;
const ::google::protobuf::Descriptor* PacketStatsCounter_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PacketStatsCounter_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_packet_5fstats_2eproto() {
  protobuf_AddDesc_packet_5fstats_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "packet_stats.proto");
  GOOGLE_CHECK(file != NULL);
  PacketStatistics_descriptor_ = file->message_type(0);
  static const int PacketStatistics_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatistics, packet_stats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatistics, packet_stats_pfe_),
  };
  PacketStatistics_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PacketStatistics_descriptor_,
      PacketStatistics::default_instance_,
      PacketStatistics_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatistics, _has_bits_[0]),
      -1,
      -1,
      sizeof(PacketStatistics),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatistics, _internal_metadata_),
      -1);
  PacketStatsPacketForwardingEngine_descriptor_ = file->message_type(1);
  static const int PacketStatsPacketForwardingEngine_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatsPacketForwardingEngine, pfe_identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatsPacketForwardingEngine, packet_stats_),
  };
  PacketStatsPacketForwardingEngine_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PacketStatsPacketForwardingEngine_descriptor_,
      PacketStatsPacketForwardingEngine::default_instance_,
      PacketStatsPacketForwardingEngine_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatsPacketForwardingEngine, _has_bits_[0]),
      -1,
      -1,
      sizeof(PacketStatsPacketForwardingEngine),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatsPacketForwardingEngine, _internal_metadata_),
      -1);
  PacketStatsClass_descriptor_ = file->message_type(2);
  static const int PacketStatsClass_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatsClass, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatsClass, counter_),
  };
  PacketStatsClass_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PacketStatsClass_descriptor_,
      PacketStatsClass::default_instance_,
      PacketStatsClass_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatsClass, _has_bits_[0]),
      -1,
      -1,
      sizeof(PacketStatsClass),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatsClass, _internal_metadata_),
      -1);
  PacketStatsCounter_descriptor_ = file->message_type(3);
  static const int PacketStatsCounter_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatsCounter, packet_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatsCounter, byte_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatsCounter, packet_rate_),
  };
  PacketStatsCounter_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PacketStatsCounter_descriptor_,
      PacketStatsCounter::default_instance_,
      PacketStatsCounter_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatsCounter, _has_bits_[0]),
      -1,
      -1,
      sizeof(PacketStatsCounter),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketStatsCounter, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_packet_5fstats_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PacketStatistics_descriptor_, &PacketStatistics::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PacketStatsPacketForwardingEngine_descriptor_, &PacketStatsPacketForwardingEngine::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PacketStatsClass_descriptor_, &PacketStatsClass::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PacketStatsCounter_descriptor_, &PacketStatsCounter::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_packet_5fstats_2eproto() {
  delete PacketStatistics::default_instance_;
  delete PacketStatistics_reflection_;
  delete PacketStatsPacketForwardingEngine::default_instance_;
  delete PacketStatsPacketForwardingEngine_reflection_;
  delete PacketStatsClass::default_instance_;
  delete PacketStatsClass_reflection_;
  delete PacketStatsCounter::default_instance_;
  delete PacketStatsCounter_reflection_;
}

void protobuf_AddDesc_packet_5fstats_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_telemetry_5ftop_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022packet_stats.proto\032\023telemetry_top.prot"
    "o\"y\n\020PacketStatistics\022\'\n\014packet_stats\030\001 "
    "\003(\0132\021.PacketStatsClass\022<\n\020packet_stats_p"
    "fe\030\002 \003(\0132\".PacketStatsPacketForwardingEn"
    "gine\"d\n!PacketStatsPacketForwardingEngin"
    "e\022\026\n\016pfe_identifier\030\001 \002(\t\022\'\n\014packet_stat"
    "s\030\002 \003(\0132\021.PacketStatsClass\"F\n\020PacketStat"
    "sClass\022\014\n\004name\030\001 \002(\t\022$\n\007counter\030\002 \002(\0132\023."
    "PacketStatsCounter\"S\n\022PacketStatsCounter"
    "\022\024\n\014packet_count\030\001 \002(\004\022\022\n\nbyte_count\030\002 \001"
    "(\004\022\023\n\013packet_rate\030\003 \001(\004:N\n\032jnpr_packet_s"
    "tatistics_ext\022\027.JuniperNetworksSensors\030\n"
    " \001(\0132\021.PacketStatistics", 503);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "packet_stats.proto", &protobuf_RegisterTypes);
  PacketStatistics::default_instance_ = new PacketStatistics();
  PacketStatsPacketForwardingEngine::default_instance_ = new PacketStatsPacketForwardingEngine();
  PacketStatsClass::default_instance_ = new PacketStatsClass();
  PacketStatsCounter::default_instance_ = new PacketStatsCounter();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::JuniperNetworksSensors::default_instance(),
    10, 11, false, false,
    &::PacketStatistics::default_instance());
  PacketStatistics::default_instance_->InitAsDefaultInstance();
  PacketStatsPacketForwardingEngine::default_instance_->InitAsDefaultInstance();
  PacketStatsClass::default_instance_->InitAsDefaultInstance();
  PacketStatsCounter::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_packet_5fstats_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_packet_5fstats_2eproto {
  StaticDescriptorInitializer_packet_5fstats_2eproto() {
    protobuf_AddDesc_packet_5fstats_2eproto();
  }
} static_descriptor_initializer_packet_5fstats_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int PacketStatistics::kPacketStatsFieldNumber;
const int PacketStatistics::kPacketStatsPfeFieldNumber;
#endif  // !_MSC_VER

PacketStatistics::PacketStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PacketStatistics)
}

void PacketStatistics::InitAsDefaultInstance() {
}

PacketStatistics::PacketStatistics(const PacketStatistics& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PacketStatistics)
}

void PacketStatistics::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PacketStatistics::~PacketStatistics() {
  // @@protoc_insertion_point(destructor:PacketStatistics)
  SharedDtor();
}

void PacketStatistics::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PacketStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacketStatistics::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacketStatistics_descriptor_;
}

const PacketStatistics& PacketStatistics::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_packet_5fstats_2eproto();
  return *default_instance_;
}

PacketStatistics* PacketStatistics::default_instance_ = NULL;

PacketStatistics* PacketStatistics::New(::google::protobuf::Arena* arena) const {
  PacketStatistics* n = new PacketStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PacketStatistics::Clear() {
  packet_stats_.Clear();
  packet_stats_pfe_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PacketStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PacketStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PacketStatsClass packet_stats = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_packet_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_packet_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_packet_stats;
        if (input->ExpectTag(18)) goto parse_loop_packet_stats_pfe;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .PacketStatsPacketForwardingEngine packet_stats_pfe = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_packet_stats_pfe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_packet_stats_pfe()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_packet_stats_pfe;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PacketStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PacketStatistics)
  return false;
#undef DO_
}

void PacketStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PacketStatistics)
  // repeated .PacketStatsClass packet_stats = 1;
  for (unsigned int i = 0, n = this->packet_stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->packet_stats(i), output);
  }

  // repeated .PacketStatsPacketForwardingEngine packet_stats_pfe = 2;
  for (unsigned int i = 0, n = this->packet_stats_pfe_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->packet_stats_pfe(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PacketStatistics)
}

::google::protobuf::uint8* PacketStatistics::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PacketStatistics)
  // repeated .PacketStatsClass packet_stats = 1;
  for (unsigned int i = 0, n = this->packet_stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->packet_stats(i), target);
  }

  // repeated .PacketStatsPacketForwardingEngine packet_stats_pfe = 2;
  for (unsigned int i = 0, n = this->packet_stats_pfe_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->packet_stats_pfe(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PacketStatistics)
  return target;
}

int PacketStatistics::ByteSize() const {
  int total_size = 0;

  // repeated .PacketStatsClass packet_stats = 1;
  total_size += 1 * this->packet_stats_size();
  for (int i = 0; i < this->packet_stats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->packet_stats(i));
  }

  // repeated .PacketStatsPacketForwardingEngine packet_stats_pfe = 2;
  total_size += 1 * this->packet_stats_pfe_size();
  for (int i = 0; i < this->packet_stats_pfe_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->packet_stats_pfe(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacketStatistics::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PacketStatistics* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketStatistics>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PacketStatistics::MergeFrom(const PacketStatistics& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  packet_stats_.MergeFrom(from.packet_stats_);
  packet_stats_pfe_.MergeFrom(from.packet_stats_pfe_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PacketStatistics::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketStatistics::CopyFrom(const PacketStatistics& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketStatistics::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->packet_stats())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->packet_stats_pfe())) return false;
  return true;
}

void PacketStatistics::Swap(PacketStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PacketStatistics::InternalSwap(PacketStatistics* other) {
  packet_stats_.UnsafeArenaSwap(&other->packet_stats_);
  packet_stats_pfe_.UnsafeArenaSwap(&other->packet_stats_pfe_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PacketStatistics::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PacketStatistics_descriptor_;
  metadata.reflection = PacketStatistics_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PacketStatistics

// repeated .PacketStatsClass packet_stats = 1;
int PacketStatistics::packet_stats_size() const {
  return packet_stats_.size();
}
void PacketStatistics::clear_packet_stats() {
  packet_stats_.Clear();
}
const ::PacketStatsClass& PacketStatistics::packet_stats(int index) const {
  // @@protoc_insertion_point(field_get:PacketStatistics.packet_stats)
  return packet_stats_.Get(index);
}
::PacketStatsClass* PacketStatistics::mutable_packet_stats(int index) {
  // @@protoc_insertion_point(field_mutable:PacketStatistics.packet_stats)
  return packet_stats_.Mutable(index);
}
::PacketStatsClass* PacketStatistics::add_packet_stats() {
  // @@protoc_insertion_point(field_add:PacketStatistics.packet_stats)
  return packet_stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::PacketStatsClass >*
PacketStatistics::mutable_packet_stats() {
  // @@protoc_insertion_point(field_mutable_list:PacketStatistics.packet_stats)
  return &packet_stats_;
}
const ::google::protobuf::RepeatedPtrField< ::PacketStatsClass >&
PacketStatistics::packet_stats() const {
  // @@protoc_insertion_point(field_list:PacketStatistics.packet_stats)
  return packet_stats_;
}

// repeated .PacketStatsPacketForwardingEngine packet_stats_pfe = 2;
int PacketStatistics::packet_stats_pfe_size() const {
  return packet_stats_pfe_.size();
}
void PacketStatistics::clear_packet_stats_pfe() {
  packet_stats_pfe_.Clear();
}
const ::PacketStatsPacketForwardingEngine& PacketStatistics::packet_stats_pfe(int index) const {
  // @@protoc_insertion_point(field_get:PacketStatistics.packet_stats_pfe)
  return packet_stats_pfe_.Get(index);
}
::PacketStatsPacketForwardingEngine* PacketStatistics::mutable_packet_stats_pfe(int index) {
  // @@protoc_insertion_point(field_mutable:PacketStatistics.packet_stats_pfe)
  return packet_stats_pfe_.Mutable(index);
}
::PacketStatsPacketForwardingEngine* PacketStatistics::add_packet_stats_pfe() {
  // @@protoc_insertion_point(field_add:PacketStatistics.packet_stats_pfe)
  return packet_stats_pfe_.Add();
}
::google::protobuf::RepeatedPtrField< ::PacketStatsPacketForwardingEngine >*
PacketStatistics::mutable_packet_stats_pfe() {
  // @@protoc_insertion_point(field_mutable_list:PacketStatistics.packet_stats_pfe)
  return &packet_stats_pfe_;
}
const ::google::protobuf::RepeatedPtrField< ::PacketStatsPacketForwardingEngine >&
PacketStatistics::packet_stats_pfe() const {
  // @@protoc_insertion_point(field_list:PacketStatistics.packet_stats_pfe)
  return packet_stats_pfe_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int PacketStatsPacketForwardingEngine::kPfeIdentifierFieldNumber;
const int PacketStatsPacketForwardingEngine::kPacketStatsFieldNumber;
#endif  // !_MSC_VER

PacketStatsPacketForwardingEngine::PacketStatsPacketForwardingEngine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PacketStatsPacketForwardingEngine)
}

void PacketStatsPacketForwardingEngine::InitAsDefaultInstance() {
}

PacketStatsPacketForwardingEngine::PacketStatsPacketForwardingEngine(const PacketStatsPacketForwardingEngine& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PacketStatsPacketForwardingEngine)
}

void PacketStatsPacketForwardingEngine::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pfe_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PacketStatsPacketForwardingEngine::~PacketStatsPacketForwardingEngine() {
  // @@protoc_insertion_point(destructor:PacketStatsPacketForwardingEngine)
  SharedDtor();
}

void PacketStatsPacketForwardingEngine::SharedDtor() {
  pfe_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PacketStatsPacketForwardingEngine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacketStatsPacketForwardingEngine::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacketStatsPacketForwardingEngine_descriptor_;
}

const PacketStatsPacketForwardingEngine& PacketStatsPacketForwardingEngine::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_packet_5fstats_2eproto();
  return *default_instance_;
}

PacketStatsPacketForwardingEngine* PacketStatsPacketForwardingEngine::default_instance_ = NULL;

PacketStatsPacketForwardingEngine* PacketStatsPacketForwardingEngine::New(::google::protobuf::Arena* arena) const {
  PacketStatsPacketForwardingEngine* n = new PacketStatsPacketForwardingEngine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PacketStatsPacketForwardingEngine::Clear() {
  if (has_pfe_identifier()) {
    pfe_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  packet_stats_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PacketStatsPacketForwardingEngine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PacketStatsPacketForwardingEngine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string pfe_identifier = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pfe_identifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pfe_identifier().data(), this->pfe_identifier().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PacketStatsPacketForwardingEngine.pfe_identifier");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_packet_stats;
        break;
      }

      // repeated .PacketStatsClass packet_stats = 2;
      case 2: {
        if (tag == 18) {
         parse_packet_stats:
          DO_(input->IncrementRecursionDepth());
         parse_loop_packet_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_packet_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_packet_stats;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PacketStatsPacketForwardingEngine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PacketStatsPacketForwardingEngine)
  return false;
#undef DO_
}

void PacketStatsPacketForwardingEngine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PacketStatsPacketForwardingEngine)
  // required string pfe_identifier = 1;
  if (has_pfe_identifier()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pfe_identifier().data(), this->pfe_identifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PacketStatsPacketForwardingEngine.pfe_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pfe_identifier(), output);
  }

  // repeated .PacketStatsClass packet_stats = 2;
  for (unsigned int i = 0, n = this->packet_stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->packet_stats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PacketStatsPacketForwardingEngine)
}

::google::protobuf::uint8* PacketStatsPacketForwardingEngine::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PacketStatsPacketForwardingEngine)
  // required string pfe_identifier = 1;
  if (has_pfe_identifier()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pfe_identifier().data(), this->pfe_identifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PacketStatsPacketForwardingEngine.pfe_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pfe_identifier(), target);
  }

  // repeated .PacketStatsClass packet_stats = 2;
  for (unsigned int i = 0, n = this->packet_stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->packet_stats(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PacketStatsPacketForwardingEngine)
  return target;
}

int PacketStatsPacketForwardingEngine::ByteSize() const {
  int total_size = 0;

  // required string pfe_identifier = 1;
  if (has_pfe_identifier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pfe_identifier());
  }
  // repeated .PacketStatsClass packet_stats = 2;
  total_size += 1 * this->packet_stats_size();
  for (int i = 0; i < this->packet_stats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->packet_stats(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacketStatsPacketForwardingEngine::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PacketStatsPacketForwardingEngine* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketStatsPacketForwardingEngine>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PacketStatsPacketForwardingEngine::MergeFrom(const PacketStatsPacketForwardingEngine& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  packet_stats_.MergeFrom(from.packet_stats_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pfe_identifier()) {
      set_has_pfe_identifier();
      pfe_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pfe_identifier_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PacketStatsPacketForwardingEngine::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketStatsPacketForwardingEngine::CopyFrom(const PacketStatsPacketForwardingEngine& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketStatsPacketForwardingEngine::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->packet_stats())) return false;
  return true;
}

void PacketStatsPacketForwardingEngine::Swap(PacketStatsPacketForwardingEngine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PacketStatsPacketForwardingEngine::InternalSwap(PacketStatsPacketForwardingEngine* other) {
  pfe_identifier_.Swap(&other->pfe_identifier_);
  packet_stats_.UnsafeArenaSwap(&other->packet_stats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PacketStatsPacketForwardingEngine::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PacketStatsPacketForwardingEngine_descriptor_;
  metadata.reflection = PacketStatsPacketForwardingEngine_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PacketStatsPacketForwardingEngine

// required string pfe_identifier = 1;
bool PacketStatsPacketForwardingEngine::has_pfe_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PacketStatsPacketForwardingEngine::set_has_pfe_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
void PacketStatsPacketForwardingEngine::clear_has_pfe_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
void PacketStatsPacketForwardingEngine::clear_pfe_identifier() {
  pfe_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pfe_identifier();
}
 const ::std::string& PacketStatsPacketForwardingEngine::pfe_identifier() const {
  // @@protoc_insertion_point(field_get:PacketStatsPacketForwardingEngine.pfe_identifier)
  return pfe_identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PacketStatsPacketForwardingEngine::set_pfe_identifier(const ::std::string& value) {
  set_has_pfe_identifier();
  pfe_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PacketStatsPacketForwardingEngine.pfe_identifier)
}
 void PacketStatsPacketForwardingEngine::set_pfe_identifier(const char* value) {
  set_has_pfe_identifier();
  pfe_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PacketStatsPacketForwardingEngine.pfe_identifier)
}
 void PacketStatsPacketForwardingEngine::set_pfe_identifier(const char* value, size_t size) {
  set_has_pfe_identifier();
  pfe_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PacketStatsPacketForwardingEngine.pfe_identifier)
}
 ::std::string* PacketStatsPacketForwardingEngine::mutable_pfe_identifier() {
  set_has_pfe_identifier();
  // @@protoc_insertion_point(field_mutable:PacketStatsPacketForwardingEngine.pfe_identifier)
  return pfe_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PacketStatsPacketForwardingEngine::release_pfe_identifier() {
  clear_has_pfe_identifier();
  return pfe_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PacketStatsPacketForwardingEngine::set_allocated_pfe_identifier(::std::string* pfe_identifier) {
  if (pfe_identifier != NULL) {
    set_has_pfe_identifier();
  } else {
    clear_has_pfe_identifier();
  }
  pfe_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pfe_identifier);
  // @@protoc_insertion_point(field_set_allocated:PacketStatsPacketForwardingEngine.pfe_identifier)
}

// repeated .PacketStatsClass packet_stats = 2;
int PacketStatsPacketForwardingEngine::packet_stats_size() const {
  return packet_stats_.size();
}
void PacketStatsPacketForwardingEngine::clear_packet_stats() {
  packet_stats_.Clear();
}
const ::PacketStatsClass& PacketStatsPacketForwardingEngine::packet_stats(int index) const {
  // @@protoc_insertion_point(field_get:PacketStatsPacketForwardingEngine.packet_stats)
  return packet_stats_.Get(index);
}
::PacketStatsClass* PacketStatsPacketForwardingEngine::mutable_packet_stats(int index) {
  // @@protoc_insertion_point(field_mutable:PacketStatsPacketForwardingEngine.packet_stats)
  return packet_stats_.Mutable(index);
}
::PacketStatsClass* PacketStatsPacketForwardingEngine::add_packet_stats() {
  // @@protoc_insertion_point(field_add:PacketStatsPacketForwardingEngine.packet_stats)
  return packet_stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::PacketStatsClass >*
PacketStatsPacketForwardingEngine::mutable_packet_stats() {
  // @@protoc_insertion_point(field_mutable_list:PacketStatsPacketForwardingEngine.packet_stats)
  return &packet_stats_;
}
const ::google::protobuf::RepeatedPtrField< ::PacketStatsClass >&
PacketStatsPacketForwardingEngine::packet_stats() const {
  // @@protoc_insertion_point(field_list:PacketStatsPacketForwardingEngine.packet_stats)
  return packet_stats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int PacketStatsClass::kNameFieldNumber;
const int PacketStatsClass::kCounterFieldNumber;
#endif  // !_MSC_VER

PacketStatsClass::PacketStatsClass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PacketStatsClass)
}

void PacketStatsClass::InitAsDefaultInstance() {
  counter_ = const_cast< ::PacketStatsCounter*>(&::PacketStatsCounter::default_instance());
}

PacketStatsClass::PacketStatsClass(const PacketStatsClass& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PacketStatsClass)
}

void PacketStatsClass::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  counter_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PacketStatsClass::~PacketStatsClass() {
  // @@protoc_insertion_point(destructor:PacketStatsClass)
  SharedDtor();
}

void PacketStatsClass::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete counter_;
  }
}

void PacketStatsClass::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacketStatsClass::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacketStatsClass_descriptor_;
}

const PacketStatsClass& PacketStatsClass::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_packet_5fstats_2eproto();
  return *default_instance_;
}

PacketStatsClass* PacketStatsClass::default_instance_ = NULL;

PacketStatsClass* PacketStatsClass::New(::google::protobuf::Arena* arena) const {
  PacketStatsClass* n = new PacketStatsClass;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PacketStatsClass::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_counter()) {
      if (counter_ != NULL) counter_->::PacketStatsCounter::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PacketStatsClass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PacketStatsClass)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PacketStatsClass.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_counter;
        break;
      }

      // required .PacketStatsCounter counter = 2;
      case 2: {
        if (tag == 18) {
         parse_counter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_counter()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PacketStatsClass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PacketStatsClass)
  return false;
#undef DO_
}

void PacketStatsClass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PacketStatsClass)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PacketStatsClass.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required .PacketStatsCounter counter = 2;
  if (has_counter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->counter_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PacketStatsClass)
}

::google::protobuf::uint8* PacketStatsClass::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PacketStatsClass)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PacketStatsClass.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .PacketStatsCounter counter = 2;
  if (has_counter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->counter_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PacketStatsClass)
  return target;
}

int PacketStatsClass::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_counter()) {
    // required .PacketStatsCounter counter = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->counter_);
  }

  return total_size;
}
int PacketStatsClass::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required .PacketStatsCounter counter = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->counter_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacketStatsClass::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PacketStatsClass* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketStatsClass>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PacketStatsClass::MergeFrom(const PacketStatsClass& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_counter()) {
      mutable_counter()->::PacketStatsCounter::MergeFrom(from.counter());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PacketStatsClass::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketStatsClass::CopyFrom(const PacketStatsClass& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketStatsClass::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_counter()) {
    if (!this->counter_->IsInitialized()) return false;
  }
  return true;
}

void PacketStatsClass::Swap(PacketStatsClass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PacketStatsClass::InternalSwap(PacketStatsClass* other) {
  name_.Swap(&other->name_);
  std::swap(counter_, other->counter_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PacketStatsClass::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PacketStatsClass_descriptor_;
  metadata.reflection = PacketStatsClass_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PacketStatsClass

// required string name = 1;
bool PacketStatsClass::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PacketStatsClass::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void PacketStatsClass::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void PacketStatsClass::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& PacketStatsClass::name() const {
  // @@protoc_insertion_point(field_get:PacketStatsClass.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PacketStatsClass::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PacketStatsClass.name)
}
 void PacketStatsClass::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PacketStatsClass.name)
}
 void PacketStatsClass::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PacketStatsClass.name)
}
 ::std::string* PacketStatsClass::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:PacketStatsClass.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* PacketStatsClass::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void PacketStatsClass::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PacketStatsClass.name)
}

// required .PacketStatsCounter counter = 2;
bool PacketStatsClass::has_counter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PacketStatsClass::set_has_counter() {
  _has_bits_[0] |= 0x00000002u;
}
void PacketStatsClass::clear_has_counter() {
  _has_bits_[0] &= ~0x00000002u;
}
void PacketStatsClass::clear_counter() {
  if (counter_ != NULL) counter_->::PacketStatsCounter::Clear();
  clear_has_counter();
}
const ::PacketStatsCounter& PacketStatsClass::counter() const {
  // @@protoc_insertion_point(field_get:PacketStatsClass.counter)
  return counter_ != NULL ? *counter_ : *default_instance_->counter_;
}
::PacketStatsCounter* PacketStatsClass::mutable_counter() {
  set_has_counter();
  if (counter_ == NULL) {
    counter_ = new ::PacketStatsCounter;
  }
  // @@protoc_insertion_point(field_mutable:PacketStatsClass.counter)
  return counter_;
}
::PacketStatsCounter* PacketStatsClass::release_counter() {
  clear_has_counter();
  ::PacketStatsCounter* temp = counter_;
  counter_ = NULL;
  return temp;
}
void PacketStatsClass::set_allocated_counter(::PacketStatsCounter* counter) {
  delete counter_;
  counter_ = counter;
  if (counter) {
    set_has_counter();
  } else {
    clear_has_counter();
  }
  // @@protoc_insertion_point(field_set_allocated:PacketStatsClass.counter)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int PacketStatsCounter::kPacketCountFieldNumber;
const int PacketStatsCounter::kByteCountFieldNumber;
const int PacketStatsCounter::kPacketRateFieldNumber;
#endif  // !_MSC_VER

PacketStatsCounter::PacketStatsCounter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PacketStatsCounter)
}

void PacketStatsCounter::InitAsDefaultInstance() {
}

PacketStatsCounter::PacketStatsCounter(const PacketStatsCounter& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PacketStatsCounter)
}

void PacketStatsCounter::SharedCtor() {
  _cached_size_ = 0;
  packet_count_ = GOOGLE_ULONGLONG(0);
  byte_count_ = GOOGLE_ULONGLONG(0);
  packet_rate_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PacketStatsCounter::~PacketStatsCounter() {
  // @@protoc_insertion_point(destructor:PacketStatsCounter)
  SharedDtor();
}

void PacketStatsCounter::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PacketStatsCounter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacketStatsCounter::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PacketStatsCounter_descriptor_;
}

const PacketStatsCounter& PacketStatsCounter::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_packet_5fstats_2eproto();
  return *default_instance_;
}

PacketStatsCounter* PacketStatsCounter::default_instance_ = NULL;

PacketStatsCounter* PacketStatsCounter::New(::google::protobuf::Arena* arena) const {
  PacketStatsCounter* n = new PacketStatsCounter;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PacketStatsCounter::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PacketStatsCounter*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(packet_count_, packet_rate_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PacketStatsCounter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PacketStatsCounter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 packet_count = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &packet_count_)));
          set_has_packet_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_byte_count;
        break;
      }

      // optional uint64 byte_count = 2;
      case 2: {
        if (tag == 16) {
         parse_byte_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &byte_count_)));
          set_has_byte_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_packet_rate;
        break;
      }

      // optional uint64 packet_rate = 3;
      case 3: {
        if (tag == 24) {
         parse_packet_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &packet_rate_)));
          set_has_packet_rate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PacketStatsCounter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PacketStatsCounter)
  return false;
#undef DO_
}

void PacketStatsCounter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PacketStatsCounter)
  // required uint64 packet_count = 1;
  if (has_packet_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->packet_count(), output);
  }

  // optional uint64 byte_count = 2;
  if (has_byte_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->byte_count(), output);
  }

  // optional uint64 packet_rate = 3;
  if (has_packet_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->packet_rate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PacketStatsCounter)
}

::google::protobuf::uint8* PacketStatsCounter::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PacketStatsCounter)
  // required uint64 packet_count = 1;
  if (has_packet_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->packet_count(), target);
  }

  // optional uint64 byte_count = 2;
  if (has_byte_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->byte_count(), target);
  }

  // optional uint64 packet_rate = 3;
  if (has_packet_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->packet_rate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PacketStatsCounter)
  return target;
}

int PacketStatsCounter::ByteSize() const {
  int total_size = 0;

  // required uint64 packet_count = 1;
  if (has_packet_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->packet_count());
  }
  if (_has_bits_[1 / 32] & 6u) {
    // optional uint64 byte_count = 2;
    if (has_byte_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->byte_count());
    }

    // optional uint64 packet_rate = 3;
    if (has_packet_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->packet_rate());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacketStatsCounter::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PacketStatsCounter* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketStatsCounter>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PacketStatsCounter::MergeFrom(const PacketStatsCounter& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_packet_count()) {
      set_packet_count(from.packet_count());
    }
    if (from.has_byte_count()) {
      set_byte_count(from.byte_count());
    }
    if (from.has_packet_rate()) {
      set_packet_rate(from.packet_rate());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PacketStatsCounter::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketStatsCounter::CopyFrom(const PacketStatsCounter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketStatsCounter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PacketStatsCounter::Swap(PacketStatsCounter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PacketStatsCounter::InternalSwap(PacketStatsCounter* other) {
  std::swap(packet_count_, other->packet_count_);
  std::swap(byte_count_, other->byte_count_);
  std::swap(packet_rate_, other->packet_rate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PacketStatsCounter::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PacketStatsCounter_descriptor_;
  metadata.reflection = PacketStatsCounter_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PacketStatsCounter

// required uint64 packet_count = 1;
bool PacketStatsCounter::has_packet_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PacketStatsCounter::set_has_packet_count() {
  _has_bits_[0] |= 0x00000001u;
}
void PacketStatsCounter::clear_has_packet_count() {
  _has_bits_[0] &= ~0x00000001u;
}
void PacketStatsCounter::clear_packet_count() {
  packet_count_ = GOOGLE_ULONGLONG(0);
  clear_has_packet_count();
}
 ::google::protobuf::uint64 PacketStatsCounter::packet_count() const {
  // @@protoc_insertion_point(field_get:PacketStatsCounter.packet_count)
  return packet_count_;
}
 void PacketStatsCounter::set_packet_count(::google::protobuf::uint64 value) {
  set_has_packet_count();
  packet_count_ = value;
  // @@protoc_insertion_point(field_set:PacketStatsCounter.packet_count)
}

// optional uint64 byte_count = 2;
bool PacketStatsCounter::has_byte_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PacketStatsCounter::set_has_byte_count() {
  _has_bits_[0] |= 0x00000002u;
}
void PacketStatsCounter::clear_has_byte_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void PacketStatsCounter::clear_byte_count() {
  byte_count_ = GOOGLE_ULONGLONG(0);
  clear_has_byte_count();
}
 ::google::protobuf::uint64 PacketStatsCounter::byte_count() const {
  // @@protoc_insertion_point(field_get:PacketStatsCounter.byte_count)
  return byte_count_;
}
 void PacketStatsCounter::set_byte_count(::google::protobuf::uint64 value) {
  set_has_byte_count();
  byte_count_ = value;
  // @@protoc_insertion_point(field_set:PacketStatsCounter.byte_count)
}

// optional uint64 packet_rate = 3;
bool PacketStatsCounter::has_packet_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PacketStatsCounter::set_has_packet_rate() {
  _has_bits_[0] |= 0x00000004u;
}
void PacketStatsCounter::clear_has_packet_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
void PacketStatsCounter::clear_packet_rate() {
  packet_rate_ = GOOGLE_ULONGLONG(0);
  clear_has_packet_rate();
}
 ::google::protobuf::uint64 PacketStatsCounter::packet_rate() const {
  // @@protoc_insertion_point(field_get:PacketStatsCounter.packet_rate)
  return packet_rate_;
}
 void PacketStatsCounter::set_packet_rate(::google::protobuf::uint64 value) {
  set_has_packet_rate();
  packet_rate_ = value;
  // @@protoc_insertion_point(field_set:PacketStatsCounter.packet_rate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::JuniperNetworksSensors,
    ::google::protobuf::internal::MessageTypeTraits< ::PacketStatistics >, 11, false >
  jnpr_packet_statistics_ext(kJnprPacketStatisticsExtFieldNumber, ::PacketStatistics::default_instance());

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
