// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agent.proto

#ifndef PROTOBUF_agent_2eproto__INCLUDED
#define PROTOBUF_agent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace agent {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_agent_2eproto();
void protobuf_AssignDesc_agent_2eproto();
void protobuf_ShutdownFile_agent_2eproto();

class GetRequest;
class KeyValue;
class OpenConfigData;
class Path;
class Reply;
class SubscriptionRequest;
class UnSubscribeRequest;

enum ReturnCode {
  NONE = 0,
  OK = 1,
  NO_SUBSCRIPTION_ENTRY = 2,
  UNSUPPORTED_PATHS = 3,
  ReturnCode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ReturnCode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ReturnCode_IsValid(int value);
const ReturnCode ReturnCode_MIN = NONE;
const ReturnCode ReturnCode_MAX = UNSUPPORTED_PATHS;
const int ReturnCode_ARRAYSIZE = ReturnCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReturnCode_descriptor();
inline const ::std::string& ReturnCode_Name(ReturnCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReturnCode_descriptor(), value);
}
inline bool ReturnCode_Parse(
    const ::std::string& name, ReturnCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReturnCode>(
    ReturnCode_descriptor(), name, value);
}
// ===================================================================

class SubscriptionRequest : public ::google::protobuf::Message {
 public:
  SubscriptionRequest();
  virtual ~SubscriptionRequest();

  SubscriptionRequest(const SubscriptionRequest& from);

  inline SubscriptionRequest& operator=(const SubscriptionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubscriptionRequest& default_instance();

  void Swap(SubscriptionRequest* other);

  // implements Message ----------------------------------------------

  inline SubscriptionRequest* New() const { return New(NULL); }

  SubscriptionRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubscriptionRequest& from);
  void MergeFrom(const SubscriptionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SubscriptionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .agent.Path path_list = 1;
  int path_list_size() const;
  void clear_path_list();
  static const int kPathListFieldNumber = 1;
  const ::agent::Path& path_list(int index) const;
  ::agent::Path* mutable_path_list(int index);
  ::agent::Path* add_path_list();
  ::google::protobuf::RepeatedPtrField< ::agent::Path >*
      mutable_path_list();
  const ::google::protobuf::RepeatedPtrField< ::agent::Path >&
      path_list() const;

  // optional int32 limit_records = 2;
  void clear_limit_records();
  static const int kLimitRecordsFieldNumber = 2;
  ::google::protobuf::int32 limit_records() const;
  void set_limit_records(::google::protobuf::int32 value);

  // optional int32 limit_time_seconds = 3;
  void clear_limit_time_seconds();
  static const int kLimitTimeSecondsFieldNumber = 3;
  ::google::protobuf::int32 limit_time_seconds() const;
  void set_limit_time_seconds(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:agent.SubscriptionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::agent::Path > path_list_;
  ::google::protobuf::int32 limit_records_;
  ::google::protobuf::int32 limit_time_seconds_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_agent_2eproto();
  friend void protobuf_AssignDesc_agent_2eproto();
  friend void protobuf_ShutdownFile_agent_2eproto();

  void InitAsDefaultInstance();
  static SubscriptionRequest* default_instance_;
};
// -------------------------------------------------------------------

class UnSubscribeRequest : public ::google::protobuf::Message {
 public:
  UnSubscribeRequest();
  virtual ~UnSubscribeRequest();

  UnSubscribeRequest(const UnSubscribeRequest& from);

  inline UnSubscribeRequest& operator=(const UnSubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnSubscribeRequest& default_instance();

  void Swap(UnSubscribeRequest* other);

  // implements Message ----------------------------------------------

  inline UnSubscribeRequest* New() const { return New(NULL); }

  UnSubscribeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnSubscribeRequest& from);
  void MergeFrom(const UnSubscribeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnSubscribeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:agent.UnSubscribeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_agent_2eproto();
  friend void protobuf_AssignDesc_agent_2eproto();
  friend void protobuf_ShutdownFile_agent_2eproto();

  void InitAsDefaultInstance();
  static UnSubscribeRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetRequest : public ::google::protobuf::Message {
 public:
  GetRequest();
  virtual ~GetRequest();

  GetRequest(const GetRequest& from);

  inline GetRequest& operator=(const GetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRequest& default_instance();

  void Swap(GetRequest* other);

  // implements Message ----------------------------------------------

  inline GetRequest* New() const { return New(NULL); }

  GetRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRequest& from);
  void MergeFrom(const GetRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 verbosity = 1;
  void clear_verbosity();
  static const int kVerbosityFieldNumber = 1;
  ::google::protobuf::int32 verbosity() const;
  void set_verbosity(::google::protobuf::int32 value);

  // optional int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:agent.GetRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 verbosity_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_agent_2eproto();
  friend void protobuf_AssignDesc_agent_2eproto();
  friend void protobuf_ShutdownFile_agent_2eproto();

  void InitAsDefaultInstance();
  static GetRequest* default_instance_;
};
// -------------------------------------------------------------------

class Reply : public ::google::protobuf::Message {
 public:
  Reply();
  virtual ~Reply();

  Reply(const Reply& from);

  inline Reply& operator=(const Reply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Reply& default_instance();

  void Swap(Reply* other);

  // implements Message ----------------------------------------------

  inline Reply* New() const { return New(NULL); }

  Reply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Reply& from);
  void MergeFrom(const Reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Reply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .agent.ReturnCode code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::agent::ReturnCode code() const;
  void set_code(::agent::ReturnCode value);

  // optional string code_str = 2;
  void clear_code_str();
  static const int kCodeStrFieldNumber = 2;
  const ::std::string& code_str() const;
  void set_code_str(const ::std::string& value);
  void set_code_str(const char* value);
  void set_code_str(const char* value, size_t size);
  ::std::string* mutable_code_str();
  ::std::string* release_code_str();
  void set_allocated_code_str(::std::string* code_str);

  // repeated .agent.Path path_list = 3;
  int path_list_size() const;
  void clear_path_list();
  static const int kPathListFieldNumber = 3;
  const ::agent::Path& path_list(int index) const;
  ::agent::Path* mutable_path_list(int index);
  ::agent::Path* add_path_list();
  ::google::protobuf::RepeatedPtrField< ::agent::Path >*
      mutable_path_list();
  const ::google::protobuf::RepeatedPtrField< ::agent::Path >&
      path_list() const;

  // @@protoc_insertion_point(class_scope:agent.Reply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr code_str_;
  ::google::protobuf::RepeatedPtrField< ::agent::Path > path_list_;
  int code_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_agent_2eproto();
  friend void protobuf_AssignDesc_agent_2eproto();
  friend void protobuf_ShutdownFile_agent_2eproto();

  void InitAsDefaultInstance();
  static Reply* default_instance_;
};
// -------------------------------------------------------------------

class Path : public ::google::protobuf::Message {
 public:
  Path();
  virtual ~Path();

  Path(const Path& from);

  inline Path& operator=(const Path& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Path& default_instance();

  void Swap(Path* other);

  // implements Message ----------------------------------------------

  inline Path* New() const { return New(NULL); }

  Path* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Path& from);
  void MergeFrom(const Path& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Path* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional string filter = 2;
  void clear_filter();
  static const int kFilterFieldNumber = 2;
  const ::std::string& filter() const;
  void set_filter(const ::std::string& value);
  void set_filter(const char* value);
  void set_filter(const char* value, size_t size);
  ::std::string* mutable_filter();
  ::std::string* release_filter();
  void set_allocated_filter(::std::string* filter);

  // optional uint32 sample_frequency = 3;
  void clear_sample_frequency();
  static const int kSampleFrequencyFieldNumber = 3;
  ::google::protobuf::uint32 sample_frequency() const;
  void set_sample_frequency(::google::protobuf::uint32 value);

  // optional bool suppress_unchanged = 4;
  void clear_suppress_unchanged();
  static const int kSuppressUnchangedFieldNumber = 4;
  bool suppress_unchanged() const;
  void set_suppress_unchanged(bool value);

  // optional uint32 max_silent_interval = 5;
  void clear_max_silent_interval();
  static const int kMaxSilentIntervalFieldNumber = 5;
  ::google::protobuf::uint32 max_silent_interval() const;
  void set_max_silent_interval(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:agent.Path)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr filter_;
  ::google::protobuf::uint32 sample_frequency_;
  bool suppress_unchanged_;
  ::google::protobuf::uint32 max_silent_interval_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_agent_2eproto();
  friend void protobuf_AssignDesc_agent_2eproto();
  friend void protobuf_ShutdownFile_agent_2eproto();

  void InitAsDefaultInstance();
  static Path* default_instance_;
};
// -------------------------------------------------------------------

class OpenConfigData : public ::google::protobuf::Message {
 public:
  OpenConfigData();
  virtual ~OpenConfigData();

  OpenConfigData(const OpenConfigData& from);

  inline OpenConfigData& operator=(const OpenConfigData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenConfigData& default_instance();

  void Swap(OpenConfigData* other);

  // implements Message ----------------------------------------------

  inline OpenConfigData* New() const { return New(NULL); }

  OpenConfigData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OpenConfigData& from);
  void MergeFrom(const OpenConfigData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OpenConfigData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string system_id = 1;
  void clear_system_id();
  static const int kSystemIdFieldNumber = 1;
  const ::std::string& system_id() const;
  void set_system_id(const ::std::string& value);
  void set_system_id(const char* value);
  void set_system_id(const char* value, size_t size);
  ::std::string* mutable_system_id();
  ::std::string* release_system_id();
  void set_allocated_system_id(::std::string* system_id);

  // optional uint32 component_id = 2;
  void clear_component_id();
  static const int kComponentIdFieldNumber = 2;
  ::google::protobuf::uint32 component_id() const;
  void set_component_id(::google::protobuf::uint32 value);

  // optional uint32 sub_component_id = 3;
  void clear_sub_component_id();
  static const int kSubComponentIdFieldNumber = 3;
  ::google::protobuf::uint32 sub_component_id() const;
  void set_sub_component_id(::google::protobuf::uint32 value);

  // optional string sensor_name = 4;
  void clear_sensor_name();
  static const int kSensorNameFieldNumber = 4;
  const ::std::string& sensor_name() const;
  void set_sensor_name(const ::std::string& value);
  void set_sensor_name(const char* value);
  void set_sensor_name(const char* value, size_t size);
  ::std::string* mutable_sensor_name();
  ::std::string* release_sensor_name();
  void set_allocated_sensor_name(::std::string* sensor_name);

  // optional uint32 sequence_number = 5;
  void clear_sequence_number();
  static const int kSequenceNumberFieldNumber = 5;
  ::google::protobuf::uint32 sequence_number() const;
  void set_sequence_number(::google::protobuf::uint32 value);

  // optional uint64 timestamp = 6;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 6;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // repeated .agent.KeyValue kv = 7;
  int kv_size() const;
  void clear_kv();
  static const int kKvFieldNumber = 7;
  const ::agent::KeyValue& kv(int index) const;
  ::agent::KeyValue* mutable_kv(int index);
  ::agent::KeyValue* add_kv();
  ::google::protobuf::RepeatedPtrField< ::agent::KeyValue >*
      mutable_kv();
  const ::google::protobuf::RepeatedPtrField< ::agent::KeyValue >&
      kv() const;

  // @@protoc_insertion_point(class_scope:agent.OpenConfigData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr system_id_;
  ::google::protobuf::uint32 component_id_;
  ::google::protobuf::uint32 sub_component_id_;
  ::google::protobuf::internal::ArenaStringPtr sensor_name_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::RepeatedPtrField< ::agent::KeyValue > kv_;
  ::google::protobuf::uint32 sequence_number_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_agent_2eproto();
  friend void protobuf_AssignDesc_agent_2eproto();
  friend void protobuf_ShutdownFile_agent_2eproto();

  void InitAsDefaultInstance();
  static OpenConfigData* default_instance_;
};
// -------------------------------------------------------------------

class KeyValue : public ::google::protobuf::Message {
 public:
  KeyValue();
  virtual ~KeyValue();

  KeyValue(const KeyValue& from);

  inline KeyValue& operator=(const KeyValue& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KeyValue& default_instance();

  void Swap(KeyValue* other);

  // implements Message ----------------------------------------------

  inline KeyValue* New() const { return New(NULL); }

  KeyValue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KeyValue& from);
  void MergeFrom(const KeyValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(KeyValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional int64 int_value = 2;
  void clear_int_value();
  static const int kIntValueFieldNumber = 2;
  ::google::protobuf::int64 int_value() const;
  void set_int_value(::google::protobuf::int64 value);

  // optional string str_value = 3;
  void clear_str_value();
  static const int kStrValueFieldNumber = 3;
  const ::std::string& str_value() const;
  void set_str_value(const ::std::string& value);
  void set_str_value(const char* value);
  void set_str_value(const char* value, size_t size);
  ::std::string* mutable_str_value();
  ::std::string* release_str_value();
  void set_allocated_str_value(::std::string* str_value);

  // @@protoc_insertion_point(class_scope:agent.KeyValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int64 int_value_;
  ::google::protobuf::internal::ArenaStringPtr str_value_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_agent_2eproto();
  friend void protobuf_AssignDesc_agent_2eproto();
  friend void protobuf_ShutdownFile_agent_2eproto();

  void InitAsDefaultInstance();
  static KeyValue* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscriptionRequest

// repeated .agent.Path path_list = 1;
inline int SubscriptionRequest::path_list_size() const {
  return path_list_.size();
}
inline void SubscriptionRequest::clear_path_list() {
  path_list_.Clear();
}
inline const ::agent::Path& SubscriptionRequest::path_list(int index) const {
  // @@protoc_insertion_point(field_get:agent.SubscriptionRequest.path_list)
  return path_list_.Get(index);
}
inline ::agent::Path* SubscriptionRequest::mutable_path_list(int index) {
  // @@protoc_insertion_point(field_mutable:agent.SubscriptionRequest.path_list)
  return path_list_.Mutable(index);
}
inline ::agent::Path* SubscriptionRequest::add_path_list() {
  // @@protoc_insertion_point(field_add:agent.SubscriptionRequest.path_list)
  return path_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::agent::Path >*
SubscriptionRequest::mutable_path_list() {
  // @@protoc_insertion_point(field_mutable_list:agent.SubscriptionRequest.path_list)
  return &path_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::agent::Path >&
SubscriptionRequest::path_list() const {
  // @@protoc_insertion_point(field_list:agent.SubscriptionRequest.path_list)
  return path_list_;
}

// optional int32 limit_records = 2;
inline void SubscriptionRequest::clear_limit_records() {
  limit_records_ = 0;
}
inline ::google::protobuf::int32 SubscriptionRequest::limit_records() const {
  // @@protoc_insertion_point(field_get:agent.SubscriptionRequest.limit_records)
  return limit_records_;
}
inline void SubscriptionRequest::set_limit_records(::google::protobuf::int32 value) {
  
  limit_records_ = value;
  // @@protoc_insertion_point(field_set:agent.SubscriptionRequest.limit_records)
}

// optional int32 limit_time_seconds = 3;
inline void SubscriptionRequest::clear_limit_time_seconds() {
  limit_time_seconds_ = 0;
}
inline ::google::protobuf::int32 SubscriptionRequest::limit_time_seconds() const {
  // @@protoc_insertion_point(field_get:agent.SubscriptionRequest.limit_time_seconds)
  return limit_time_seconds_;
}
inline void SubscriptionRequest::set_limit_time_seconds(::google::protobuf::int32 value) {
  
  limit_time_seconds_ = value;
  // @@protoc_insertion_point(field_set:agent.SubscriptionRequest.limit_time_seconds)
}

// -------------------------------------------------------------------

// UnSubscribeRequest

// optional int32 id = 1;
inline void UnSubscribeRequest::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 UnSubscribeRequest::id() const {
  // @@protoc_insertion_point(field_get:agent.UnSubscribeRequest.id)
  return id_;
}
inline void UnSubscribeRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:agent.UnSubscribeRequest.id)
}

// -------------------------------------------------------------------

// GetRequest

// optional int32 verbosity = 1;
inline void GetRequest::clear_verbosity() {
  verbosity_ = 0;
}
inline ::google::protobuf::int32 GetRequest::verbosity() const {
  // @@protoc_insertion_point(field_get:agent.GetRequest.verbosity)
  return verbosity_;
}
inline void GetRequest::set_verbosity(::google::protobuf::int32 value) {
  
  verbosity_ = value;
  // @@protoc_insertion_point(field_set:agent.GetRequest.verbosity)
}

// optional int32 id = 2;
inline void GetRequest::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 GetRequest::id() const {
  // @@protoc_insertion_point(field_get:agent.GetRequest.id)
  return id_;
}
inline void GetRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:agent.GetRequest.id)
}

// -------------------------------------------------------------------

// Reply

// optional .agent.ReturnCode code = 1;
inline void Reply::clear_code() {
  code_ = 0;
}
inline ::agent::ReturnCode Reply::code() const {
  // @@protoc_insertion_point(field_get:agent.Reply.code)
  return static_cast< ::agent::ReturnCode >(code_);
}
inline void Reply::set_code(::agent::ReturnCode value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:agent.Reply.code)
}

// optional string code_str = 2;
inline void Reply::clear_code_str() {
  code_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Reply::code_str() const {
  // @@protoc_insertion_point(field_get:agent.Reply.code_str)
  return code_str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reply::set_code_str(const ::std::string& value) {
  
  code_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent.Reply.code_str)
}
inline void Reply::set_code_str(const char* value) {
  
  code_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent.Reply.code_str)
}
inline void Reply::set_code_str(const char* value, size_t size) {
  
  code_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent.Reply.code_str)
}
inline ::std::string* Reply::mutable_code_str() {
  
  // @@protoc_insertion_point(field_mutable:agent.Reply.code_str)
  return code_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Reply::release_code_str() {
  
  return code_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Reply::set_allocated_code_str(::std::string* code_str) {
  if (code_str != NULL) {
    
  } else {
    
  }
  code_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code_str);
  // @@protoc_insertion_point(field_set_allocated:agent.Reply.code_str)
}

// repeated .agent.Path path_list = 3;
inline int Reply::path_list_size() const {
  return path_list_.size();
}
inline void Reply::clear_path_list() {
  path_list_.Clear();
}
inline const ::agent::Path& Reply::path_list(int index) const {
  // @@protoc_insertion_point(field_get:agent.Reply.path_list)
  return path_list_.Get(index);
}
inline ::agent::Path* Reply::mutable_path_list(int index) {
  // @@protoc_insertion_point(field_mutable:agent.Reply.path_list)
  return path_list_.Mutable(index);
}
inline ::agent::Path* Reply::add_path_list() {
  // @@protoc_insertion_point(field_add:agent.Reply.path_list)
  return path_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::agent::Path >*
Reply::mutable_path_list() {
  // @@protoc_insertion_point(field_mutable_list:agent.Reply.path_list)
  return &path_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::agent::Path >&
Reply::path_list() const {
  // @@protoc_insertion_point(field_list:agent.Reply.path_list)
  return path_list_;
}

// -------------------------------------------------------------------

// Path

// optional string path = 1;
inline void Path::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Path::path() const {
  // @@protoc_insertion_point(field_get:agent.Path.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Path::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent.Path.path)
}
inline void Path::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent.Path.path)
}
inline void Path::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent.Path.path)
}
inline ::std::string* Path::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:agent.Path.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Path::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Path::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:agent.Path.path)
}

// optional string filter = 2;
inline void Path::clear_filter() {
  filter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Path::filter() const {
  // @@protoc_insertion_point(field_get:agent.Path.filter)
  return filter_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Path::set_filter(const ::std::string& value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent.Path.filter)
}
inline void Path::set_filter(const char* value) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent.Path.filter)
}
inline void Path::set_filter(const char* value, size_t size) {
  
  filter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent.Path.filter)
}
inline ::std::string* Path::mutable_filter() {
  
  // @@protoc_insertion_point(field_mutable:agent.Path.filter)
  return filter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Path::release_filter() {
  
  return filter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Path::set_allocated_filter(::std::string* filter) {
  if (filter != NULL) {
    
  } else {
    
  }
  filter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter);
  // @@protoc_insertion_point(field_set_allocated:agent.Path.filter)
}

// optional uint32 sample_frequency = 3;
inline void Path::clear_sample_frequency() {
  sample_frequency_ = 0u;
}
inline ::google::protobuf::uint32 Path::sample_frequency() const {
  // @@protoc_insertion_point(field_get:agent.Path.sample_frequency)
  return sample_frequency_;
}
inline void Path::set_sample_frequency(::google::protobuf::uint32 value) {
  
  sample_frequency_ = value;
  // @@protoc_insertion_point(field_set:agent.Path.sample_frequency)
}

// optional bool suppress_unchanged = 4;
inline void Path::clear_suppress_unchanged() {
  suppress_unchanged_ = false;
}
inline bool Path::suppress_unchanged() const {
  // @@protoc_insertion_point(field_get:agent.Path.suppress_unchanged)
  return suppress_unchanged_;
}
inline void Path::set_suppress_unchanged(bool value) {
  
  suppress_unchanged_ = value;
  // @@protoc_insertion_point(field_set:agent.Path.suppress_unchanged)
}

// optional uint32 max_silent_interval = 5;
inline void Path::clear_max_silent_interval() {
  max_silent_interval_ = 0u;
}
inline ::google::protobuf::uint32 Path::max_silent_interval() const {
  // @@protoc_insertion_point(field_get:agent.Path.max_silent_interval)
  return max_silent_interval_;
}
inline void Path::set_max_silent_interval(::google::protobuf::uint32 value) {
  
  max_silent_interval_ = value;
  // @@protoc_insertion_point(field_set:agent.Path.max_silent_interval)
}

// -------------------------------------------------------------------

// OpenConfigData

// optional string system_id = 1;
inline void OpenConfigData::clear_system_id() {
  system_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpenConfigData::system_id() const {
  // @@protoc_insertion_point(field_get:agent.OpenConfigData.system_id)
  return system_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenConfigData::set_system_id(const ::std::string& value) {
  
  system_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent.OpenConfigData.system_id)
}
inline void OpenConfigData::set_system_id(const char* value) {
  
  system_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent.OpenConfigData.system_id)
}
inline void OpenConfigData::set_system_id(const char* value, size_t size) {
  
  system_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent.OpenConfigData.system_id)
}
inline ::std::string* OpenConfigData::mutable_system_id() {
  
  // @@protoc_insertion_point(field_mutable:agent.OpenConfigData.system_id)
  return system_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenConfigData::release_system_id() {
  
  return system_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenConfigData::set_allocated_system_id(::std::string* system_id) {
  if (system_id != NULL) {
    
  } else {
    
  }
  system_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_id);
  // @@protoc_insertion_point(field_set_allocated:agent.OpenConfigData.system_id)
}

// optional uint32 component_id = 2;
inline void OpenConfigData::clear_component_id() {
  component_id_ = 0u;
}
inline ::google::protobuf::uint32 OpenConfigData::component_id() const {
  // @@protoc_insertion_point(field_get:agent.OpenConfigData.component_id)
  return component_id_;
}
inline void OpenConfigData::set_component_id(::google::protobuf::uint32 value) {
  
  component_id_ = value;
  // @@protoc_insertion_point(field_set:agent.OpenConfigData.component_id)
}

// optional uint32 sub_component_id = 3;
inline void OpenConfigData::clear_sub_component_id() {
  sub_component_id_ = 0u;
}
inline ::google::protobuf::uint32 OpenConfigData::sub_component_id() const {
  // @@protoc_insertion_point(field_get:agent.OpenConfigData.sub_component_id)
  return sub_component_id_;
}
inline void OpenConfigData::set_sub_component_id(::google::protobuf::uint32 value) {
  
  sub_component_id_ = value;
  // @@protoc_insertion_point(field_set:agent.OpenConfigData.sub_component_id)
}

// optional string sensor_name = 4;
inline void OpenConfigData::clear_sensor_name() {
  sensor_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpenConfigData::sensor_name() const {
  // @@protoc_insertion_point(field_get:agent.OpenConfigData.sensor_name)
  return sensor_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenConfigData::set_sensor_name(const ::std::string& value) {
  
  sensor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent.OpenConfigData.sensor_name)
}
inline void OpenConfigData::set_sensor_name(const char* value) {
  
  sensor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent.OpenConfigData.sensor_name)
}
inline void OpenConfigData::set_sensor_name(const char* value, size_t size) {
  
  sensor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent.OpenConfigData.sensor_name)
}
inline ::std::string* OpenConfigData::mutable_sensor_name() {
  
  // @@protoc_insertion_point(field_mutable:agent.OpenConfigData.sensor_name)
  return sensor_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenConfigData::release_sensor_name() {
  
  return sensor_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenConfigData::set_allocated_sensor_name(::std::string* sensor_name) {
  if (sensor_name != NULL) {
    
  } else {
    
  }
  sensor_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sensor_name);
  // @@protoc_insertion_point(field_set_allocated:agent.OpenConfigData.sensor_name)
}

// optional uint32 sequence_number = 5;
inline void OpenConfigData::clear_sequence_number() {
  sequence_number_ = 0u;
}
inline ::google::protobuf::uint32 OpenConfigData::sequence_number() const {
  // @@protoc_insertion_point(field_get:agent.OpenConfigData.sequence_number)
  return sequence_number_;
}
inline void OpenConfigData::set_sequence_number(::google::protobuf::uint32 value) {
  
  sequence_number_ = value;
  // @@protoc_insertion_point(field_set:agent.OpenConfigData.sequence_number)
}

// optional uint64 timestamp = 6;
inline void OpenConfigData::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OpenConfigData::timestamp() const {
  // @@protoc_insertion_point(field_get:agent.OpenConfigData.timestamp)
  return timestamp_;
}
inline void OpenConfigData::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:agent.OpenConfigData.timestamp)
}

// repeated .agent.KeyValue kv = 7;
inline int OpenConfigData::kv_size() const {
  return kv_.size();
}
inline void OpenConfigData::clear_kv() {
  kv_.Clear();
}
inline const ::agent::KeyValue& OpenConfigData::kv(int index) const {
  // @@protoc_insertion_point(field_get:agent.OpenConfigData.kv)
  return kv_.Get(index);
}
inline ::agent::KeyValue* OpenConfigData::mutable_kv(int index) {
  // @@protoc_insertion_point(field_mutable:agent.OpenConfigData.kv)
  return kv_.Mutable(index);
}
inline ::agent::KeyValue* OpenConfigData::add_kv() {
  // @@protoc_insertion_point(field_add:agent.OpenConfigData.kv)
  return kv_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::agent::KeyValue >*
OpenConfigData::mutable_kv() {
  // @@protoc_insertion_point(field_mutable_list:agent.OpenConfigData.kv)
  return &kv_;
}
inline const ::google::protobuf::RepeatedPtrField< ::agent::KeyValue >&
OpenConfigData::kv() const {
  // @@protoc_insertion_point(field_list:agent.OpenConfigData.kv)
  return kv_;
}

// -------------------------------------------------------------------

// KeyValue

// optional string key = 1;
inline void KeyValue::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KeyValue::key() const {
  // @@protoc_insertion_point(field_get:agent.KeyValue.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValue::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent.KeyValue.key)
}
inline void KeyValue::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent.KeyValue.key)
}
inline void KeyValue::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent.KeyValue.key)
}
inline ::std::string* KeyValue::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:agent.KeyValue.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KeyValue::release_key() {
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValue::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:agent.KeyValue.key)
}

// optional int64 int_value = 2;
inline void KeyValue::clear_int_value() {
  int_value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 KeyValue::int_value() const {
  // @@protoc_insertion_point(field_get:agent.KeyValue.int_value)
  return int_value_;
}
inline void KeyValue::set_int_value(::google::protobuf::int64 value) {
  
  int_value_ = value;
  // @@protoc_insertion_point(field_set:agent.KeyValue.int_value)
}

// optional string str_value = 3;
inline void KeyValue::clear_str_value() {
  str_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& KeyValue::str_value() const {
  // @@protoc_insertion_point(field_get:agent.KeyValue.str_value)
  return str_value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValue::set_str_value(const ::std::string& value) {
  
  str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent.KeyValue.str_value)
}
inline void KeyValue::set_str_value(const char* value) {
  
  str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent.KeyValue.str_value)
}
inline void KeyValue::set_str_value(const char* value, size_t size) {
  
  str_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent.KeyValue.str_value)
}
inline ::std::string* KeyValue::mutable_str_value() {
  
  // @@protoc_insertion_point(field_mutable:agent.KeyValue.str_value)
  return str_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KeyValue::release_str_value() {
  
  return str_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValue::set_allocated_str_value(::std::string* str_value) {
  if (str_value != NULL) {
    
  } else {
    
  }
  str_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str_value);
  // @@protoc_insertion_point(field_set_allocated:agent.KeyValue.str_value)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace agent

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::agent::ReturnCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::agent::ReturnCode>() {
  return ::agent::ReturnCode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_agent_2eproto__INCLUDED
