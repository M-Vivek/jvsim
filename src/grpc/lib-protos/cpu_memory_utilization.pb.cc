// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cpu_memory_utilization.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cpu_memory_utilization.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* CpuMemoryUtilization_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CpuMemoryUtilization_reflection_ = NULL;
const ::google::protobuf::Descriptor* CpuMemoryUtilizationSummary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CpuMemoryUtilizationSummary_reflection_ = NULL;
const ::google::protobuf::Descriptor* CpuMemoryUtilizationPerApplication_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CpuMemoryUtilizationPerApplication_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_cpu_5fmemory_5futilization_2eproto() {
  protobuf_AddDesc_cpu_5fmemory_5futilization_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "cpu_memory_utilization.proto");
  GOOGLE_CHECK(file != NULL);
  CpuMemoryUtilization_descriptor_ = file->message_type(0);
  static const int CpuMemoryUtilization_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilization, utilization_),
  };
  CpuMemoryUtilization_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CpuMemoryUtilization_descriptor_,
      CpuMemoryUtilization::default_instance_,
      CpuMemoryUtilization_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilization, _has_bits_[0]),
      -1,
      -1,
      sizeof(CpuMemoryUtilization),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilization, _internal_metadata_),
      -1);
  CpuMemoryUtilizationSummary_descriptor_ = file->message_type(1);
  static const int CpuMemoryUtilizationSummary_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilizationSummary, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilizationSummary, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilizationSummary, bytes_allocated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilizationSummary, utilization_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilizationSummary, application_utilization_),
  };
  CpuMemoryUtilizationSummary_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CpuMemoryUtilizationSummary_descriptor_,
      CpuMemoryUtilizationSummary::default_instance_,
      CpuMemoryUtilizationSummary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilizationSummary, _has_bits_[0]),
      -1,
      -1,
      sizeof(CpuMemoryUtilizationSummary),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilizationSummary, _internal_metadata_),
      -1);
  CpuMemoryUtilizationPerApplication_descriptor_ = file->message_type(2);
  static const int CpuMemoryUtilizationPerApplication_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilizationPerApplication, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilizationPerApplication, bytes_allocated_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilizationPerApplication, allocations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilizationPerApplication, frees_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilizationPerApplication, allocations_failed_),
  };
  CpuMemoryUtilizationPerApplication_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CpuMemoryUtilizationPerApplication_descriptor_,
      CpuMemoryUtilizationPerApplication::default_instance_,
      CpuMemoryUtilizationPerApplication_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilizationPerApplication, _has_bits_[0]),
      -1,
      -1,
      sizeof(CpuMemoryUtilizationPerApplication),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CpuMemoryUtilizationPerApplication, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_cpu_5fmemory_5futilization_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CpuMemoryUtilization_descriptor_, &CpuMemoryUtilization::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CpuMemoryUtilizationSummary_descriptor_, &CpuMemoryUtilizationSummary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CpuMemoryUtilizationPerApplication_descriptor_, &CpuMemoryUtilizationPerApplication::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_cpu_5fmemory_5futilization_2eproto() {
  delete CpuMemoryUtilization::default_instance_;
  delete CpuMemoryUtilization_reflection_;
  delete CpuMemoryUtilizationSummary::default_instance_;
  delete CpuMemoryUtilizationSummary_reflection_;
  delete CpuMemoryUtilizationPerApplication::default_instance_;
  delete CpuMemoryUtilizationPerApplication_reflection_;
}

void protobuf_AddDesc_cpu_5fmemory_5futilization_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_telemetry_5ftop_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034cpu_memory_utilization.proto\032\023telemetr"
    "y_top.proto\"I\n\024CpuMemoryUtilization\0221\n\013u"
    "tilization\030\001 \003(\0132\034.CpuMemoryUtilizationS"
    "ummary\"\255\001\n\033CpuMemoryUtilizationSummary\022\014"
    "\n\004name\030\001 \001(\t\022\014\n\004size\030\002 \001(\004\022\027\n\017bytes_allo"
    "cated\030\003 \001(\004\022\023\n\013utilization\030\004 \001(\005\022D\n\027appl"
    "ication_utilization\030\005 \003(\0132#.CpuMemoryUti"
    "lizationPerApplication\"\213\001\n\"CpuMemoryUtil"
    "izationPerApplication\022\014\n\004name\030\001 \001(\t\022\027\n\017b"
    "ytes_allocated\030\002 \001(\004\022\023\n\013allocations\030\003 \001("
    "\004\022\r\n\005frees\030\004 \001(\004\022\032\n\022allocations_failed\030\005"
    " \001(\004:K\n\023cpu_memory_util_ext\022\027.JuniperNet"
    "worksSensors\030\001 \001(\0132\025.CpuMemoryUtilizatio"
    "n", 521);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cpu_memory_utilization.proto", &protobuf_RegisterTypes);
  CpuMemoryUtilization::default_instance_ = new CpuMemoryUtilization();
  CpuMemoryUtilizationSummary::default_instance_ = new CpuMemoryUtilizationSummary();
  CpuMemoryUtilizationPerApplication::default_instance_ = new CpuMemoryUtilizationPerApplication();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::JuniperNetworksSensors::default_instance(),
    1, 11, false, false,
    &::CpuMemoryUtilization::default_instance());
  CpuMemoryUtilization::default_instance_->InitAsDefaultInstance();
  CpuMemoryUtilizationSummary::default_instance_->InitAsDefaultInstance();
  CpuMemoryUtilizationPerApplication::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_cpu_5fmemory_5futilization_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_cpu_5fmemory_5futilization_2eproto {
  StaticDescriptorInitializer_cpu_5fmemory_5futilization_2eproto() {
    protobuf_AddDesc_cpu_5fmemory_5futilization_2eproto();
  }
} static_descriptor_initializer_cpu_5fmemory_5futilization_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int CpuMemoryUtilization::kUtilizationFieldNumber;
#endif  // !_MSC_VER

CpuMemoryUtilization::CpuMemoryUtilization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CpuMemoryUtilization)
}

void CpuMemoryUtilization::InitAsDefaultInstance() {
}

CpuMemoryUtilization::CpuMemoryUtilization(const CpuMemoryUtilization& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CpuMemoryUtilization)
}

void CpuMemoryUtilization::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CpuMemoryUtilization::~CpuMemoryUtilization() {
  // @@protoc_insertion_point(destructor:CpuMemoryUtilization)
  SharedDtor();
}

void CpuMemoryUtilization::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CpuMemoryUtilization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CpuMemoryUtilization::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CpuMemoryUtilization_descriptor_;
}

const CpuMemoryUtilization& CpuMemoryUtilization::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cpu_5fmemory_5futilization_2eproto();
  return *default_instance_;
}

CpuMemoryUtilization* CpuMemoryUtilization::default_instance_ = NULL;

CpuMemoryUtilization* CpuMemoryUtilization::New(::google::protobuf::Arena* arena) const {
  CpuMemoryUtilization* n = new CpuMemoryUtilization;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CpuMemoryUtilization::Clear() {
  utilization_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CpuMemoryUtilization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CpuMemoryUtilization)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .CpuMemoryUtilizationSummary utilization = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_utilization:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_utilization()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_utilization;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CpuMemoryUtilization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CpuMemoryUtilization)
  return false;
#undef DO_
}

void CpuMemoryUtilization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CpuMemoryUtilization)
  // repeated .CpuMemoryUtilizationSummary utilization = 1;
  for (unsigned int i = 0, n = this->utilization_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->utilization(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CpuMemoryUtilization)
}

::google::protobuf::uint8* CpuMemoryUtilization::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CpuMemoryUtilization)
  // repeated .CpuMemoryUtilizationSummary utilization = 1;
  for (unsigned int i = 0, n = this->utilization_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->utilization(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CpuMemoryUtilization)
  return target;
}

int CpuMemoryUtilization::ByteSize() const {
  int total_size = 0;

  // repeated .CpuMemoryUtilizationSummary utilization = 1;
  total_size += 1 * this->utilization_size();
  for (int i = 0; i < this->utilization_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->utilization(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CpuMemoryUtilization::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CpuMemoryUtilization* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CpuMemoryUtilization>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CpuMemoryUtilization::MergeFrom(const CpuMemoryUtilization& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  utilization_.MergeFrom(from.utilization_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CpuMemoryUtilization::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CpuMemoryUtilization::CopyFrom(const CpuMemoryUtilization& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CpuMemoryUtilization::IsInitialized() const {

  return true;
}

void CpuMemoryUtilization::Swap(CpuMemoryUtilization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CpuMemoryUtilization::InternalSwap(CpuMemoryUtilization* other) {
  utilization_.UnsafeArenaSwap(&other->utilization_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CpuMemoryUtilization::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CpuMemoryUtilization_descriptor_;
  metadata.reflection = CpuMemoryUtilization_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CpuMemoryUtilization

// repeated .CpuMemoryUtilizationSummary utilization = 1;
int CpuMemoryUtilization::utilization_size() const {
  return utilization_.size();
}
void CpuMemoryUtilization::clear_utilization() {
  utilization_.Clear();
}
const ::CpuMemoryUtilizationSummary& CpuMemoryUtilization::utilization(int index) const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilization.utilization)
  return utilization_.Get(index);
}
::CpuMemoryUtilizationSummary* CpuMemoryUtilization::mutable_utilization(int index) {
  // @@protoc_insertion_point(field_mutable:CpuMemoryUtilization.utilization)
  return utilization_.Mutable(index);
}
::CpuMemoryUtilizationSummary* CpuMemoryUtilization::add_utilization() {
  // @@protoc_insertion_point(field_add:CpuMemoryUtilization.utilization)
  return utilization_.Add();
}
::google::protobuf::RepeatedPtrField< ::CpuMemoryUtilizationSummary >*
CpuMemoryUtilization::mutable_utilization() {
  // @@protoc_insertion_point(field_mutable_list:CpuMemoryUtilization.utilization)
  return &utilization_;
}
const ::google::protobuf::RepeatedPtrField< ::CpuMemoryUtilizationSummary >&
CpuMemoryUtilization::utilization() const {
  // @@protoc_insertion_point(field_list:CpuMemoryUtilization.utilization)
  return utilization_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CpuMemoryUtilizationSummary::kNameFieldNumber;
const int CpuMemoryUtilizationSummary::kSizeFieldNumber;
const int CpuMemoryUtilizationSummary::kBytesAllocatedFieldNumber;
const int CpuMemoryUtilizationSummary::kUtilizationFieldNumber;
const int CpuMemoryUtilizationSummary::kApplicationUtilizationFieldNumber;
#endif  // !_MSC_VER

CpuMemoryUtilizationSummary::CpuMemoryUtilizationSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CpuMemoryUtilizationSummary)
}

void CpuMemoryUtilizationSummary::InitAsDefaultInstance() {
}

CpuMemoryUtilizationSummary::CpuMemoryUtilizationSummary(const CpuMemoryUtilizationSummary& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CpuMemoryUtilizationSummary)
}

void CpuMemoryUtilizationSummary::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = GOOGLE_ULONGLONG(0);
  bytes_allocated_ = GOOGLE_ULONGLONG(0);
  utilization_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CpuMemoryUtilizationSummary::~CpuMemoryUtilizationSummary() {
  // @@protoc_insertion_point(destructor:CpuMemoryUtilizationSummary)
  SharedDtor();
}

void CpuMemoryUtilizationSummary::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CpuMemoryUtilizationSummary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CpuMemoryUtilizationSummary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CpuMemoryUtilizationSummary_descriptor_;
}

const CpuMemoryUtilizationSummary& CpuMemoryUtilizationSummary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cpu_5fmemory_5futilization_2eproto();
  return *default_instance_;
}

CpuMemoryUtilizationSummary* CpuMemoryUtilizationSummary::default_instance_ = NULL;

CpuMemoryUtilizationSummary* CpuMemoryUtilizationSummary::New(::google::protobuf::Arena* arena) const {
  CpuMemoryUtilizationSummary* n = new CpuMemoryUtilizationSummary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CpuMemoryUtilizationSummary::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CpuMemoryUtilizationSummary*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(size_, bytes_allocated_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    utilization_ = 0;
  }

#undef ZR_HELPER_
#undef ZR_

  application_utilization_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CpuMemoryUtilizationSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CpuMemoryUtilizationSummary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CpuMemoryUtilizationSummary.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_size;
        break;
      }

      // optional uint64 size = 2;
      case 2: {
        if (tag == 16) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
          set_has_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_bytes_allocated;
        break;
      }

      // optional uint64 bytes_allocated = 3;
      case 3: {
        if (tag == 24) {
         parse_bytes_allocated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_allocated_)));
          set_has_bytes_allocated();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_utilization;
        break;
      }

      // optional int32 utilization = 4;
      case 4: {
        if (tag == 32) {
         parse_utilization:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &utilization_)));
          set_has_utilization();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_application_utilization;
        break;
      }

      // repeated .CpuMemoryUtilizationPerApplication application_utilization = 5;
      case 5: {
        if (tag == 42) {
         parse_application_utilization:
          DO_(input->IncrementRecursionDepth());
         parse_loop_application_utilization:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_application_utilization()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_application_utilization;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CpuMemoryUtilizationSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CpuMemoryUtilizationSummary)
  return false;
#undef DO_
}

void CpuMemoryUtilizationSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CpuMemoryUtilizationSummary)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CpuMemoryUtilizationSummary.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 size = 2;
  if (has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->size(), output);
  }

  // optional uint64 bytes_allocated = 3;
  if (has_bytes_allocated()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->bytes_allocated(), output);
  }

  // optional int32 utilization = 4;
  if (has_utilization()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->utilization(), output);
  }

  // repeated .CpuMemoryUtilizationPerApplication application_utilization = 5;
  for (unsigned int i = 0, n = this->application_utilization_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->application_utilization(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CpuMemoryUtilizationSummary)
}

::google::protobuf::uint8* CpuMemoryUtilizationSummary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CpuMemoryUtilizationSummary)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CpuMemoryUtilizationSummary.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 size = 2;
  if (has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->size(), target);
  }

  // optional uint64 bytes_allocated = 3;
  if (has_bytes_allocated()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->bytes_allocated(), target);
  }

  // optional int32 utilization = 4;
  if (has_utilization()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->utilization(), target);
  }

  // repeated .CpuMemoryUtilizationPerApplication application_utilization = 5;
  for (unsigned int i = 0, n = this->application_utilization_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->application_utilization(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CpuMemoryUtilizationSummary)
  return target;
}

int CpuMemoryUtilizationSummary::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 size = 2;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->size());
    }

    // optional uint64 bytes_allocated = 3;
    if (has_bytes_allocated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes_allocated());
    }

    // optional int32 utilization = 4;
    if (has_utilization()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->utilization());
    }

  }
  // repeated .CpuMemoryUtilizationPerApplication application_utilization = 5;
  total_size += 1 * this->application_utilization_size();
  for (int i = 0; i < this->application_utilization_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->application_utilization(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CpuMemoryUtilizationSummary::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CpuMemoryUtilizationSummary* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CpuMemoryUtilizationSummary>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CpuMemoryUtilizationSummary::MergeFrom(const CpuMemoryUtilizationSummary& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  application_utilization_.MergeFrom(from.application_utilization_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_size()) {
      set_size(from.size());
    }
    if (from.has_bytes_allocated()) {
      set_bytes_allocated(from.bytes_allocated());
    }
    if (from.has_utilization()) {
      set_utilization(from.utilization());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CpuMemoryUtilizationSummary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CpuMemoryUtilizationSummary::CopyFrom(const CpuMemoryUtilizationSummary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CpuMemoryUtilizationSummary::IsInitialized() const {

  return true;
}

void CpuMemoryUtilizationSummary::Swap(CpuMemoryUtilizationSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CpuMemoryUtilizationSummary::InternalSwap(CpuMemoryUtilizationSummary* other) {
  name_.Swap(&other->name_);
  std::swap(size_, other->size_);
  std::swap(bytes_allocated_, other->bytes_allocated_);
  std::swap(utilization_, other->utilization_);
  application_utilization_.UnsafeArenaSwap(&other->application_utilization_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CpuMemoryUtilizationSummary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CpuMemoryUtilizationSummary_descriptor_;
  metadata.reflection = CpuMemoryUtilizationSummary_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CpuMemoryUtilizationSummary

// optional string name = 1;
bool CpuMemoryUtilizationSummary::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CpuMemoryUtilizationSummary::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CpuMemoryUtilizationSummary::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CpuMemoryUtilizationSummary::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CpuMemoryUtilizationSummary::name() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationSummary.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CpuMemoryUtilizationSummary::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationSummary.name)
}
 void CpuMemoryUtilizationSummary::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CpuMemoryUtilizationSummary.name)
}
 void CpuMemoryUtilizationSummary::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CpuMemoryUtilizationSummary.name)
}
 ::std::string* CpuMemoryUtilizationSummary::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CpuMemoryUtilizationSummary.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CpuMemoryUtilizationSummary::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CpuMemoryUtilizationSummary::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CpuMemoryUtilizationSummary.name)
}

// optional uint64 size = 2;
bool CpuMemoryUtilizationSummary::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CpuMemoryUtilizationSummary::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
void CpuMemoryUtilizationSummary::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
void CpuMemoryUtilizationSummary::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
  clear_has_size();
}
 ::google::protobuf::uint64 CpuMemoryUtilizationSummary::size() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationSummary.size)
  return size_;
}
 void CpuMemoryUtilizationSummary::set_size(::google::protobuf::uint64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationSummary.size)
}

// optional uint64 bytes_allocated = 3;
bool CpuMemoryUtilizationSummary::has_bytes_allocated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CpuMemoryUtilizationSummary::set_has_bytes_allocated() {
  _has_bits_[0] |= 0x00000004u;
}
void CpuMemoryUtilizationSummary::clear_has_bytes_allocated() {
  _has_bits_[0] &= ~0x00000004u;
}
void CpuMemoryUtilizationSummary::clear_bytes_allocated() {
  bytes_allocated_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes_allocated();
}
 ::google::protobuf::uint64 CpuMemoryUtilizationSummary::bytes_allocated() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationSummary.bytes_allocated)
  return bytes_allocated_;
}
 void CpuMemoryUtilizationSummary::set_bytes_allocated(::google::protobuf::uint64 value) {
  set_has_bytes_allocated();
  bytes_allocated_ = value;
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationSummary.bytes_allocated)
}

// optional int32 utilization = 4;
bool CpuMemoryUtilizationSummary::has_utilization() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CpuMemoryUtilizationSummary::set_has_utilization() {
  _has_bits_[0] |= 0x00000008u;
}
void CpuMemoryUtilizationSummary::clear_has_utilization() {
  _has_bits_[0] &= ~0x00000008u;
}
void CpuMemoryUtilizationSummary::clear_utilization() {
  utilization_ = 0;
  clear_has_utilization();
}
 ::google::protobuf::int32 CpuMemoryUtilizationSummary::utilization() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationSummary.utilization)
  return utilization_;
}
 void CpuMemoryUtilizationSummary::set_utilization(::google::protobuf::int32 value) {
  set_has_utilization();
  utilization_ = value;
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationSummary.utilization)
}

// repeated .CpuMemoryUtilizationPerApplication application_utilization = 5;
int CpuMemoryUtilizationSummary::application_utilization_size() const {
  return application_utilization_.size();
}
void CpuMemoryUtilizationSummary::clear_application_utilization() {
  application_utilization_.Clear();
}
const ::CpuMemoryUtilizationPerApplication& CpuMemoryUtilizationSummary::application_utilization(int index) const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationSummary.application_utilization)
  return application_utilization_.Get(index);
}
::CpuMemoryUtilizationPerApplication* CpuMemoryUtilizationSummary::mutable_application_utilization(int index) {
  // @@protoc_insertion_point(field_mutable:CpuMemoryUtilizationSummary.application_utilization)
  return application_utilization_.Mutable(index);
}
::CpuMemoryUtilizationPerApplication* CpuMemoryUtilizationSummary::add_application_utilization() {
  // @@protoc_insertion_point(field_add:CpuMemoryUtilizationSummary.application_utilization)
  return application_utilization_.Add();
}
::google::protobuf::RepeatedPtrField< ::CpuMemoryUtilizationPerApplication >*
CpuMemoryUtilizationSummary::mutable_application_utilization() {
  // @@protoc_insertion_point(field_mutable_list:CpuMemoryUtilizationSummary.application_utilization)
  return &application_utilization_;
}
const ::google::protobuf::RepeatedPtrField< ::CpuMemoryUtilizationPerApplication >&
CpuMemoryUtilizationSummary::application_utilization() const {
  // @@protoc_insertion_point(field_list:CpuMemoryUtilizationSummary.application_utilization)
  return application_utilization_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int CpuMemoryUtilizationPerApplication::kNameFieldNumber;
const int CpuMemoryUtilizationPerApplication::kBytesAllocatedFieldNumber;
const int CpuMemoryUtilizationPerApplication::kAllocationsFieldNumber;
const int CpuMemoryUtilizationPerApplication::kFreesFieldNumber;
const int CpuMemoryUtilizationPerApplication::kAllocationsFailedFieldNumber;
#endif  // !_MSC_VER

CpuMemoryUtilizationPerApplication::CpuMemoryUtilizationPerApplication()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CpuMemoryUtilizationPerApplication)
}

void CpuMemoryUtilizationPerApplication::InitAsDefaultInstance() {
}

CpuMemoryUtilizationPerApplication::CpuMemoryUtilizationPerApplication(const CpuMemoryUtilizationPerApplication& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CpuMemoryUtilizationPerApplication)
}

void CpuMemoryUtilizationPerApplication::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_allocated_ = GOOGLE_ULONGLONG(0);
  allocations_ = GOOGLE_ULONGLONG(0);
  frees_ = GOOGLE_ULONGLONG(0);
  allocations_failed_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CpuMemoryUtilizationPerApplication::~CpuMemoryUtilizationPerApplication() {
  // @@protoc_insertion_point(destructor:CpuMemoryUtilizationPerApplication)
  SharedDtor();
}

void CpuMemoryUtilizationPerApplication::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void CpuMemoryUtilizationPerApplication::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CpuMemoryUtilizationPerApplication::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CpuMemoryUtilizationPerApplication_descriptor_;
}

const CpuMemoryUtilizationPerApplication& CpuMemoryUtilizationPerApplication::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_cpu_5fmemory_5futilization_2eproto();
  return *default_instance_;
}

CpuMemoryUtilizationPerApplication* CpuMemoryUtilizationPerApplication::default_instance_ = NULL;

CpuMemoryUtilizationPerApplication* CpuMemoryUtilizationPerApplication::New(::google::protobuf::Arena* arena) const {
  CpuMemoryUtilizationPerApplication* n = new CpuMemoryUtilizationPerApplication;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CpuMemoryUtilizationPerApplication::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CpuMemoryUtilizationPerApplication*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(bytes_allocated_, allocations_failed_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CpuMemoryUtilizationPerApplication::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CpuMemoryUtilizationPerApplication)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "CpuMemoryUtilizationPerApplication.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_bytes_allocated;
        break;
      }

      // optional uint64 bytes_allocated = 2;
      case 2: {
        if (tag == 16) {
         parse_bytes_allocated:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_allocated_)));
          set_has_bytes_allocated();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_allocations;
        break;
      }

      // optional uint64 allocations = 3;
      case 3: {
        if (tag == 24) {
         parse_allocations:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &allocations_)));
          set_has_allocations();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_frees;
        break;
      }

      // optional uint64 frees = 4;
      case 4: {
        if (tag == 32) {
         parse_frees:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &frees_)));
          set_has_frees();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_allocations_failed;
        break;
      }

      // optional uint64 allocations_failed = 5;
      case 5: {
        if (tag == 40) {
         parse_allocations_failed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &allocations_failed_)));
          set_has_allocations_failed();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CpuMemoryUtilizationPerApplication)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CpuMemoryUtilizationPerApplication)
  return false;
#undef DO_
}

void CpuMemoryUtilizationPerApplication::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CpuMemoryUtilizationPerApplication)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CpuMemoryUtilizationPerApplication.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 bytes_allocated = 2;
  if (has_bytes_allocated()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->bytes_allocated(), output);
  }

  // optional uint64 allocations = 3;
  if (has_allocations()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->allocations(), output);
  }

  // optional uint64 frees = 4;
  if (has_frees()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->frees(), output);
  }

  // optional uint64 allocations_failed = 5;
  if (has_allocations_failed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->allocations_failed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CpuMemoryUtilizationPerApplication)
}

::google::protobuf::uint8* CpuMemoryUtilizationPerApplication::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CpuMemoryUtilizationPerApplication)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "CpuMemoryUtilizationPerApplication.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 bytes_allocated = 2;
  if (has_bytes_allocated()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->bytes_allocated(), target);
  }

  // optional uint64 allocations = 3;
  if (has_allocations()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->allocations(), target);
  }

  // optional uint64 frees = 4;
  if (has_frees()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->frees(), target);
  }

  // optional uint64 allocations_failed = 5;
  if (has_allocations_failed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->allocations_failed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CpuMemoryUtilizationPerApplication)
  return target;
}

int CpuMemoryUtilizationPerApplication::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 bytes_allocated = 2;
    if (has_bytes_allocated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes_allocated());
    }

    // optional uint64 allocations = 3;
    if (has_allocations()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->allocations());
    }

    // optional uint64 frees = 4;
    if (has_frees()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->frees());
    }

    // optional uint64 allocations_failed = 5;
    if (has_allocations_failed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->allocations_failed());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CpuMemoryUtilizationPerApplication::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CpuMemoryUtilizationPerApplication* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CpuMemoryUtilizationPerApplication>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CpuMemoryUtilizationPerApplication::MergeFrom(const CpuMemoryUtilizationPerApplication& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_bytes_allocated()) {
      set_bytes_allocated(from.bytes_allocated());
    }
    if (from.has_allocations()) {
      set_allocations(from.allocations());
    }
    if (from.has_frees()) {
      set_frees(from.frees());
    }
    if (from.has_allocations_failed()) {
      set_allocations_failed(from.allocations_failed());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CpuMemoryUtilizationPerApplication::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CpuMemoryUtilizationPerApplication::CopyFrom(const CpuMemoryUtilizationPerApplication& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CpuMemoryUtilizationPerApplication::IsInitialized() const {

  return true;
}

void CpuMemoryUtilizationPerApplication::Swap(CpuMemoryUtilizationPerApplication* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CpuMemoryUtilizationPerApplication::InternalSwap(CpuMemoryUtilizationPerApplication* other) {
  name_.Swap(&other->name_);
  std::swap(bytes_allocated_, other->bytes_allocated_);
  std::swap(allocations_, other->allocations_);
  std::swap(frees_, other->frees_);
  std::swap(allocations_failed_, other->allocations_failed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CpuMemoryUtilizationPerApplication::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CpuMemoryUtilizationPerApplication_descriptor_;
  metadata.reflection = CpuMemoryUtilizationPerApplication_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CpuMemoryUtilizationPerApplication

// optional string name = 1;
bool CpuMemoryUtilizationPerApplication::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CpuMemoryUtilizationPerApplication::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CpuMemoryUtilizationPerApplication::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CpuMemoryUtilizationPerApplication::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& CpuMemoryUtilizationPerApplication::name() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationPerApplication.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CpuMemoryUtilizationPerApplication::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationPerApplication.name)
}
 void CpuMemoryUtilizationPerApplication::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CpuMemoryUtilizationPerApplication.name)
}
 void CpuMemoryUtilizationPerApplication::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CpuMemoryUtilizationPerApplication.name)
}
 ::std::string* CpuMemoryUtilizationPerApplication::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CpuMemoryUtilizationPerApplication.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CpuMemoryUtilizationPerApplication::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CpuMemoryUtilizationPerApplication::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CpuMemoryUtilizationPerApplication.name)
}

// optional uint64 bytes_allocated = 2;
bool CpuMemoryUtilizationPerApplication::has_bytes_allocated() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CpuMemoryUtilizationPerApplication::set_has_bytes_allocated() {
  _has_bits_[0] |= 0x00000002u;
}
void CpuMemoryUtilizationPerApplication::clear_has_bytes_allocated() {
  _has_bits_[0] &= ~0x00000002u;
}
void CpuMemoryUtilizationPerApplication::clear_bytes_allocated() {
  bytes_allocated_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes_allocated();
}
 ::google::protobuf::uint64 CpuMemoryUtilizationPerApplication::bytes_allocated() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationPerApplication.bytes_allocated)
  return bytes_allocated_;
}
 void CpuMemoryUtilizationPerApplication::set_bytes_allocated(::google::protobuf::uint64 value) {
  set_has_bytes_allocated();
  bytes_allocated_ = value;
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationPerApplication.bytes_allocated)
}

// optional uint64 allocations = 3;
bool CpuMemoryUtilizationPerApplication::has_allocations() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CpuMemoryUtilizationPerApplication::set_has_allocations() {
  _has_bits_[0] |= 0x00000004u;
}
void CpuMemoryUtilizationPerApplication::clear_has_allocations() {
  _has_bits_[0] &= ~0x00000004u;
}
void CpuMemoryUtilizationPerApplication::clear_allocations() {
  allocations_ = GOOGLE_ULONGLONG(0);
  clear_has_allocations();
}
 ::google::protobuf::uint64 CpuMemoryUtilizationPerApplication::allocations() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationPerApplication.allocations)
  return allocations_;
}
 void CpuMemoryUtilizationPerApplication::set_allocations(::google::protobuf::uint64 value) {
  set_has_allocations();
  allocations_ = value;
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationPerApplication.allocations)
}

// optional uint64 frees = 4;
bool CpuMemoryUtilizationPerApplication::has_frees() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CpuMemoryUtilizationPerApplication::set_has_frees() {
  _has_bits_[0] |= 0x00000008u;
}
void CpuMemoryUtilizationPerApplication::clear_has_frees() {
  _has_bits_[0] &= ~0x00000008u;
}
void CpuMemoryUtilizationPerApplication::clear_frees() {
  frees_ = GOOGLE_ULONGLONG(0);
  clear_has_frees();
}
 ::google::protobuf::uint64 CpuMemoryUtilizationPerApplication::frees() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationPerApplication.frees)
  return frees_;
}
 void CpuMemoryUtilizationPerApplication::set_frees(::google::protobuf::uint64 value) {
  set_has_frees();
  frees_ = value;
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationPerApplication.frees)
}

// optional uint64 allocations_failed = 5;
bool CpuMemoryUtilizationPerApplication::has_allocations_failed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CpuMemoryUtilizationPerApplication::set_has_allocations_failed() {
  _has_bits_[0] |= 0x00000010u;
}
void CpuMemoryUtilizationPerApplication::clear_has_allocations_failed() {
  _has_bits_[0] &= ~0x00000010u;
}
void CpuMemoryUtilizationPerApplication::clear_allocations_failed() {
  allocations_failed_ = GOOGLE_ULONGLONG(0);
  clear_has_allocations_failed();
}
 ::google::protobuf::uint64 CpuMemoryUtilizationPerApplication::allocations_failed() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationPerApplication.allocations_failed)
  return allocations_failed_;
}
 void CpuMemoryUtilizationPerApplication::set_allocations_failed(::google::protobuf::uint64 value) {
  set_has_allocations_failed();
  allocations_failed_ = value;
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationPerApplication.allocations_failed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::JuniperNetworksSensors,
    ::google::protobuf::internal::MessageTypeTraits< ::CpuMemoryUtilization >, 11, false >
  cpu_memory_util_ext(kCpuMemoryUtilExtFieldNumber, ::CpuMemoryUtilization::default_instance());

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
