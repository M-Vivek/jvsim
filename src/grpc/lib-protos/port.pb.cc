// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: port.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "port.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GPort_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GPort_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterfaceInfos_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterfaceInfos_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterfaceStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterfaceStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* IngressInterfaceErrors_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IngressInterfaceErrors_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueueStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueueStats_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_port_2eproto() {
  protobuf_AddDesc_port_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "port.proto");
  GOOGLE_CHECK(file != NULL);
  GPort_descriptor_ = file->message_type(0);
  static const int GPort_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPort, interface_stats_),
  };
  GPort_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GPort_descriptor_,
      GPort::default_instance_,
      GPort_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPort, _has_bits_[0]),
      -1,
      -1,
      sizeof(GPort),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPort, _internal_metadata_),
      -1);
  InterfaceInfos_descriptor_ = file->message_type(1);
  static const int InterfaceInfos_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInfos, if_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInfos, init_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInfos, snmp_if_index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInfos, parent_ae_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInfos, egress_queue_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInfos, ingress_queue_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInfos, ingress_stats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInfos, egress_stats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInfos, ingress_errors_),
  };
  InterfaceInfos_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InterfaceInfos_descriptor_,
      InterfaceInfos::default_instance_,
      InterfaceInfos_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInfos, _has_bits_[0]),
      -1,
      -1,
      sizeof(InterfaceInfos),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceInfos, _internal_metadata_),
      -1);
  InterfaceStats_descriptor_ = file->message_type(2);
  static const int InterfaceStats_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceStats, if_pkts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceStats, if_octets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceStats, if_1sec_pkts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceStats, if_1sec_octets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceStats, if_uc_pkts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceStats, if_mc_pkts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceStats, if_bc_pkts_),
  };
  InterfaceStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InterfaceStats_descriptor_,
      InterfaceStats::default_instance_,
      InterfaceStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceStats, _has_bits_[0]),
      -1,
      -1,
      sizeof(InterfaceStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceStats, _internal_metadata_),
      -1);
  IngressInterfaceErrors_descriptor_ = file->message_type(3);
  static const int IngressInterfaceErrors_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceErrors, if_in_errors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceErrors, if_in_qdrops_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceErrors, if_in_frame_errors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceErrors, if_in_discards_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceErrors, if_in_runts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceErrors, if_in_l3_incompletes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceErrors, if_in_l2chan_errors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceErrors, if_in_l2_mismatch_timeouts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceErrors, if_in_fifo_errors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceErrors, if_in_resource_errors_),
  };
  IngressInterfaceErrors_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IngressInterfaceErrors_descriptor_,
      IngressInterfaceErrors::default_instance_,
      IngressInterfaceErrors_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceErrors, _has_bits_[0]),
      -1,
      -1,
      sizeof(IngressInterfaceErrors),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IngressInterfaceErrors, _internal_metadata_),
      -1);
  QueueStats_descriptor_ = file->message_type(4);
  static const int QueueStats_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueStats, queue_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueStats, packets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueStats, bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueStats, tail_drop_packets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueStats, rl_drop_packets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueStats, rl_drop_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueStats, red_drop_packets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueStats, red_drop_bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueStats, avg_buffer_occupancy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueStats, cur_buffer_occupancy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueStats, peak_buffer_occupancy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueStats, allocated_buffer_size_),
  };
  QueueStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueueStats_descriptor_,
      QueueStats::default_instance_,
      QueueStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueStats, _has_bits_[0]),
      -1,
      -1,
      sizeof(QueueStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueueStats, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_port_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GPort_descriptor_, &GPort::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InterfaceInfos_descriptor_, &InterfaceInfos::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InterfaceStats_descriptor_, &InterfaceStats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IngressInterfaceErrors_descriptor_, &IngressInterfaceErrors::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueueStats_descriptor_, &QueueStats::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_port_2eproto() {
  delete GPort::default_instance_;
  delete GPort_reflection_;
  delete InterfaceInfos::default_instance_;
  delete InterfaceInfos_reflection_;
  delete InterfaceStats::default_instance_;
  delete InterfaceStats_reflection_;
  delete IngressInterfaceErrors::default_instance_;
  delete IngressInterfaceErrors_reflection_;
  delete QueueStats::default_instance_;
  delete QueueStats_reflection_;
}

void protobuf_AddDesc_port_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_jvision_5ftop_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nport.proto\032\021jvision_top.proto\"1\n\005GPort"
    "\022(\n\017interface_stats\030\001 \003(\0132\017.InterfaceInf"
    "os\"\273\002\n\016InterfaceInfos\022\026\n\007if_name\030\001 \002(\tB\005"
    "\202@\002\010\001\022\021\n\tinit_time\030\002 \002(\004\022\025\n\rsnmp_if_inde"
    "x\030\003 \001(\r\022\026\n\016parent_ae_name\030\004 \001(\t\022&\n\021egres"
    "s_queue_info\030\005 \003(\0132\013.QueueStats\022\'\n\022ingre"
    "ss_queue_info\030\006 \003(\0132\013.QueueStats\022&\n\ringr"
    "ess_stats\030\007 \001(\0132\017.InterfaceStats\022%\n\014egre"
    "ss_stats\030\010 \001(\0132\017.InterfaceStats\022/\n\016ingre"
    "ss_errors\030\t \001(\0132\027.IngressInterfaceErrors"
    "\"\317\001\n\016InterfaceStats\022\026\n\007if_pkts\030\001 \002(\004B\005\202@"
    "\002\030\001\022\030\n\tif_octets\030\002 \002(\004B\005\202@\002\030\001\022\033\n\014if_1sec"
    "_pkts\030\003 \002(\004B\005\202@\002 \001\022\035\n\016if_1sec_octets\030\004 \002"
    "(\004B\005\202@\002 \001\022\031\n\nif_uc_pkts\030\005 \002(\004B\005\202@\002\030\001\022\031\n\n"
    "if_mc_pkts\030\006 \002(\004B\005\202@\002\030\001\022\031\n\nif_bc_pkts\030\007 "
    "\002(\004B\005\202@\002\030\001\"\354\002\n\026IngressInterfaceErrors\022\033\n"
    "\014if_in_errors\030\001 \001(\004B\005\202@\002\030\001\022\033\n\014if_in_qdro"
    "ps\030\002 \001(\004B\005\202@\002\030\001\022!\n\022if_in_frame_errors\030\003 "
    "\001(\004B\005\202@\002\030\001\022\035\n\016if_in_discards\030\004 \001(\004B\005\202@\002\030"
    "\001\022\032\n\013if_in_runts\030\005 \001(\004B\005\202@\002\030\001\022#\n\024if_in_l"
    "3_incompletes\030\006 \001(\004B\005\202@\002\030\001\022\"\n\023if_in_l2ch"
    "an_errors\030\007 \001(\004B\005\202@\002\030\001\022)\n\032if_in_l2_misma"
    "tch_timeouts\030\010 \001(\004B\005\202@\002\030\001\022 \n\021if_in_fifo_"
    "errors\030\t \001(\004B\005\202@\002\030\001\022$\n\025if_in_resource_er"
    "rors\030\n \001(\004B\005\202@\002\030\001\"\215\003\n\nQueueStats\022\033\n\014queu"
    "e_number\030\001 \001(\rB\005\202@\002\010\001\022\026\n\007packets\030\002 \001(\004B\005"
    "\202@\002\030\001\022\024\n\005bytes\030\003 \001(\004B\005\202@\002\030\001\022 \n\021tail_drop"
    "_packets\030\004 \001(\004B\005\202@\002\030\001\022\036\n\017rl_drop_packets"
    "\030\005 \001(\004B\005\202@\002\030\001\022\034\n\rrl_drop_bytes\030\006 \001(\004B\005\202@"
    "\002\030\001\022\037\n\020red_drop_packets\030\007 \001(\004B\005\202@\002\030\001\022\035\n\016"
    "red_drop_bytes\030\010 \001(\004B\005\202@\002\030\001\022#\n\024avg_buffe"
    "r_occupancy\030\t \001(\004B\005\202@\002 \001\022#\n\024cur_buffer_o"
    "ccupancy\030\n \001(\004B\005\202@\002 \001\022$\n\025peak_buffer_occ"
    "upancy\030\013 \001(\004B\005\202@\002 \001\022$\n\025allocated_buffer_"
    "size\030\014 \001(\004B\005\202@\002 \001:;\n\022jnpr_interface_ext\022"
    "\027.JuniperNetworksSensors\030\003 \001(\0132\006.GPort", 1438);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "port.proto", &protobuf_RegisterTypes);
  GPort::default_instance_ = new GPort();
  InterfaceInfos::default_instance_ = new InterfaceInfos();
  InterfaceStats::default_instance_ = new InterfaceStats();
  IngressInterfaceErrors::default_instance_ = new IngressInterfaceErrors();
  QueueStats::default_instance_ = new QueueStats();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::JuniperNetworksSensors::default_instance(),
    3, 11, false, false,
    &::GPort::default_instance());
  GPort::default_instance_->InitAsDefaultInstance();
  InterfaceInfos::default_instance_->InitAsDefaultInstance();
  InterfaceStats::default_instance_->InitAsDefaultInstance();
  IngressInterfaceErrors::default_instance_->InitAsDefaultInstance();
  QueueStats::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_port_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_port_2eproto {
  StaticDescriptorInitializer_port_2eproto() {
    protobuf_AddDesc_port_2eproto();
  }
} static_descriptor_initializer_port_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int GPort::kInterfaceStatsFieldNumber;
#endif  // !_MSC_VER

GPort::GPort()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:GPort)
}

void GPort::InitAsDefaultInstance() {
}

GPort::GPort(const GPort& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GPort)
}

void GPort::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GPort::~GPort() {
  // @@protoc_insertion_point(destructor:GPort)
  SharedDtor();
}

void GPort::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GPort::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GPort::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GPort_descriptor_;
}

const GPort& GPort::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_port_2eproto();
  return *default_instance_;
}

GPort* GPort::default_instance_ = NULL;

GPort* GPort::New(::google::protobuf::Arena* arena) const {
  GPort* n = new GPort;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GPort::Clear() {
  interface_stats_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GPort::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GPort)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .InterfaceInfos interface_stats = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_interface_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_interface_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_interface_stats;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GPort)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GPort)
  return false;
#undef DO_
}

void GPort::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GPort)
  // repeated .InterfaceInfos interface_stats = 1;
  for (unsigned int i = 0, n = this->interface_stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->interface_stats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:GPort)
}

::google::protobuf::uint8* GPort::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:GPort)
  // repeated .InterfaceInfos interface_stats = 1;
  for (unsigned int i = 0, n = this->interface_stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->interface_stats(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GPort)
  return target;
}

int GPort::ByteSize() const {
  int total_size = 0;

  // repeated .InterfaceInfos interface_stats = 1;
  total_size += 1 * this->interface_stats_size();
  for (int i = 0; i < this->interface_stats_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->interface_stats(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GPort::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GPort* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const GPort>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GPort::MergeFrom(const GPort& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  interface_stats_.MergeFrom(from.interface_stats_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void GPort::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GPort::CopyFrom(const GPort& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GPort::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->interface_stats())) return false;
  return true;
}

void GPort::Swap(GPort* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GPort::InternalSwap(GPort* other) {
  interface_stats_.UnsafeArenaSwap(&other->interface_stats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GPort::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GPort_descriptor_;
  metadata.reflection = GPort_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GPort

// repeated .InterfaceInfos interface_stats = 1;
int GPort::interface_stats_size() const {
  return interface_stats_.size();
}
void GPort::clear_interface_stats() {
  interface_stats_.Clear();
}
const ::InterfaceInfos& GPort::interface_stats(int index) const {
  // @@protoc_insertion_point(field_get:GPort.interface_stats)
  return interface_stats_.Get(index);
}
::InterfaceInfos* GPort::mutable_interface_stats(int index) {
  // @@protoc_insertion_point(field_mutable:GPort.interface_stats)
  return interface_stats_.Mutable(index);
}
::InterfaceInfos* GPort::add_interface_stats() {
  // @@protoc_insertion_point(field_add:GPort.interface_stats)
  return interface_stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::InterfaceInfos >*
GPort::mutable_interface_stats() {
  // @@protoc_insertion_point(field_mutable_list:GPort.interface_stats)
  return &interface_stats_;
}
const ::google::protobuf::RepeatedPtrField< ::InterfaceInfos >&
GPort::interface_stats() const {
  // @@protoc_insertion_point(field_list:GPort.interface_stats)
  return interface_stats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int InterfaceInfos::kIfNameFieldNumber;
const int InterfaceInfos::kInitTimeFieldNumber;
const int InterfaceInfos::kSnmpIfIndexFieldNumber;
const int InterfaceInfos::kParentAeNameFieldNumber;
const int InterfaceInfos::kEgressQueueInfoFieldNumber;
const int InterfaceInfos::kIngressQueueInfoFieldNumber;
const int InterfaceInfos::kIngressStatsFieldNumber;
const int InterfaceInfos::kEgressStatsFieldNumber;
const int InterfaceInfos::kIngressErrorsFieldNumber;
#endif  // !_MSC_VER

InterfaceInfos::InterfaceInfos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InterfaceInfos)
}

void InterfaceInfos::InitAsDefaultInstance() {
  ingress_stats_ = const_cast< ::InterfaceStats*>(&::InterfaceStats::default_instance());
  egress_stats_ = const_cast< ::InterfaceStats*>(&::InterfaceStats::default_instance());
  ingress_errors_ = const_cast< ::IngressInterfaceErrors*>(&::IngressInterfaceErrors::default_instance());
}

InterfaceInfos::InterfaceInfos(const InterfaceInfos& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:InterfaceInfos)
}

void InterfaceInfos::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  if_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  init_time_ = GOOGLE_ULONGLONG(0);
  snmp_if_index_ = 0u;
  parent_ae_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ingress_stats_ = NULL;
  egress_stats_ = NULL;
  ingress_errors_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterfaceInfos::~InterfaceInfos() {
  // @@protoc_insertion_point(destructor:InterfaceInfos)
  SharedDtor();
}

void InterfaceInfos::SharedDtor() {
  if_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_ae_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete ingress_stats_;
    delete egress_stats_;
    delete ingress_errors_;
  }
}

void InterfaceInfos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterfaceInfos::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterfaceInfos_descriptor_;
}

const InterfaceInfos& InterfaceInfos::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_port_2eproto();
  return *default_instance_;
}

InterfaceInfos* InterfaceInfos::default_instance_ = NULL;

InterfaceInfos* InterfaceInfos::New(::google::protobuf::Arena* arena) const {
  InterfaceInfos* n = new InterfaceInfos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InterfaceInfos::Clear() {
  if (_has_bits_[0 / 32] & 207u) {
    if (has_if_name()) {
      if_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    init_time_ = GOOGLE_ULONGLONG(0);
    snmp_if_index_ = 0u;
    if (has_parent_ae_name()) {
      parent_ae_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_ingress_stats()) {
      if (ingress_stats_ != NULL) ingress_stats_->::InterfaceStats::Clear();
    }
    if (has_egress_stats()) {
      if (egress_stats_ != NULL) egress_stats_->::InterfaceStats::Clear();
    }
  }
  if (has_ingress_errors()) {
    if (ingress_errors_ != NULL) ingress_errors_->::IngressInterfaceErrors::Clear();
  }
  egress_queue_info_.Clear();
  ingress_queue_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InterfaceInfos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InterfaceInfos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string if_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_if_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->if_name().data(), this->if_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "InterfaceInfos.if_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_init_time;
        break;
      }

      // required uint64 init_time = 2;
      case 2: {
        if (tag == 16) {
         parse_init_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &init_time_)));
          set_has_init_time();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_snmp_if_index;
        break;
      }

      // optional uint32 snmp_if_index = 3;
      case 3: {
        if (tag == 24) {
         parse_snmp_if_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &snmp_if_index_)));
          set_has_snmp_if_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_parent_ae_name;
        break;
      }

      // optional string parent_ae_name = 4;
      case 4: {
        if (tag == 34) {
         parse_parent_ae_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_ae_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->parent_ae_name().data(), this->parent_ae_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "InterfaceInfos.parent_ae_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_egress_queue_info;
        break;
      }

      // repeated .QueueStats egress_queue_info = 5;
      case 5: {
        if (tag == 42) {
         parse_egress_queue_info:
          DO_(input->IncrementRecursionDepth());
         parse_loop_egress_queue_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_egress_queue_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_egress_queue_info;
        if (input->ExpectTag(50)) goto parse_loop_ingress_queue_info;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .QueueStats ingress_queue_info = 6;
      case 6: {
        if (tag == 50) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_ingress_queue_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ingress_queue_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_ingress_queue_info;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(58)) goto parse_ingress_stats;
        break;
      }

      // optional .InterfaceStats ingress_stats = 7;
      case 7: {
        if (tag == 58) {
         parse_ingress_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ingress_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_egress_stats;
        break;
      }

      // optional .InterfaceStats egress_stats = 8;
      case 8: {
        if (tag == 66) {
         parse_egress_stats:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_egress_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_ingress_errors;
        break;
      }

      // optional .IngressInterfaceErrors ingress_errors = 9;
      case 9: {
        if (tag == 74) {
         parse_ingress_errors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ingress_errors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InterfaceInfos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InterfaceInfos)
  return false;
#undef DO_
}

void InterfaceInfos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InterfaceInfos)
  // required string if_name = 1;
  if (has_if_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->if_name().data(), this->if_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InterfaceInfos.if_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->if_name(), output);
  }

  // required uint64 init_time = 2;
  if (has_init_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->init_time(), output);
  }

  // optional uint32 snmp_if_index = 3;
  if (has_snmp_if_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->snmp_if_index(), output);
  }

  // optional string parent_ae_name = 4;
  if (has_parent_ae_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parent_ae_name().data(), this->parent_ae_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InterfaceInfos.parent_ae_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->parent_ae_name(), output);
  }

  // repeated .QueueStats egress_queue_info = 5;
  for (unsigned int i = 0, n = this->egress_queue_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->egress_queue_info(i), output);
  }

  // repeated .QueueStats ingress_queue_info = 6;
  for (unsigned int i = 0, n = this->ingress_queue_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->ingress_queue_info(i), output);
  }

  // optional .InterfaceStats ingress_stats = 7;
  if (has_ingress_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->ingress_stats_, output);
  }

  // optional .InterfaceStats egress_stats = 8;
  if (has_egress_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->egress_stats_, output);
  }

  // optional .IngressInterfaceErrors ingress_errors = 9;
  if (has_ingress_errors()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->ingress_errors_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:InterfaceInfos)
}

::google::protobuf::uint8* InterfaceInfos::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:InterfaceInfos)
  // required string if_name = 1;
  if (has_if_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->if_name().data(), this->if_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InterfaceInfos.if_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->if_name(), target);
  }

  // required uint64 init_time = 2;
  if (has_init_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->init_time(), target);
  }

  // optional uint32 snmp_if_index = 3;
  if (has_snmp_if_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->snmp_if_index(), target);
  }

  // optional string parent_ae_name = 4;
  if (has_parent_ae_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->parent_ae_name().data(), this->parent_ae_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "InterfaceInfos.parent_ae_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->parent_ae_name(), target);
  }

  // repeated .QueueStats egress_queue_info = 5;
  for (unsigned int i = 0, n = this->egress_queue_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->egress_queue_info(i), target);
  }

  // repeated .QueueStats ingress_queue_info = 6;
  for (unsigned int i = 0, n = this->ingress_queue_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->ingress_queue_info(i), target);
  }

  // optional .InterfaceStats ingress_stats = 7;
  if (has_ingress_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, *this->ingress_stats_, target);
  }

  // optional .InterfaceStats egress_stats = 8;
  if (has_egress_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, *this->egress_stats_, target);
  }

  // optional .IngressInterfaceErrors ingress_errors = 9;
  if (has_ingress_errors()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, *this->ingress_errors_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InterfaceInfos)
  return target;
}

int InterfaceInfos::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_if_name()) {
    // required string if_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->if_name());
  }

  if (has_init_time()) {
    // required uint64 init_time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->init_time());
  }

  return total_size;
}
int InterfaceInfos::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string if_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->if_name());

    // required uint64 init_time = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->init_time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 204u) {
    // optional uint32 snmp_if_index = 3;
    if (has_snmp_if_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->snmp_if_index());
    }

    // optional string parent_ae_name = 4;
    if (has_parent_ae_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->parent_ae_name());
    }

    // optional .InterfaceStats ingress_stats = 7;
    if (has_ingress_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->ingress_stats_);
    }

    // optional .InterfaceStats egress_stats = 8;
    if (has_egress_stats()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->egress_stats_);
    }

  }
  // optional .IngressInterfaceErrors ingress_errors = 9;
  if (has_ingress_errors()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ingress_errors_);
  }

  // repeated .QueueStats egress_queue_info = 5;
  total_size += 1 * this->egress_queue_info_size();
  for (int i = 0; i < this->egress_queue_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->egress_queue_info(i));
  }

  // repeated .QueueStats ingress_queue_info = 6;
  total_size += 1 * this->ingress_queue_info_size();
  for (int i = 0; i < this->ingress_queue_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ingress_queue_info(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterfaceInfos::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InterfaceInfos* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InterfaceInfos>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterfaceInfos::MergeFrom(const InterfaceInfos& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  egress_queue_info_.MergeFrom(from.egress_queue_info_);
  ingress_queue_info_.MergeFrom(from.ingress_queue_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_if_name()) {
      set_has_if_name();
      if_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.if_name_);
    }
    if (from.has_init_time()) {
      set_init_time(from.init_time());
    }
    if (from.has_snmp_if_index()) {
      set_snmp_if_index(from.snmp_if_index());
    }
    if (from.has_parent_ae_name()) {
      set_has_parent_ae_name();
      parent_ae_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_ae_name_);
    }
    if (from.has_ingress_stats()) {
      mutable_ingress_stats()->::InterfaceStats::MergeFrom(from.ingress_stats());
    }
    if (from.has_egress_stats()) {
      mutable_egress_stats()->::InterfaceStats::MergeFrom(from.egress_stats());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ingress_errors()) {
      mutable_ingress_errors()->::IngressInterfaceErrors::MergeFrom(from.ingress_errors());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InterfaceInfos::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterfaceInfos::CopyFrom(const InterfaceInfos& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceInfos::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_ingress_stats()) {
    if (!this->ingress_stats_->IsInitialized()) return false;
  }
  if (has_egress_stats()) {
    if (!this->egress_stats_->IsInitialized()) return false;
  }
  return true;
}

void InterfaceInfos::Swap(InterfaceInfos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterfaceInfos::InternalSwap(InterfaceInfos* other) {
  if_name_.Swap(&other->if_name_);
  std::swap(init_time_, other->init_time_);
  std::swap(snmp_if_index_, other->snmp_if_index_);
  parent_ae_name_.Swap(&other->parent_ae_name_);
  egress_queue_info_.UnsafeArenaSwap(&other->egress_queue_info_);
  ingress_queue_info_.UnsafeArenaSwap(&other->ingress_queue_info_);
  std::swap(ingress_stats_, other->ingress_stats_);
  std::swap(egress_stats_, other->egress_stats_);
  std::swap(ingress_errors_, other->ingress_errors_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InterfaceInfos::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterfaceInfos_descriptor_;
  metadata.reflection = InterfaceInfos_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InterfaceInfos

// required string if_name = 1;
bool InterfaceInfos::has_if_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InterfaceInfos::set_has_if_name() {
  _has_bits_[0] |= 0x00000001u;
}
void InterfaceInfos::clear_has_if_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void InterfaceInfos::clear_if_name() {
  if_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_if_name();
}
 const ::std::string& InterfaceInfos::if_name() const {
  // @@protoc_insertion_point(field_get:InterfaceInfos.if_name)
  return if_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InterfaceInfos::set_if_name(const ::std::string& value) {
  set_has_if_name();
  if_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InterfaceInfos.if_name)
}
 void InterfaceInfos::set_if_name(const char* value) {
  set_has_if_name();
  if_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InterfaceInfos.if_name)
}
 void InterfaceInfos::set_if_name(const char* value, size_t size) {
  set_has_if_name();
  if_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InterfaceInfos.if_name)
}
 ::std::string* InterfaceInfos::mutable_if_name() {
  set_has_if_name();
  // @@protoc_insertion_point(field_mutable:InterfaceInfos.if_name)
  return if_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InterfaceInfos::release_if_name() {
  clear_has_if_name();
  return if_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InterfaceInfos::set_allocated_if_name(::std::string* if_name) {
  if (if_name != NULL) {
    set_has_if_name();
  } else {
    clear_has_if_name();
  }
  if_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), if_name);
  // @@protoc_insertion_point(field_set_allocated:InterfaceInfos.if_name)
}

// required uint64 init_time = 2;
bool InterfaceInfos::has_init_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InterfaceInfos::set_has_init_time() {
  _has_bits_[0] |= 0x00000002u;
}
void InterfaceInfos::clear_has_init_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void InterfaceInfos::clear_init_time() {
  init_time_ = GOOGLE_ULONGLONG(0);
  clear_has_init_time();
}
 ::google::protobuf::uint64 InterfaceInfos::init_time() const {
  // @@protoc_insertion_point(field_get:InterfaceInfos.init_time)
  return init_time_;
}
 void InterfaceInfos::set_init_time(::google::protobuf::uint64 value) {
  set_has_init_time();
  init_time_ = value;
  // @@protoc_insertion_point(field_set:InterfaceInfos.init_time)
}

// optional uint32 snmp_if_index = 3;
bool InterfaceInfos::has_snmp_if_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InterfaceInfos::set_has_snmp_if_index() {
  _has_bits_[0] |= 0x00000004u;
}
void InterfaceInfos::clear_has_snmp_if_index() {
  _has_bits_[0] &= ~0x00000004u;
}
void InterfaceInfos::clear_snmp_if_index() {
  snmp_if_index_ = 0u;
  clear_has_snmp_if_index();
}
 ::google::protobuf::uint32 InterfaceInfos::snmp_if_index() const {
  // @@protoc_insertion_point(field_get:InterfaceInfos.snmp_if_index)
  return snmp_if_index_;
}
 void InterfaceInfos::set_snmp_if_index(::google::protobuf::uint32 value) {
  set_has_snmp_if_index();
  snmp_if_index_ = value;
  // @@protoc_insertion_point(field_set:InterfaceInfos.snmp_if_index)
}

// optional string parent_ae_name = 4;
bool InterfaceInfos::has_parent_ae_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void InterfaceInfos::set_has_parent_ae_name() {
  _has_bits_[0] |= 0x00000008u;
}
void InterfaceInfos::clear_has_parent_ae_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void InterfaceInfos::clear_parent_ae_name() {
  parent_ae_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_parent_ae_name();
}
 const ::std::string& InterfaceInfos::parent_ae_name() const {
  // @@protoc_insertion_point(field_get:InterfaceInfos.parent_ae_name)
  return parent_ae_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InterfaceInfos::set_parent_ae_name(const ::std::string& value) {
  set_has_parent_ae_name();
  parent_ae_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:InterfaceInfos.parent_ae_name)
}
 void InterfaceInfos::set_parent_ae_name(const char* value) {
  set_has_parent_ae_name();
  parent_ae_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:InterfaceInfos.parent_ae_name)
}
 void InterfaceInfos::set_parent_ae_name(const char* value, size_t size) {
  set_has_parent_ae_name();
  parent_ae_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:InterfaceInfos.parent_ae_name)
}
 ::std::string* InterfaceInfos::mutable_parent_ae_name() {
  set_has_parent_ae_name();
  // @@protoc_insertion_point(field_mutable:InterfaceInfos.parent_ae_name)
  return parent_ae_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* InterfaceInfos::release_parent_ae_name() {
  clear_has_parent_ae_name();
  return parent_ae_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void InterfaceInfos::set_allocated_parent_ae_name(::std::string* parent_ae_name) {
  if (parent_ae_name != NULL) {
    set_has_parent_ae_name();
  } else {
    clear_has_parent_ae_name();
  }
  parent_ae_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent_ae_name);
  // @@protoc_insertion_point(field_set_allocated:InterfaceInfos.parent_ae_name)
}

// repeated .QueueStats egress_queue_info = 5;
int InterfaceInfos::egress_queue_info_size() const {
  return egress_queue_info_.size();
}
void InterfaceInfos::clear_egress_queue_info() {
  egress_queue_info_.Clear();
}
const ::QueueStats& InterfaceInfos::egress_queue_info(int index) const {
  // @@protoc_insertion_point(field_get:InterfaceInfos.egress_queue_info)
  return egress_queue_info_.Get(index);
}
::QueueStats* InterfaceInfos::mutable_egress_queue_info(int index) {
  // @@protoc_insertion_point(field_mutable:InterfaceInfos.egress_queue_info)
  return egress_queue_info_.Mutable(index);
}
::QueueStats* InterfaceInfos::add_egress_queue_info() {
  // @@protoc_insertion_point(field_add:InterfaceInfos.egress_queue_info)
  return egress_queue_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::QueueStats >*
InterfaceInfos::mutable_egress_queue_info() {
  // @@protoc_insertion_point(field_mutable_list:InterfaceInfos.egress_queue_info)
  return &egress_queue_info_;
}
const ::google::protobuf::RepeatedPtrField< ::QueueStats >&
InterfaceInfos::egress_queue_info() const {
  // @@protoc_insertion_point(field_list:InterfaceInfos.egress_queue_info)
  return egress_queue_info_;
}

// repeated .QueueStats ingress_queue_info = 6;
int InterfaceInfos::ingress_queue_info_size() const {
  return ingress_queue_info_.size();
}
void InterfaceInfos::clear_ingress_queue_info() {
  ingress_queue_info_.Clear();
}
const ::QueueStats& InterfaceInfos::ingress_queue_info(int index) const {
  // @@protoc_insertion_point(field_get:InterfaceInfos.ingress_queue_info)
  return ingress_queue_info_.Get(index);
}
::QueueStats* InterfaceInfos::mutable_ingress_queue_info(int index) {
  // @@protoc_insertion_point(field_mutable:InterfaceInfos.ingress_queue_info)
  return ingress_queue_info_.Mutable(index);
}
::QueueStats* InterfaceInfos::add_ingress_queue_info() {
  // @@protoc_insertion_point(field_add:InterfaceInfos.ingress_queue_info)
  return ingress_queue_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::QueueStats >*
InterfaceInfos::mutable_ingress_queue_info() {
  // @@protoc_insertion_point(field_mutable_list:InterfaceInfos.ingress_queue_info)
  return &ingress_queue_info_;
}
const ::google::protobuf::RepeatedPtrField< ::QueueStats >&
InterfaceInfos::ingress_queue_info() const {
  // @@protoc_insertion_point(field_list:InterfaceInfos.ingress_queue_info)
  return ingress_queue_info_;
}

// optional .InterfaceStats ingress_stats = 7;
bool InterfaceInfos::has_ingress_stats() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void InterfaceInfos::set_has_ingress_stats() {
  _has_bits_[0] |= 0x00000040u;
}
void InterfaceInfos::clear_has_ingress_stats() {
  _has_bits_[0] &= ~0x00000040u;
}
void InterfaceInfos::clear_ingress_stats() {
  if (ingress_stats_ != NULL) ingress_stats_->::InterfaceStats::Clear();
  clear_has_ingress_stats();
}
const ::InterfaceStats& InterfaceInfos::ingress_stats() const {
  // @@protoc_insertion_point(field_get:InterfaceInfos.ingress_stats)
  return ingress_stats_ != NULL ? *ingress_stats_ : *default_instance_->ingress_stats_;
}
::InterfaceStats* InterfaceInfos::mutable_ingress_stats() {
  set_has_ingress_stats();
  if (ingress_stats_ == NULL) {
    ingress_stats_ = new ::InterfaceStats;
  }
  // @@protoc_insertion_point(field_mutable:InterfaceInfos.ingress_stats)
  return ingress_stats_;
}
::InterfaceStats* InterfaceInfos::release_ingress_stats() {
  clear_has_ingress_stats();
  ::InterfaceStats* temp = ingress_stats_;
  ingress_stats_ = NULL;
  return temp;
}
void InterfaceInfos::set_allocated_ingress_stats(::InterfaceStats* ingress_stats) {
  delete ingress_stats_;
  ingress_stats_ = ingress_stats;
  if (ingress_stats) {
    set_has_ingress_stats();
  } else {
    clear_has_ingress_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:InterfaceInfos.ingress_stats)
}

// optional .InterfaceStats egress_stats = 8;
bool InterfaceInfos::has_egress_stats() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void InterfaceInfos::set_has_egress_stats() {
  _has_bits_[0] |= 0x00000080u;
}
void InterfaceInfos::clear_has_egress_stats() {
  _has_bits_[0] &= ~0x00000080u;
}
void InterfaceInfos::clear_egress_stats() {
  if (egress_stats_ != NULL) egress_stats_->::InterfaceStats::Clear();
  clear_has_egress_stats();
}
const ::InterfaceStats& InterfaceInfos::egress_stats() const {
  // @@protoc_insertion_point(field_get:InterfaceInfos.egress_stats)
  return egress_stats_ != NULL ? *egress_stats_ : *default_instance_->egress_stats_;
}
::InterfaceStats* InterfaceInfos::mutable_egress_stats() {
  set_has_egress_stats();
  if (egress_stats_ == NULL) {
    egress_stats_ = new ::InterfaceStats;
  }
  // @@protoc_insertion_point(field_mutable:InterfaceInfos.egress_stats)
  return egress_stats_;
}
::InterfaceStats* InterfaceInfos::release_egress_stats() {
  clear_has_egress_stats();
  ::InterfaceStats* temp = egress_stats_;
  egress_stats_ = NULL;
  return temp;
}
void InterfaceInfos::set_allocated_egress_stats(::InterfaceStats* egress_stats) {
  delete egress_stats_;
  egress_stats_ = egress_stats;
  if (egress_stats) {
    set_has_egress_stats();
  } else {
    clear_has_egress_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:InterfaceInfos.egress_stats)
}

// optional .IngressInterfaceErrors ingress_errors = 9;
bool InterfaceInfos::has_ingress_errors() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void InterfaceInfos::set_has_ingress_errors() {
  _has_bits_[0] |= 0x00000100u;
}
void InterfaceInfos::clear_has_ingress_errors() {
  _has_bits_[0] &= ~0x00000100u;
}
void InterfaceInfos::clear_ingress_errors() {
  if (ingress_errors_ != NULL) ingress_errors_->::IngressInterfaceErrors::Clear();
  clear_has_ingress_errors();
}
const ::IngressInterfaceErrors& InterfaceInfos::ingress_errors() const {
  // @@protoc_insertion_point(field_get:InterfaceInfos.ingress_errors)
  return ingress_errors_ != NULL ? *ingress_errors_ : *default_instance_->ingress_errors_;
}
::IngressInterfaceErrors* InterfaceInfos::mutable_ingress_errors() {
  set_has_ingress_errors();
  if (ingress_errors_ == NULL) {
    ingress_errors_ = new ::IngressInterfaceErrors;
  }
  // @@protoc_insertion_point(field_mutable:InterfaceInfos.ingress_errors)
  return ingress_errors_;
}
::IngressInterfaceErrors* InterfaceInfos::release_ingress_errors() {
  clear_has_ingress_errors();
  ::IngressInterfaceErrors* temp = ingress_errors_;
  ingress_errors_ = NULL;
  return temp;
}
void InterfaceInfos::set_allocated_ingress_errors(::IngressInterfaceErrors* ingress_errors) {
  delete ingress_errors_;
  ingress_errors_ = ingress_errors;
  if (ingress_errors) {
    set_has_ingress_errors();
  } else {
    clear_has_ingress_errors();
  }
  // @@protoc_insertion_point(field_set_allocated:InterfaceInfos.ingress_errors)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int InterfaceStats::kIfPktsFieldNumber;
const int InterfaceStats::kIfOctetsFieldNumber;
const int InterfaceStats::kIf1SecPktsFieldNumber;
const int InterfaceStats::kIf1SecOctetsFieldNumber;
const int InterfaceStats::kIfUcPktsFieldNumber;
const int InterfaceStats::kIfMcPktsFieldNumber;
const int InterfaceStats::kIfBcPktsFieldNumber;
#endif  // !_MSC_VER

InterfaceStats::InterfaceStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:InterfaceStats)
}

void InterfaceStats::InitAsDefaultInstance() {
}

InterfaceStats::InterfaceStats(const InterfaceStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:InterfaceStats)
}

void InterfaceStats::SharedCtor() {
  _cached_size_ = 0;
  if_pkts_ = GOOGLE_ULONGLONG(0);
  if_octets_ = GOOGLE_ULONGLONG(0);
  if_1sec_pkts_ = GOOGLE_ULONGLONG(0);
  if_1sec_octets_ = GOOGLE_ULONGLONG(0);
  if_uc_pkts_ = GOOGLE_ULONGLONG(0);
  if_mc_pkts_ = GOOGLE_ULONGLONG(0);
  if_bc_pkts_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterfaceStats::~InterfaceStats() {
  // @@protoc_insertion_point(destructor:InterfaceStats)
  SharedDtor();
}

void InterfaceStats::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterfaceStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterfaceStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterfaceStats_descriptor_;
}

const InterfaceStats& InterfaceStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_port_2eproto();
  return *default_instance_;
}

InterfaceStats* InterfaceStats::default_instance_ = NULL;

InterfaceStats* InterfaceStats::New(::google::protobuf::Arena* arena) const {
  InterfaceStats* n = new InterfaceStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InterfaceStats::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<InterfaceStats*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(if_pkts_, if_bc_pkts_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InterfaceStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:InterfaceStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 if_pkts = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_pkts_)));
          set_has_if_pkts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_if_octets;
        break;
      }

      // required uint64 if_octets = 2;
      case 2: {
        if (tag == 16) {
         parse_if_octets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_octets_)));
          set_has_if_octets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_if_1sec_pkts;
        break;
      }

      // required uint64 if_1sec_pkts = 3;
      case 3: {
        if (tag == 24) {
         parse_if_1sec_pkts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_1sec_pkts_)));
          set_has_if_1sec_pkts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_if_1sec_octets;
        break;
      }

      // required uint64 if_1sec_octets = 4;
      case 4: {
        if (tag == 32) {
         parse_if_1sec_octets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_1sec_octets_)));
          set_has_if_1sec_octets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_if_uc_pkts;
        break;
      }

      // required uint64 if_uc_pkts = 5;
      case 5: {
        if (tag == 40) {
         parse_if_uc_pkts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_uc_pkts_)));
          set_has_if_uc_pkts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_if_mc_pkts;
        break;
      }

      // required uint64 if_mc_pkts = 6;
      case 6: {
        if (tag == 48) {
         parse_if_mc_pkts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_mc_pkts_)));
          set_has_if_mc_pkts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_if_bc_pkts;
        break;
      }

      // required uint64 if_bc_pkts = 7;
      case 7: {
        if (tag == 56) {
         parse_if_bc_pkts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_bc_pkts_)));
          set_has_if_bc_pkts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:InterfaceStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:InterfaceStats)
  return false;
#undef DO_
}

void InterfaceStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:InterfaceStats)
  // required uint64 if_pkts = 1;
  if (has_if_pkts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->if_pkts(), output);
  }

  // required uint64 if_octets = 2;
  if (has_if_octets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->if_octets(), output);
  }

  // required uint64 if_1sec_pkts = 3;
  if (has_if_1sec_pkts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->if_1sec_pkts(), output);
  }

  // required uint64 if_1sec_octets = 4;
  if (has_if_1sec_octets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->if_1sec_octets(), output);
  }

  // required uint64 if_uc_pkts = 5;
  if (has_if_uc_pkts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->if_uc_pkts(), output);
  }

  // required uint64 if_mc_pkts = 6;
  if (has_if_mc_pkts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->if_mc_pkts(), output);
  }

  // required uint64 if_bc_pkts = 7;
  if (has_if_bc_pkts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->if_bc_pkts(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:InterfaceStats)
}

::google::protobuf::uint8* InterfaceStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:InterfaceStats)
  // required uint64 if_pkts = 1;
  if (has_if_pkts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->if_pkts(), target);
  }

  // required uint64 if_octets = 2;
  if (has_if_octets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->if_octets(), target);
  }

  // required uint64 if_1sec_pkts = 3;
  if (has_if_1sec_pkts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->if_1sec_pkts(), target);
  }

  // required uint64 if_1sec_octets = 4;
  if (has_if_1sec_octets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->if_1sec_octets(), target);
  }

  // required uint64 if_uc_pkts = 5;
  if (has_if_uc_pkts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->if_uc_pkts(), target);
  }

  // required uint64 if_mc_pkts = 6;
  if (has_if_mc_pkts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->if_mc_pkts(), target);
  }

  // required uint64 if_bc_pkts = 7;
  if (has_if_bc_pkts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->if_bc_pkts(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InterfaceStats)
  return target;
}

int InterfaceStats::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_if_pkts()) {
    // required uint64 if_pkts = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_pkts());
  }

  if (has_if_octets()) {
    // required uint64 if_octets = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_octets());
  }

  if (has_if_1sec_pkts()) {
    // required uint64 if_1sec_pkts = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_1sec_pkts());
  }

  if (has_if_1sec_octets()) {
    // required uint64 if_1sec_octets = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_1sec_octets());
  }

  if (has_if_uc_pkts()) {
    // required uint64 if_uc_pkts = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_uc_pkts());
  }

  if (has_if_mc_pkts()) {
    // required uint64 if_mc_pkts = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_mc_pkts());
  }

  if (has_if_bc_pkts()) {
    // required uint64 if_bc_pkts = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_bc_pkts());
  }

  return total_size;
}
int InterfaceStats::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required uint64 if_pkts = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_pkts());

    // required uint64 if_octets = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_octets());

    // required uint64 if_1sec_pkts = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_1sec_pkts());

    // required uint64 if_1sec_octets = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_1sec_octets());

    // required uint64 if_uc_pkts = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_uc_pkts());

    // required uint64 if_mc_pkts = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_mc_pkts());

    // required uint64 if_bc_pkts = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->if_bc_pkts());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterfaceStats::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InterfaceStats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InterfaceStats>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void InterfaceStats::MergeFrom(const InterfaceStats& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_if_pkts()) {
      set_if_pkts(from.if_pkts());
    }
    if (from.has_if_octets()) {
      set_if_octets(from.if_octets());
    }
    if (from.has_if_1sec_pkts()) {
      set_if_1sec_pkts(from.if_1sec_pkts());
    }
    if (from.has_if_1sec_octets()) {
      set_if_1sec_octets(from.if_1sec_octets());
    }
    if (from.has_if_uc_pkts()) {
      set_if_uc_pkts(from.if_uc_pkts());
    }
    if (from.has_if_mc_pkts()) {
      set_if_mc_pkts(from.if_mc_pkts());
    }
    if (from.has_if_bc_pkts()) {
      set_if_bc_pkts(from.if_bc_pkts());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InterfaceStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterfaceStats::CopyFrom(const InterfaceStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceStats::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void InterfaceStats::Swap(InterfaceStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterfaceStats::InternalSwap(InterfaceStats* other) {
  std::swap(if_pkts_, other->if_pkts_);
  std::swap(if_octets_, other->if_octets_);
  std::swap(if_1sec_pkts_, other->if_1sec_pkts_);
  std::swap(if_1sec_octets_, other->if_1sec_octets_);
  std::swap(if_uc_pkts_, other->if_uc_pkts_);
  std::swap(if_mc_pkts_, other->if_mc_pkts_);
  std::swap(if_bc_pkts_, other->if_bc_pkts_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InterfaceStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterfaceStats_descriptor_;
  metadata.reflection = InterfaceStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InterfaceStats

// required uint64 if_pkts = 1;
bool InterfaceStats::has_if_pkts() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InterfaceStats::set_has_if_pkts() {
  _has_bits_[0] |= 0x00000001u;
}
void InterfaceStats::clear_has_if_pkts() {
  _has_bits_[0] &= ~0x00000001u;
}
void InterfaceStats::clear_if_pkts() {
  if_pkts_ = GOOGLE_ULONGLONG(0);
  clear_has_if_pkts();
}
 ::google::protobuf::uint64 InterfaceStats::if_pkts() const {
  // @@protoc_insertion_point(field_get:InterfaceStats.if_pkts)
  return if_pkts_;
}
 void InterfaceStats::set_if_pkts(::google::protobuf::uint64 value) {
  set_has_if_pkts();
  if_pkts_ = value;
  // @@protoc_insertion_point(field_set:InterfaceStats.if_pkts)
}

// required uint64 if_octets = 2;
bool InterfaceStats::has_if_octets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InterfaceStats::set_has_if_octets() {
  _has_bits_[0] |= 0x00000002u;
}
void InterfaceStats::clear_has_if_octets() {
  _has_bits_[0] &= ~0x00000002u;
}
void InterfaceStats::clear_if_octets() {
  if_octets_ = GOOGLE_ULONGLONG(0);
  clear_has_if_octets();
}
 ::google::protobuf::uint64 InterfaceStats::if_octets() const {
  // @@protoc_insertion_point(field_get:InterfaceStats.if_octets)
  return if_octets_;
}
 void InterfaceStats::set_if_octets(::google::protobuf::uint64 value) {
  set_has_if_octets();
  if_octets_ = value;
  // @@protoc_insertion_point(field_set:InterfaceStats.if_octets)
}

// required uint64 if_1sec_pkts = 3;
bool InterfaceStats::has_if_1sec_pkts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InterfaceStats::set_has_if_1sec_pkts() {
  _has_bits_[0] |= 0x00000004u;
}
void InterfaceStats::clear_has_if_1sec_pkts() {
  _has_bits_[0] &= ~0x00000004u;
}
void InterfaceStats::clear_if_1sec_pkts() {
  if_1sec_pkts_ = GOOGLE_ULONGLONG(0);
  clear_has_if_1sec_pkts();
}
 ::google::protobuf::uint64 InterfaceStats::if_1sec_pkts() const {
  // @@protoc_insertion_point(field_get:InterfaceStats.if_1sec_pkts)
  return if_1sec_pkts_;
}
 void InterfaceStats::set_if_1sec_pkts(::google::protobuf::uint64 value) {
  set_has_if_1sec_pkts();
  if_1sec_pkts_ = value;
  // @@protoc_insertion_point(field_set:InterfaceStats.if_1sec_pkts)
}

// required uint64 if_1sec_octets = 4;
bool InterfaceStats::has_if_1sec_octets() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void InterfaceStats::set_has_if_1sec_octets() {
  _has_bits_[0] |= 0x00000008u;
}
void InterfaceStats::clear_has_if_1sec_octets() {
  _has_bits_[0] &= ~0x00000008u;
}
void InterfaceStats::clear_if_1sec_octets() {
  if_1sec_octets_ = GOOGLE_ULONGLONG(0);
  clear_has_if_1sec_octets();
}
 ::google::protobuf::uint64 InterfaceStats::if_1sec_octets() const {
  // @@protoc_insertion_point(field_get:InterfaceStats.if_1sec_octets)
  return if_1sec_octets_;
}
 void InterfaceStats::set_if_1sec_octets(::google::protobuf::uint64 value) {
  set_has_if_1sec_octets();
  if_1sec_octets_ = value;
  // @@protoc_insertion_point(field_set:InterfaceStats.if_1sec_octets)
}

// required uint64 if_uc_pkts = 5;
bool InterfaceStats::has_if_uc_pkts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void InterfaceStats::set_has_if_uc_pkts() {
  _has_bits_[0] |= 0x00000010u;
}
void InterfaceStats::clear_has_if_uc_pkts() {
  _has_bits_[0] &= ~0x00000010u;
}
void InterfaceStats::clear_if_uc_pkts() {
  if_uc_pkts_ = GOOGLE_ULONGLONG(0);
  clear_has_if_uc_pkts();
}
 ::google::protobuf::uint64 InterfaceStats::if_uc_pkts() const {
  // @@protoc_insertion_point(field_get:InterfaceStats.if_uc_pkts)
  return if_uc_pkts_;
}
 void InterfaceStats::set_if_uc_pkts(::google::protobuf::uint64 value) {
  set_has_if_uc_pkts();
  if_uc_pkts_ = value;
  // @@protoc_insertion_point(field_set:InterfaceStats.if_uc_pkts)
}

// required uint64 if_mc_pkts = 6;
bool InterfaceStats::has_if_mc_pkts() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void InterfaceStats::set_has_if_mc_pkts() {
  _has_bits_[0] |= 0x00000020u;
}
void InterfaceStats::clear_has_if_mc_pkts() {
  _has_bits_[0] &= ~0x00000020u;
}
void InterfaceStats::clear_if_mc_pkts() {
  if_mc_pkts_ = GOOGLE_ULONGLONG(0);
  clear_has_if_mc_pkts();
}
 ::google::protobuf::uint64 InterfaceStats::if_mc_pkts() const {
  // @@protoc_insertion_point(field_get:InterfaceStats.if_mc_pkts)
  return if_mc_pkts_;
}
 void InterfaceStats::set_if_mc_pkts(::google::protobuf::uint64 value) {
  set_has_if_mc_pkts();
  if_mc_pkts_ = value;
  // @@protoc_insertion_point(field_set:InterfaceStats.if_mc_pkts)
}

// required uint64 if_bc_pkts = 7;
bool InterfaceStats::has_if_bc_pkts() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void InterfaceStats::set_has_if_bc_pkts() {
  _has_bits_[0] |= 0x00000040u;
}
void InterfaceStats::clear_has_if_bc_pkts() {
  _has_bits_[0] &= ~0x00000040u;
}
void InterfaceStats::clear_if_bc_pkts() {
  if_bc_pkts_ = GOOGLE_ULONGLONG(0);
  clear_has_if_bc_pkts();
}
 ::google::protobuf::uint64 InterfaceStats::if_bc_pkts() const {
  // @@protoc_insertion_point(field_get:InterfaceStats.if_bc_pkts)
  return if_bc_pkts_;
}
 void InterfaceStats::set_if_bc_pkts(::google::protobuf::uint64 value) {
  set_has_if_bc_pkts();
  if_bc_pkts_ = value;
  // @@protoc_insertion_point(field_set:InterfaceStats.if_bc_pkts)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int IngressInterfaceErrors::kIfInErrorsFieldNumber;
const int IngressInterfaceErrors::kIfInQdropsFieldNumber;
const int IngressInterfaceErrors::kIfInFrameErrorsFieldNumber;
const int IngressInterfaceErrors::kIfInDiscardsFieldNumber;
const int IngressInterfaceErrors::kIfInRuntsFieldNumber;
const int IngressInterfaceErrors::kIfInL3IncompletesFieldNumber;
const int IngressInterfaceErrors::kIfInL2ChanErrorsFieldNumber;
const int IngressInterfaceErrors::kIfInL2MismatchTimeoutsFieldNumber;
const int IngressInterfaceErrors::kIfInFifoErrorsFieldNumber;
const int IngressInterfaceErrors::kIfInResourceErrorsFieldNumber;
#endif  // !_MSC_VER

IngressInterfaceErrors::IngressInterfaceErrors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IngressInterfaceErrors)
}

void IngressInterfaceErrors::InitAsDefaultInstance() {
}

IngressInterfaceErrors::IngressInterfaceErrors(const IngressInterfaceErrors& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:IngressInterfaceErrors)
}

void IngressInterfaceErrors::SharedCtor() {
  _cached_size_ = 0;
  if_in_errors_ = GOOGLE_ULONGLONG(0);
  if_in_qdrops_ = GOOGLE_ULONGLONG(0);
  if_in_frame_errors_ = GOOGLE_ULONGLONG(0);
  if_in_discards_ = GOOGLE_ULONGLONG(0);
  if_in_runts_ = GOOGLE_ULONGLONG(0);
  if_in_l3_incompletes_ = GOOGLE_ULONGLONG(0);
  if_in_l2chan_errors_ = GOOGLE_ULONGLONG(0);
  if_in_l2_mismatch_timeouts_ = GOOGLE_ULONGLONG(0);
  if_in_fifo_errors_ = GOOGLE_ULONGLONG(0);
  if_in_resource_errors_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

IngressInterfaceErrors::~IngressInterfaceErrors() {
  // @@protoc_insertion_point(destructor:IngressInterfaceErrors)
  SharedDtor();
}

void IngressInterfaceErrors::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IngressInterfaceErrors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IngressInterfaceErrors::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IngressInterfaceErrors_descriptor_;
}

const IngressInterfaceErrors& IngressInterfaceErrors::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_port_2eproto();
  return *default_instance_;
}

IngressInterfaceErrors* IngressInterfaceErrors::default_instance_ = NULL;

IngressInterfaceErrors* IngressInterfaceErrors::New(::google::protobuf::Arena* arena) const {
  IngressInterfaceErrors* n = new IngressInterfaceErrors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IngressInterfaceErrors::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<IngressInterfaceErrors*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(if_in_errors_, if_in_l2_mismatch_timeouts_);
  }
  ZR_(if_in_fifo_errors_, if_in_resource_errors_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool IngressInterfaceErrors::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IngressInterfaceErrors)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 if_in_errors = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_in_errors_)));
          set_has_if_in_errors();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_if_in_qdrops;
        break;
      }

      // optional uint64 if_in_qdrops = 2;
      case 2: {
        if (tag == 16) {
         parse_if_in_qdrops:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_in_qdrops_)));
          set_has_if_in_qdrops();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_if_in_frame_errors;
        break;
      }

      // optional uint64 if_in_frame_errors = 3;
      case 3: {
        if (tag == 24) {
         parse_if_in_frame_errors:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_in_frame_errors_)));
          set_has_if_in_frame_errors();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_if_in_discards;
        break;
      }

      // optional uint64 if_in_discards = 4;
      case 4: {
        if (tag == 32) {
         parse_if_in_discards:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_in_discards_)));
          set_has_if_in_discards();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_if_in_runts;
        break;
      }

      // optional uint64 if_in_runts = 5;
      case 5: {
        if (tag == 40) {
         parse_if_in_runts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_in_runts_)));
          set_has_if_in_runts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_if_in_l3_incompletes;
        break;
      }

      // optional uint64 if_in_l3_incompletes = 6;
      case 6: {
        if (tag == 48) {
         parse_if_in_l3_incompletes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_in_l3_incompletes_)));
          set_has_if_in_l3_incompletes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_if_in_l2chan_errors;
        break;
      }

      // optional uint64 if_in_l2chan_errors = 7;
      case 7: {
        if (tag == 56) {
         parse_if_in_l2chan_errors:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_in_l2chan_errors_)));
          set_has_if_in_l2chan_errors();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_if_in_l2_mismatch_timeouts;
        break;
      }

      // optional uint64 if_in_l2_mismatch_timeouts = 8;
      case 8: {
        if (tag == 64) {
         parse_if_in_l2_mismatch_timeouts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_in_l2_mismatch_timeouts_)));
          set_has_if_in_l2_mismatch_timeouts();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_if_in_fifo_errors;
        break;
      }

      // optional uint64 if_in_fifo_errors = 9;
      case 9: {
        if (tag == 72) {
         parse_if_in_fifo_errors:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_in_fifo_errors_)));
          set_has_if_in_fifo_errors();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_if_in_resource_errors;
        break;
      }

      // optional uint64 if_in_resource_errors = 10;
      case 10: {
        if (tag == 80) {
         parse_if_in_resource_errors:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &if_in_resource_errors_)));
          set_has_if_in_resource_errors();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IngressInterfaceErrors)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IngressInterfaceErrors)
  return false;
#undef DO_
}

void IngressInterfaceErrors::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IngressInterfaceErrors)
  // optional uint64 if_in_errors = 1;
  if (has_if_in_errors()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->if_in_errors(), output);
  }

  // optional uint64 if_in_qdrops = 2;
  if (has_if_in_qdrops()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->if_in_qdrops(), output);
  }

  // optional uint64 if_in_frame_errors = 3;
  if (has_if_in_frame_errors()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->if_in_frame_errors(), output);
  }

  // optional uint64 if_in_discards = 4;
  if (has_if_in_discards()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->if_in_discards(), output);
  }

  // optional uint64 if_in_runts = 5;
  if (has_if_in_runts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->if_in_runts(), output);
  }

  // optional uint64 if_in_l3_incompletes = 6;
  if (has_if_in_l3_incompletes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->if_in_l3_incompletes(), output);
  }

  // optional uint64 if_in_l2chan_errors = 7;
  if (has_if_in_l2chan_errors()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->if_in_l2chan_errors(), output);
  }

  // optional uint64 if_in_l2_mismatch_timeouts = 8;
  if (has_if_in_l2_mismatch_timeouts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->if_in_l2_mismatch_timeouts(), output);
  }

  // optional uint64 if_in_fifo_errors = 9;
  if (has_if_in_fifo_errors()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->if_in_fifo_errors(), output);
  }

  // optional uint64 if_in_resource_errors = 10;
  if (has_if_in_resource_errors()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->if_in_resource_errors(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:IngressInterfaceErrors)
}

::google::protobuf::uint8* IngressInterfaceErrors::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:IngressInterfaceErrors)
  // optional uint64 if_in_errors = 1;
  if (has_if_in_errors()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->if_in_errors(), target);
  }

  // optional uint64 if_in_qdrops = 2;
  if (has_if_in_qdrops()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->if_in_qdrops(), target);
  }

  // optional uint64 if_in_frame_errors = 3;
  if (has_if_in_frame_errors()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->if_in_frame_errors(), target);
  }

  // optional uint64 if_in_discards = 4;
  if (has_if_in_discards()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->if_in_discards(), target);
  }

  // optional uint64 if_in_runts = 5;
  if (has_if_in_runts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->if_in_runts(), target);
  }

  // optional uint64 if_in_l3_incompletes = 6;
  if (has_if_in_l3_incompletes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->if_in_l3_incompletes(), target);
  }

  // optional uint64 if_in_l2chan_errors = 7;
  if (has_if_in_l2chan_errors()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->if_in_l2chan_errors(), target);
  }

  // optional uint64 if_in_l2_mismatch_timeouts = 8;
  if (has_if_in_l2_mismatch_timeouts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->if_in_l2_mismatch_timeouts(), target);
  }

  // optional uint64 if_in_fifo_errors = 9;
  if (has_if_in_fifo_errors()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->if_in_fifo_errors(), target);
  }

  // optional uint64 if_in_resource_errors = 10;
  if (has_if_in_resource_errors()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->if_in_resource_errors(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:IngressInterfaceErrors)
  return target;
}

int IngressInterfaceErrors::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint64 if_in_errors = 1;
    if (has_if_in_errors()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->if_in_errors());
    }

    // optional uint64 if_in_qdrops = 2;
    if (has_if_in_qdrops()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->if_in_qdrops());
    }

    // optional uint64 if_in_frame_errors = 3;
    if (has_if_in_frame_errors()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->if_in_frame_errors());
    }

    // optional uint64 if_in_discards = 4;
    if (has_if_in_discards()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->if_in_discards());
    }

    // optional uint64 if_in_runts = 5;
    if (has_if_in_runts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->if_in_runts());
    }

    // optional uint64 if_in_l3_incompletes = 6;
    if (has_if_in_l3_incompletes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->if_in_l3_incompletes());
    }

    // optional uint64 if_in_l2chan_errors = 7;
    if (has_if_in_l2chan_errors()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->if_in_l2chan_errors());
    }

    // optional uint64 if_in_l2_mismatch_timeouts = 8;
    if (has_if_in_l2_mismatch_timeouts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->if_in_l2_mismatch_timeouts());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional uint64 if_in_fifo_errors = 9;
    if (has_if_in_fifo_errors()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->if_in_fifo_errors());
    }

    // optional uint64 if_in_resource_errors = 10;
    if (has_if_in_resource_errors()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->if_in_resource_errors());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IngressInterfaceErrors::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const IngressInterfaceErrors* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const IngressInterfaceErrors>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IngressInterfaceErrors::MergeFrom(const IngressInterfaceErrors& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_if_in_errors()) {
      set_if_in_errors(from.if_in_errors());
    }
    if (from.has_if_in_qdrops()) {
      set_if_in_qdrops(from.if_in_qdrops());
    }
    if (from.has_if_in_frame_errors()) {
      set_if_in_frame_errors(from.if_in_frame_errors());
    }
    if (from.has_if_in_discards()) {
      set_if_in_discards(from.if_in_discards());
    }
    if (from.has_if_in_runts()) {
      set_if_in_runts(from.if_in_runts());
    }
    if (from.has_if_in_l3_incompletes()) {
      set_if_in_l3_incompletes(from.if_in_l3_incompletes());
    }
    if (from.has_if_in_l2chan_errors()) {
      set_if_in_l2chan_errors(from.if_in_l2chan_errors());
    }
    if (from.has_if_in_l2_mismatch_timeouts()) {
      set_if_in_l2_mismatch_timeouts(from.if_in_l2_mismatch_timeouts());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_if_in_fifo_errors()) {
      set_if_in_fifo_errors(from.if_in_fifo_errors());
    }
    if (from.has_if_in_resource_errors()) {
      set_if_in_resource_errors(from.if_in_resource_errors());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void IngressInterfaceErrors::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IngressInterfaceErrors::CopyFrom(const IngressInterfaceErrors& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IngressInterfaceErrors::IsInitialized() const {

  return true;
}

void IngressInterfaceErrors::Swap(IngressInterfaceErrors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IngressInterfaceErrors::InternalSwap(IngressInterfaceErrors* other) {
  std::swap(if_in_errors_, other->if_in_errors_);
  std::swap(if_in_qdrops_, other->if_in_qdrops_);
  std::swap(if_in_frame_errors_, other->if_in_frame_errors_);
  std::swap(if_in_discards_, other->if_in_discards_);
  std::swap(if_in_runts_, other->if_in_runts_);
  std::swap(if_in_l3_incompletes_, other->if_in_l3_incompletes_);
  std::swap(if_in_l2chan_errors_, other->if_in_l2chan_errors_);
  std::swap(if_in_l2_mismatch_timeouts_, other->if_in_l2_mismatch_timeouts_);
  std::swap(if_in_fifo_errors_, other->if_in_fifo_errors_);
  std::swap(if_in_resource_errors_, other->if_in_resource_errors_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IngressInterfaceErrors::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IngressInterfaceErrors_descriptor_;
  metadata.reflection = IngressInterfaceErrors_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IngressInterfaceErrors

// optional uint64 if_in_errors = 1;
bool IngressInterfaceErrors::has_if_in_errors() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void IngressInterfaceErrors::set_has_if_in_errors() {
  _has_bits_[0] |= 0x00000001u;
}
void IngressInterfaceErrors::clear_has_if_in_errors() {
  _has_bits_[0] &= ~0x00000001u;
}
void IngressInterfaceErrors::clear_if_in_errors() {
  if_in_errors_ = GOOGLE_ULONGLONG(0);
  clear_has_if_in_errors();
}
 ::google::protobuf::uint64 IngressInterfaceErrors::if_in_errors() const {
  // @@protoc_insertion_point(field_get:IngressInterfaceErrors.if_in_errors)
  return if_in_errors_;
}
 void IngressInterfaceErrors::set_if_in_errors(::google::protobuf::uint64 value) {
  set_has_if_in_errors();
  if_in_errors_ = value;
  // @@protoc_insertion_point(field_set:IngressInterfaceErrors.if_in_errors)
}

// optional uint64 if_in_qdrops = 2;
bool IngressInterfaceErrors::has_if_in_qdrops() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void IngressInterfaceErrors::set_has_if_in_qdrops() {
  _has_bits_[0] |= 0x00000002u;
}
void IngressInterfaceErrors::clear_has_if_in_qdrops() {
  _has_bits_[0] &= ~0x00000002u;
}
void IngressInterfaceErrors::clear_if_in_qdrops() {
  if_in_qdrops_ = GOOGLE_ULONGLONG(0);
  clear_has_if_in_qdrops();
}
 ::google::protobuf::uint64 IngressInterfaceErrors::if_in_qdrops() const {
  // @@protoc_insertion_point(field_get:IngressInterfaceErrors.if_in_qdrops)
  return if_in_qdrops_;
}
 void IngressInterfaceErrors::set_if_in_qdrops(::google::protobuf::uint64 value) {
  set_has_if_in_qdrops();
  if_in_qdrops_ = value;
  // @@protoc_insertion_point(field_set:IngressInterfaceErrors.if_in_qdrops)
}

// optional uint64 if_in_frame_errors = 3;
bool IngressInterfaceErrors::has_if_in_frame_errors() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void IngressInterfaceErrors::set_has_if_in_frame_errors() {
  _has_bits_[0] |= 0x00000004u;
}
void IngressInterfaceErrors::clear_has_if_in_frame_errors() {
  _has_bits_[0] &= ~0x00000004u;
}
void IngressInterfaceErrors::clear_if_in_frame_errors() {
  if_in_frame_errors_ = GOOGLE_ULONGLONG(0);
  clear_has_if_in_frame_errors();
}
 ::google::protobuf::uint64 IngressInterfaceErrors::if_in_frame_errors() const {
  // @@protoc_insertion_point(field_get:IngressInterfaceErrors.if_in_frame_errors)
  return if_in_frame_errors_;
}
 void IngressInterfaceErrors::set_if_in_frame_errors(::google::protobuf::uint64 value) {
  set_has_if_in_frame_errors();
  if_in_frame_errors_ = value;
  // @@protoc_insertion_point(field_set:IngressInterfaceErrors.if_in_frame_errors)
}

// optional uint64 if_in_discards = 4;
bool IngressInterfaceErrors::has_if_in_discards() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void IngressInterfaceErrors::set_has_if_in_discards() {
  _has_bits_[0] |= 0x00000008u;
}
void IngressInterfaceErrors::clear_has_if_in_discards() {
  _has_bits_[0] &= ~0x00000008u;
}
void IngressInterfaceErrors::clear_if_in_discards() {
  if_in_discards_ = GOOGLE_ULONGLONG(0);
  clear_has_if_in_discards();
}
 ::google::protobuf::uint64 IngressInterfaceErrors::if_in_discards() const {
  // @@protoc_insertion_point(field_get:IngressInterfaceErrors.if_in_discards)
  return if_in_discards_;
}
 void IngressInterfaceErrors::set_if_in_discards(::google::protobuf::uint64 value) {
  set_has_if_in_discards();
  if_in_discards_ = value;
  // @@protoc_insertion_point(field_set:IngressInterfaceErrors.if_in_discards)
}

// optional uint64 if_in_runts = 5;
bool IngressInterfaceErrors::has_if_in_runts() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void IngressInterfaceErrors::set_has_if_in_runts() {
  _has_bits_[0] |= 0x00000010u;
}
void IngressInterfaceErrors::clear_has_if_in_runts() {
  _has_bits_[0] &= ~0x00000010u;
}
void IngressInterfaceErrors::clear_if_in_runts() {
  if_in_runts_ = GOOGLE_ULONGLONG(0);
  clear_has_if_in_runts();
}
 ::google::protobuf::uint64 IngressInterfaceErrors::if_in_runts() const {
  // @@protoc_insertion_point(field_get:IngressInterfaceErrors.if_in_runts)
  return if_in_runts_;
}
 void IngressInterfaceErrors::set_if_in_runts(::google::protobuf::uint64 value) {
  set_has_if_in_runts();
  if_in_runts_ = value;
  // @@protoc_insertion_point(field_set:IngressInterfaceErrors.if_in_runts)
}

// optional uint64 if_in_l3_incompletes = 6;
bool IngressInterfaceErrors::has_if_in_l3_incompletes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void IngressInterfaceErrors::set_has_if_in_l3_incompletes() {
  _has_bits_[0] |= 0x00000020u;
}
void IngressInterfaceErrors::clear_has_if_in_l3_incompletes() {
  _has_bits_[0] &= ~0x00000020u;
}
void IngressInterfaceErrors::clear_if_in_l3_incompletes() {
  if_in_l3_incompletes_ = GOOGLE_ULONGLONG(0);
  clear_has_if_in_l3_incompletes();
}
 ::google::protobuf::uint64 IngressInterfaceErrors::if_in_l3_incompletes() const {
  // @@protoc_insertion_point(field_get:IngressInterfaceErrors.if_in_l3_incompletes)
  return if_in_l3_incompletes_;
}
 void IngressInterfaceErrors::set_if_in_l3_incompletes(::google::protobuf::uint64 value) {
  set_has_if_in_l3_incompletes();
  if_in_l3_incompletes_ = value;
  // @@protoc_insertion_point(field_set:IngressInterfaceErrors.if_in_l3_incompletes)
}

// optional uint64 if_in_l2chan_errors = 7;
bool IngressInterfaceErrors::has_if_in_l2chan_errors() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void IngressInterfaceErrors::set_has_if_in_l2chan_errors() {
  _has_bits_[0] |= 0x00000040u;
}
void IngressInterfaceErrors::clear_has_if_in_l2chan_errors() {
  _has_bits_[0] &= ~0x00000040u;
}
void IngressInterfaceErrors::clear_if_in_l2chan_errors() {
  if_in_l2chan_errors_ = GOOGLE_ULONGLONG(0);
  clear_has_if_in_l2chan_errors();
}
 ::google::protobuf::uint64 IngressInterfaceErrors::if_in_l2chan_errors() const {
  // @@protoc_insertion_point(field_get:IngressInterfaceErrors.if_in_l2chan_errors)
  return if_in_l2chan_errors_;
}
 void IngressInterfaceErrors::set_if_in_l2chan_errors(::google::protobuf::uint64 value) {
  set_has_if_in_l2chan_errors();
  if_in_l2chan_errors_ = value;
  // @@protoc_insertion_point(field_set:IngressInterfaceErrors.if_in_l2chan_errors)
}

// optional uint64 if_in_l2_mismatch_timeouts = 8;
bool IngressInterfaceErrors::has_if_in_l2_mismatch_timeouts() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void IngressInterfaceErrors::set_has_if_in_l2_mismatch_timeouts() {
  _has_bits_[0] |= 0x00000080u;
}
void IngressInterfaceErrors::clear_has_if_in_l2_mismatch_timeouts() {
  _has_bits_[0] &= ~0x00000080u;
}
void IngressInterfaceErrors::clear_if_in_l2_mismatch_timeouts() {
  if_in_l2_mismatch_timeouts_ = GOOGLE_ULONGLONG(0);
  clear_has_if_in_l2_mismatch_timeouts();
}
 ::google::protobuf::uint64 IngressInterfaceErrors::if_in_l2_mismatch_timeouts() const {
  // @@protoc_insertion_point(field_get:IngressInterfaceErrors.if_in_l2_mismatch_timeouts)
  return if_in_l2_mismatch_timeouts_;
}
 void IngressInterfaceErrors::set_if_in_l2_mismatch_timeouts(::google::protobuf::uint64 value) {
  set_has_if_in_l2_mismatch_timeouts();
  if_in_l2_mismatch_timeouts_ = value;
  // @@protoc_insertion_point(field_set:IngressInterfaceErrors.if_in_l2_mismatch_timeouts)
}

// optional uint64 if_in_fifo_errors = 9;
bool IngressInterfaceErrors::has_if_in_fifo_errors() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void IngressInterfaceErrors::set_has_if_in_fifo_errors() {
  _has_bits_[0] |= 0x00000100u;
}
void IngressInterfaceErrors::clear_has_if_in_fifo_errors() {
  _has_bits_[0] &= ~0x00000100u;
}
void IngressInterfaceErrors::clear_if_in_fifo_errors() {
  if_in_fifo_errors_ = GOOGLE_ULONGLONG(0);
  clear_has_if_in_fifo_errors();
}
 ::google::protobuf::uint64 IngressInterfaceErrors::if_in_fifo_errors() const {
  // @@protoc_insertion_point(field_get:IngressInterfaceErrors.if_in_fifo_errors)
  return if_in_fifo_errors_;
}
 void IngressInterfaceErrors::set_if_in_fifo_errors(::google::protobuf::uint64 value) {
  set_has_if_in_fifo_errors();
  if_in_fifo_errors_ = value;
  // @@protoc_insertion_point(field_set:IngressInterfaceErrors.if_in_fifo_errors)
}

// optional uint64 if_in_resource_errors = 10;
bool IngressInterfaceErrors::has_if_in_resource_errors() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void IngressInterfaceErrors::set_has_if_in_resource_errors() {
  _has_bits_[0] |= 0x00000200u;
}
void IngressInterfaceErrors::clear_has_if_in_resource_errors() {
  _has_bits_[0] &= ~0x00000200u;
}
void IngressInterfaceErrors::clear_if_in_resource_errors() {
  if_in_resource_errors_ = GOOGLE_ULONGLONG(0);
  clear_has_if_in_resource_errors();
}
 ::google::protobuf::uint64 IngressInterfaceErrors::if_in_resource_errors() const {
  // @@protoc_insertion_point(field_get:IngressInterfaceErrors.if_in_resource_errors)
  return if_in_resource_errors_;
}
 void IngressInterfaceErrors::set_if_in_resource_errors(::google::protobuf::uint64 value) {
  set_has_if_in_resource_errors();
  if_in_resource_errors_ = value;
  // @@protoc_insertion_point(field_set:IngressInterfaceErrors.if_in_resource_errors)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int QueueStats::kQueueNumberFieldNumber;
const int QueueStats::kPacketsFieldNumber;
const int QueueStats::kBytesFieldNumber;
const int QueueStats::kTailDropPacketsFieldNumber;
const int QueueStats::kRlDropPacketsFieldNumber;
const int QueueStats::kRlDropBytesFieldNumber;
const int QueueStats::kRedDropPacketsFieldNumber;
const int QueueStats::kRedDropBytesFieldNumber;
const int QueueStats::kAvgBufferOccupancyFieldNumber;
const int QueueStats::kCurBufferOccupancyFieldNumber;
const int QueueStats::kPeakBufferOccupancyFieldNumber;
const int QueueStats::kAllocatedBufferSizeFieldNumber;
#endif  // !_MSC_VER

QueueStats::QueueStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueueStats)
}

void QueueStats::InitAsDefaultInstance() {
}

QueueStats::QueueStats(const QueueStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:QueueStats)
}

void QueueStats::SharedCtor() {
  _cached_size_ = 0;
  queue_number_ = 0u;
  packets_ = GOOGLE_ULONGLONG(0);
  bytes_ = GOOGLE_ULONGLONG(0);
  tail_drop_packets_ = GOOGLE_ULONGLONG(0);
  rl_drop_packets_ = GOOGLE_ULONGLONG(0);
  rl_drop_bytes_ = GOOGLE_ULONGLONG(0);
  red_drop_packets_ = GOOGLE_ULONGLONG(0);
  red_drop_bytes_ = GOOGLE_ULONGLONG(0);
  avg_buffer_occupancy_ = GOOGLE_ULONGLONG(0);
  cur_buffer_occupancy_ = GOOGLE_ULONGLONG(0);
  peak_buffer_occupancy_ = GOOGLE_ULONGLONG(0);
  allocated_buffer_size_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

QueueStats::~QueueStats() {
  // @@protoc_insertion_point(destructor:QueueStats)
  SharedDtor();
}

void QueueStats::SharedDtor() {
  if (this != default_instance_) {
  }
}

void QueueStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueueStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueueStats_descriptor_;
}

const QueueStats& QueueStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_port_2eproto();
  return *default_instance_;
}

QueueStats* QueueStats::default_instance_ = NULL;

QueueStats* QueueStats::New(::google::protobuf::Arena* arena) const {
  QueueStats* n = new QueueStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueueStats::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<QueueStats*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(packets_, red_drop_bytes_);
    queue_number_ = 0u;
  }
  ZR_(avg_buffer_occupancy_, allocated_buffer_size_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool QueueStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:QueueStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 queue_number = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &queue_number_)));
          set_has_queue_number();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_packets;
        break;
      }

      // optional uint64 packets = 2;
      case 2: {
        if (tag == 16) {
         parse_packets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &packets_)));
          set_has_packets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_bytes;
        break;
      }

      // optional uint64 bytes = 3;
      case 3: {
        if (tag == 24) {
         parse_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_)));
          set_has_bytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_tail_drop_packets;
        break;
      }

      // optional uint64 tail_drop_packets = 4;
      case 4: {
        if (tag == 32) {
         parse_tail_drop_packets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tail_drop_packets_)));
          set_has_tail_drop_packets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_rl_drop_packets;
        break;
      }

      // optional uint64 rl_drop_packets = 5;
      case 5: {
        if (tag == 40) {
         parse_rl_drop_packets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rl_drop_packets_)));
          set_has_rl_drop_packets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_rl_drop_bytes;
        break;
      }

      // optional uint64 rl_drop_bytes = 6;
      case 6: {
        if (tag == 48) {
         parse_rl_drop_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rl_drop_bytes_)));
          set_has_rl_drop_bytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_red_drop_packets;
        break;
      }

      // optional uint64 red_drop_packets = 7;
      case 7: {
        if (tag == 56) {
         parse_red_drop_packets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &red_drop_packets_)));
          set_has_red_drop_packets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_red_drop_bytes;
        break;
      }

      // optional uint64 red_drop_bytes = 8;
      case 8: {
        if (tag == 64) {
         parse_red_drop_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &red_drop_bytes_)));
          set_has_red_drop_bytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_avg_buffer_occupancy;
        break;
      }

      // optional uint64 avg_buffer_occupancy = 9;
      case 9: {
        if (tag == 72) {
         parse_avg_buffer_occupancy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avg_buffer_occupancy_)));
          set_has_avg_buffer_occupancy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_cur_buffer_occupancy;
        break;
      }

      // optional uint64 cur_buffer_occupancy = 10;
      case 10: {
        if (tag == 80) {
         parse_cur_buffer_occupancy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cur_buffer_occupancy_)));
          set_has_cur_buffer_occupancy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_peak_buffer_occupancy;
        break;
      }

      // optional uint64 peak_buffer_occupancy = 11;
      case 11: {
        if (tag == 88) {
         parse_peak_buffer_occupancy:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &peak_buffer_occupancy_)));
          set_has_peak_buffer_occupancy();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_allocated_buffer_size;
        break;
      }

      // optional uint64 allocated_buffer_size = 12;
      case 12: {
        if (tag == 96) {
         parse_allocated_buffer_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &allocated_buffer_size_)));
          set_has_allocated_buffer_size();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:QueueStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:QueueStats)
  return false;
#undef DO_
}

void QueueStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:QueueStats)
  // optional uint32 queue_number = 1;
  if (has_queue_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->queue_number(), output);
  }

  // optional uint64 packets = 2;
  if (has_packets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->packets(), output);
  }

  // optional uint64 bytes = 3;
  if (has_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->bytes(), output);
  }

  // optional uint64 tail_drop_packets = 4;
  if (has_tail_drop_packets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->tail_drop_packets(), output);
  }

  // optional uint64 rl_drop_packets = 5;
  if (has_rl_drop_packets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->rl_drop_packets(), output);
  }

  // optional uint64 rl_drop_bytes = 6;
  if (has_rl_drop_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->rl_drop_bytes(), output);
  }

  // optional uint64 red_drop_packets = 7;
  if (has_red_drop_packets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->red_drop_packets(), output);
  }

  // optional uint64 red_drop_bytes = 8;
  if (has_red_drop_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->red_drop_bytes(), output);
  }

  // optional uint64 avg_buffer_occupancy = 9;
  if (has_avg_buffer_occupancy()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->avg_buffer_occupancy(), output);
  }

  // optional uint64 cur_buffer_occupancy = 10;
  if (has_cur_buffer_occupancy()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->cur_buffer_occupancy(), output);
  }

  // optional uint64 peak_buffer_occupancy = 11;
  if (has_peak_buffer_occupancy()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->peak_buffer_occupancy(), output);
  }

  // optional uint64 allocated_buffer_size = 12;
  if (has_allocated_buffer_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->allocated_buffer_size(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:QueueStats)
}

::google::protobuf::uint8* QueueStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:QueueStats)
  // optional uint32 queue_number = 1;
  if (has_queue_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->queue_number(), target);
  }

  // optional uint64 packets = 2;
  if (has_packets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->packets(), target);
  }

  // optional uint64 bytes = 3;
  if (has_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->bytes(), target);
  }

  // optional uint64 tail_drop_packets = 4;
  if (has_tail_drop_packets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->tail_drop_packets(), target);
  }

  // optional uint64 rl_drop_packets = 5;
  if (has_rl_drop_packets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->rl_drop_packets(), target);
  }

  // optional uint64 rl_drop_bytes = 6;
  if (has_rl_drop_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->rl_drop_bytes(), target);
  }

  // optional uint64 red_drop_packets = 7;
  if (has_red_drop_packets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->red_drop_packets(), target);
  }

  // optional uint64 red_drop_bytes = 8;
  if (has_red_drop_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->red_drop_bytes(), target);
  }

  // optional uint64 avg_buffer_occupancy = 9;
  if (has_avg_buffer_occupancy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->avg_buffer_occupancy(), target);
  }

  // optional uint64 cur_buffer_occupancy = 10;
  if (has_cur_buffer_occupancy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->cur_buffer_occupancy(), target);
  }

  // optional uint64 peak_buffer_occupancy = 11;
  if (has_peak_buffer_occupancy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->peak_buffer_occupancy(), target);
  }

  // optional uint64 allocated_buffer_size = 12;
  if (has_allocated_buffer_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(12, this->allocated_buffer_size(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueueStats)
  return target;
}

int QueueStats::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 queue_number = 1;
    if (has_queue_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->queue_number());
    }

    // optional uint64 packets = 2;
    if (has_packets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->packets());
    }

    // optional uint64 bytes = 3;
    if (has_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes());
    }

    // optional uint64 tail_drop_packets = 4;
    if (has_tail_drop_packets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->tail_drop_packets());
    }

    // optional uint64 rl_drop_packets = 5;
    if (has_rl_drop_packets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rl_drop_packets());
    }

    // optional uint64 rl_drop_bytes = 6;
    if (has_rl_drop_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->rl_drop_bytes());
    }

    // optional uint64 red_drop_packets = 7;
    if (has_red_drop_packets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->red_drop_packets());
    }

    // optional uint64 red_drop_bytes = 8;
    if (has_red_drop_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->red_drop_bytes());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional uint64 avg_buffer_occupancy = 9;
    if (has_avg_buffer_occupancy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->avg_buffer_occupancy());
    }

    // optional uint64 cur_buffer_occupancy = 10;
    if (has_cur_buffer_occupancy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->cur_buffer_occupancy());
    }

    // optional uint64 peak_buffer_occupancy = 11;
    if (has_peak_buffer_occupancy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->peak_buffer_occupancy());
    }

    // optional uint64 allocated_buffer_size = 12;
    if (has_allocated_buffer_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->allocated_buffer_size());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueueStats::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QueueStats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const QueueStats>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void QueueStats::MergeFrom(const QueueStats& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_queue_number()) {
      set_queue_number(from.queue_number());
    }
    if (from.has_packets()) {
      set_packets(from.packets());
    }
    if (from.has_bytes()) {
      set_bytes(from.bytes());
    }
    if (from.has_tail_drop_packets()) {
      set_tail_drop_packets(from.tail_drop_packets());
    }
    if (from.has_rl_drop_packets()) {
      set_rl_drop_packets(from.rl_drop_packets());
    }
    if (from.has_rl_drop_bytes()) {
      set_rl_drop_bytes(from.rl_drop_bytes());
    }
    if (from.has_red_drop_packets()) {
      set_red_drop_packets(from.red_drop_packets());
    }
    if (from.has_red_drop_bytes()) {
      set_red_drop_bytes(from.red_drop_bytes());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_avg_buffer_occupancy()) {
      set_avg_buffer_occupancy(from.avg_buffer_occupancy());
    }
    if (from.has_cur_buffer_occupancy()) {
      set_cur_buffer_occupancy(from.cur_buffer_occupancy());
    }
    if (from.has_peak_buffer_occupancy()) {
      set_peak_buffer_occupancy(from.peak_buffer_occupancy());
    }
    if (from.has_allocated_buffer_size()) {
      set_allocated_buffer_size(from.allocated_buffer_size());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void QueueStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueueStats::CopyFrom(const QueueStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueueStats::IsInitialized() const {

  return true;
}

void QueueStats::Swap(QueueStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueueStats::InternalSwap(QueueStats* other) {
  std::swap(queue_number_, other->queue_number_);
  std::swap(packets_, other->packets_);
  std::swap(bytes_, other->bytes_);
  std::swap(tail_drop_packets_, other->tail_drop_packets_);
  std::swap(rl_drop_packets_, other->rl_drop_packets_);
  std::swap(rl_drop_bytes_, other->rl_drop_bytes_);
  std::swap(red_drop_packets_, other->red_drop_packets_);
  std::swap(red_drop_bytes_, other->red_drop_bytes_);
  std::swap(avg_buffer_occupancy_, other->avg_buffer_occupancy_);
  std::swap(cur_buffer_occupancy_, other->cur_buffer_occupancy_);
  std::swap(peak_buffer_occupancy_, other->peak_buffer_occupancy_);
  std::swap(allocated_buffer_size_, other->allocated_buffer_size_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueueStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueueStats_descriptor_;
  metadata.reflection = QueueStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueueStats

// optional uint32 queue_number = 1;
bool QueueStats::has_queue_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void QueueStats::set_has_queue_number() {
  _has_bits_[0] |= 0x00000001u;
}
void QueueStats::clear_has_queue_number() {
  _has_bits_[0] &= ~0x00000001u;
}
void QueueStats::clear_queue_number() {
  queue_number_ = 0u;
  clear_has_queue_number();
}
 ::google::protobuf::uint32 QueueStats::queue_number() const {
  // @@protoc_insertion_point(field_get:QueueStats.queue_number)
  return queue_number_;
}
 void QueueStats::set_queue_number(::google::protobuf::uint32 value) {
  set_has_queue_number();
  queue_number_ = value;
  // @@protoc_insertion_point(field_set:QueueStats.queue_number)
}

// optional uint64 packets = 2;
bool QueueStats::has_packets() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void QueueStats::set_has_packets() {
  _has_bits_[0] |= 0x00000002u;
}
void QueueStats::clear_has_packets() {
  _has_bits_[0] &= ~0x00000002u;
}
void QueueStats::clear_packets() {
  packets_ = GOOGLE_ULONGLONG(0);
  clear_has_packets();
}
 ::google::protobuf::uint64 QueueStats::packets() const {
  // @@protoc_insertion_point(field_get:QueueStats.packets)
  return packets_;
}
 void QueueStats::set_packets(::google::protobuf::uint64 value) {
  set_has_packets();
  packets_ = value;
  // @@protoc_insertion_point(field_set:QueueStats.packets)
}

// optional uint64 bytes = 3;
bool QueueStats::has_bytes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void QueueStats::set_has_bytes() {
  _has_bits_[0] |= 0x00000004u;
}
void QueueStats::clear_has_bytes() {
  _has_bits_[0] &= ~0x00000004u;
}
void QueueStats::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes();
}
 ::google::protobuf::uint64 QueueStats::bytes() const {
  // @@protoc_insertion_point(field_get:QueueStats.bytes)
  return bytes_;
}
 void QueueStats::set_bytes(::google::protobuf::uint64 value) {
  set_has_bytes();
  bytes_ = value;
  // @@protoc_insertion_point(field_set:QueueStats.bytes)
}

// optional uint64 tail_drop_packets = 4;
bool QueueStats::has_tail_drop_packets() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void QueueStats::set_has_tail_drop_packets() {
  _has_bits_[0] |= 0x00000008u;
}
void QueueStats::clear_has_tail_drop_packets() {
  _has_bits_[0] &= ~0x00000008u;
}
void QueueStats::clear_tail_drop_packets() {
  tail_drop_packets_ = GOOGLE_ULONGLONG(0);
  clear_has_tail_drop_packets();
}
 ::google::protobuf::uint64 QueueStats::tail_drop_packets() const {
  // @@protoc_insertion_point(field_get:QueueStats.tail_drop_packets)
  return tail_drop_packets_;
}
 void QueueStats::set_tail_drop_packets(::google::protobuf::uint64 value) {
  set_has_tail_drop_packets();
  tail_drop_packets_ = value;
  // @@protoc_insertion_point(field_set:QueueStats.tail_drop_packets)
}

// optional uint64 rl_drop_packets = 5;
bool QueueStats::has_rl_drop_packets() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void QueueStats::set_has_rl_drop_packets() {
  _has_bits_[0] |= 0x00000010u;
}
void QueueStats::clear_has_rl_drop_packets() {
  _has_bits_[0] &= ~0x00000010u;
}
void QueueStats::clear_rl_drop_packets() {
  rl_drop_packets_ = GOOGLE_ULONGLONG(0);
  clear_has_rl_drop_packets();
}
 ::google::protobuf::uint64 QueueStats::rl_drop_packets() const {
  // @@protoc_insertion_point(field_get:QueueStats.rl_drop_packets)
  return rl_drop_packets_;
}
 void QueueStats::set_rl_drop_packets(::google::protobuf::uint64 value) {
  set_has_rl_drop_packets();
  rl_drop_packets_ = value;
  // @@protoc_insertion_point(field_set:QueueStats.rl_drop_packets)
}

// optional uint64 rl_drop_bytes = 6;
bool QueueStats::has_rl_drop_bytes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void QueueStats::set_has_rl_drop_bytes() {
  _has_bits_[0] |= 0x00000020u;
}
void QueueStats::clear_has_rl_drop_bytes() {
  _has_bits_[0] &= ~0x00000020u;
}
void QueueStats::clear_rl_drop_bytes() {
  rl_drop_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_rl_drop_bytes();
}
 ::google::protobuf::uint64 QueueStats::rl_drop_bytes() const {
  // @@protoc_insertion_point(field_get:QueueStats.rl_drop_bytes)
  return rl_drop_bytes_;
}
 void QueueStats::set_rl_drop_bytes(::google::protobuf::uint64 value) {
  set_has_rl_drop_bytes();
  rl_drop_bytes_ = value;
  // @@protoc_insertion_point(field_set:QueueStats.rl_drop_bytes)
}

// optional uint64 red_drop_packets = 7;
bool QueueStats::has_red_drop_packets() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void QueueStats::set_has_red_drop_packets() {
  _has_bits_[0] |= 0x00000040u;
}
void QueueStats::clear_has_red_drop_packets() {
  _has_bits_[0] &= ~0x00000040u;
}
void QueueStats::clear_red_drop_packets() {
  red_drop_packets_ = GOOGLE_ULONGLONG(0);
  clear_has_red_drop_packets();
}
 ::google::protobuf::uint64 QueueStats::red_drop_packets() const {
  // @@protoc_insertion_point(field_get:QueueStats.red_drop_packets)
  return red_drop_packets_;
}
 void QueueStats::set_red_drop_packets(::google::protobuf::uint64 value) {
  set_has_red_drop_packets();
  red_drop_packets_ = value;
  // @@protoc_insertion_point(field_set:QueueStats.red_drop_packets)
}

// optional uint64 red_drop_bytes = 8;
bool QueueStats::has_red_drop_bytes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void QueueStats::set_has_red_drop_bytes() {
  _has_bits_[0] |= 0x00000080u;
}
void QueueStats::clear_has_red_drop_bytes() {
  _has_bits_[0] &= ~0x00000080u;
}
void QueueStats::clear_red_drop_bytes() {
  red_drop_bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_red_drop_bytes();
}
 ::google::protobuf::uint64 QueueStats::red_drop_bytes() const {
  // @@protoc_insertion_point(field_get:QueueStats.red_drop_bytes)
  return red_drop_bytes_;
}
 void QueueStats::set_red_drop_bytes(::google::protobuf::uint64 value) {
  set_has_red_drop_bytes();
  red_drop_bytes_ = value;
  // @@protoc_insertion_point(field_set:QueueStats.red_drop_bytes)
}

// optional uint64 avg_buffer_occupancy = 9;
bool QueueStats::has_avg_buffer_occupancy() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void QueueStats::set_has_avg_buffer_occupancy() {
  _has_bits_[0] |= 0x00000100u;
}
void QueueStats::clear_has_avg_buffer_occupancy() {
  _has_bits_[0] &= ~0x00000100u;
}
void QueueStats::clear_avg_buffer_occupancy() {
  avg_buffer_occupancy_ = GOOGLE_ULONGLONG(0);
  clear_has_avg_buffer_occupancy();
}
 ::google::protobuf::uint64 QueueStats::avg_buffer_occupancy() const {
  // @@protoc_insertion_point(field_get:QueueStats.avg_buffer_occupancy)
  return avg_buffer_occupancy_;
}
 void QueueStats::set_avg_buffer_occupancy(::google::protobuf::uint64 value) {
  set_has_avg_buffer_occupancy();
  avg_buffer_occupancy_ = value;
  // @@protoc_insertion_point(field_set:QueueStats.avg_buffer_occupancy)
}

// optional uint64 cur_buffer_occupancy = 10;
bool QueueStats::has_cur_buffer_occupancy() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void QueueStats::set_has_cur_buffer_occupancy() {
  _has_bits_[0] |= 0x00000200u;
}
void QueueStats::clear_has_cur_buffer_occupancy() {
  _has_bits_[0] &= ~0x00000200u;
}
void QueueStats::clear_cur_buffer_occupancy() {
  cur_buffer_occupancy_ = GOOGLE_ULONGLONG(0);
  clear_has_cur_buffer_occupancy();
}
 ::google::protobuf::uint64 QueueStats::cur_buffer_occupancy() const {
  // @@protoc_insertion_point(field_get:QueueStats.cur_buffer_occupancy)
  return cur_buffer_occupancy_;
}
 void QueueStats::set_cur_buffer_occupancy(::google::protobuf::uint64 value) {
  set_has_cur_buffer_occupancy();
  cur_buffer_occupancy_ = value;
  // @@protoc_insertion_point(field_set:QueueStats.cur_buffer_occupancy)
}

// optional uint64 peak_buffer_occupancy = 11;
bool QueueStats::has_peak_buffer_occupancy() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void QueueStats::set_has_peak_buffer_occupancy() {
  _has_bits_[0] |= 0x00000400u;
}
void QueueStats::clear_has_peak_buffer_occupancy() {
  _has_bits_[0] &= ~0x00000400u;
}
void QueueStats::clear_peak_buffer_occupancy() {
  peak_buffer_occupancy_ = GOOGLE_ULONGLONG(0);
  clear_has_peak_buffer_occupancy();
}
 ::google::protobuf::uint64 QueueStats::peak_buffer_occupancy() const {
  // @@protoc_insertion_point(field_get:QueueStats.peak_buffer_occupancy)
  return peak_buffer_occupancy_;
}
 void QueueStats::set_peak_buffer_occupancy(::google::protobuf::uint64 value) {
  set_has_peak_buffer_occupancy();
  peak_buffer_occupancy_ = value;
  // @@protoc_insertion_point(field_set:QueueStats.peak_buffer_occupancy)
}

// optional uint64 allocated_buffer_size = 12;
bool QueueStats::has_allocated_buffer_size() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void QueueStats::set_has_allocated_buffer_size() {
  _has_bits_[0] |= 0x00000800u;
}
void QueueStats::clear_has_allocated_buffer_size() {
  _has_bits_[0] &= ~0x00000800u;
}
void QueueStats::clear_allocated_buffer_size() {
  allocated_buffer_size_ = GOOGLE_ULONGLONG(0);
  clear_has_allocated_buffer_size();
}
 ::google::protobuf::uint64 QueueStats::allocated_buffer_size() const {
  // @@protoc_insertion_point(field_get:QueueStats.allocated_buffer_size)
  return allocated_buffer_size_;
}
 void QueueStats::set_allocated_buffer_size(::google::protobuf::uint64 value) {
  set_has_allocated_buffer_size();
  allocated_buffer_size_ = value;
  // @@protoc_insertion_point(field_set:QueueStats.allocated_buffer_size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::JuniperNetworksSensors,
    ::google::protobuf::internal::MessageTypeTraits< ::GPort >, 11, false >
  jnpr_interface_ext(kJnprInterfaceExtFieldNumber, ::GPort::default_instance());

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
