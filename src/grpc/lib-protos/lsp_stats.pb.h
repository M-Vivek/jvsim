// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lsp_stats.proto

#ifndef PROTOBUF_lsp_5fstats_2eproto__INCLUDED
#define PROTOBUF_lsp_5fstats_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "telemetry_top.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_lsp_5fstats_2eproto();
void protobuf_AssignDesc_lsp_5fstats_2eproto();
void protobuf_ShutdownFile_lsp_5fstats_2eproto();

class LspStats;
class LspStatsRecord;

// ===================================================================

class LspStats : public ::google::protobuf::Message {
 public:
  LspStats();
  virtual ~LspStats();

  LspStats(const LspStats& from);

  inline LspStats& operator=(const LspStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LspStats& default_instance();

  void Swap(LspStats* other);

  // implements Message ----------------------------------------------

  inline LspStats* New() const { return New(NULL); }

  LspStats* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LspStats& from);
  void MergeFrom(const LspStats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LspStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .LspStatsRecord lsp_stats_records = 1;
  int lsp_stats_records_size() const;
  void clear_lsp_stats_records();
  static const int kLspStatsRecordsFieldNumber = 1;
  const ::LspStatsRecord& lsp_stats_records(int index) const;
  ::LspStatsRecord* mutable_lsp_stats_records(int index);
  ::LspStatsRecord* add_lsp_stats_records();
  ::google::protobuf::RepeatedPtrField< ::LspStatsRecord >*
      mutable_lsp_stats_records();
  const ::google::protobuf::RepeatedPtrField< ::LspStatsRecord >&
      lsp_stats_records() const;

  // @@protoc_insertion_point(class_scope:LspStats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::LspStatsRecord > lsp_stats_records_;
  friend void  protobuf_AddDesc_lsp_5fstats_2eproto();
  friend void protobuf_AssignDesc_lsp_5fstats_2eproto();
  friend void protobuf_ShutdownFile_lsp_5fstats_2eproto();

  void InitAsDefaultInstance();
  static LspStats* default_instance_;
};
// -------------------------------------------------------------------

class LspStatsRecord : public ::google::protobuf::Message {
 public:
  LspStatsRecord();
  virtual ~LspStatsRecord();

  LspStatsRecord(const LspStatsRecord& from);

  inline LspStatsRecord& operator=(const LspStatsRecord& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LspStatsRecord& default_instance();

  void Swap(LspStatsRecord* other);

  // implements Message ----------------------------------------------

  inline LspStatsRecord* New() const { return New(NULL); }

  LspStatsRecord* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LspStatsRecord& from);
  void MergeFrom(const LspStatsRecord& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LspStatsRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required uint32 instance_identifier = 2;
  bool has_instance_identifier() const;
  void clear_instance_identifier();
  static const int kInstanceIdentifierFieldNumber = 2;
  ::google::protobuf::uint32 instance_identifier() const;
  void set_instance_identifier(::google::protobuf::uint32 value);

  // required string counter_name = 3;
  bool has_counter_name() const;
  void clear_counter_name();
  static const int kCounterNameFieldNumber = 3;
  const ::std::string& counter_name() const;
  void set_counter_name(const ::std::string& value);
  void set_counter_name(const char* value);
  void set_counter_name(const char* value, size_t size);
  ::std::string* mutable_counter_name();
  ::std::string* release_counter_name();
  void set_allocated_counter_name(::std::string* counter_name);

  // optional uint64 packets = 4;
  bool has_packets() const;
  void clear_packets();
  static const int kPacketsFieldNumber = 4;
  ::google::protobuf::uint64 packets() const;
  void set_packets(::google::protobuf::uint64 value);

  // optional uint64 bytes = 5;
  bool has_bytes() const;
  void clear_bytes();
  static const int kBytesFieldNumber = 5;
  ::google::protobuf::uint64 bytes() const;
  void set_bytes(::google::protobuf::uint64 value);

  // optional uint64 packet_rate = 6;
  bool has_packet_rate() const;
  void clear_packet_rate();
  static const int kPacketRateFieldNumber = 6;
  ::google::protobuf::uint64 packet_rate() const;
  void set_packet_rate(::google::protobuf::uint64 value);

  // optional uint64 byte_rate = 7;
  bool has_byte_rate() const;
  void clear_byte_rate();
  static const int kByteRateFieldNumber = 7;
  ::google::protobuf::uint64 byte_rate() const;
  void set_byte_rate(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:LspStatsRecord)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_instance_identifier();
  inline void clear_has_instance_identifier();
  inline void set_has_counter_name();
  inline void clear_has_counter_name();
  inline void set_has_packets();
  inline void clear_has_packets();
  inline void set_has_bytes();
  inline void clear_has_bytes();
  inline void set_has_packet_rate();
  inline void clear_has_packet_rate();
  inline void set_has_byte_rate();
  inline void clear_has_byte_rate();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr counter_name_;
  ::google::protobuf::uint64 packets_;
  ::google::protobuf::uint64 bytes_;
  ::google::protobuf::uint64 packet_rate_;
  ::google::protobuf::uint64 byte_rate_;
  ::google::protobuf::uint32 instance_identifier_;
  friend void  protobuf_AddDesc_lsp_5fstats_2eproto();
  friend void protobuf_AssignDesc_lsp_5fstats_2eproto();
  friend void protobuf_ShutdownFile_lsp_5fstats_2eproto();

  void InitAsDefaultInstance();
  static LspStatsRecord* default_instance_;
};
// ===================================================================

static const int kJnprLspStatisticsExtFieldNumber = 5;
extern ::google::protobuf::internal::ExtensionIdentifier< ::JuniperNetworksSensors,
    ::google::protobuf::internal::MessageTypeTraits< ::LspStats >, 11, false >
  jnpr_lsp_statistics_ext;

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LspStats

// repeated .LspStatsRecord lsp_stats_records = 1;
inline int LspStats::lsp_stats_records_size() const {
  return lsp_stats_records_.size();
}
inline void LspStats::clear_lsp_stats_records() {
  lsp_stats_records_.Clear();
}
inline const ::LspStatsRecord& LspStats::lsp_stats_records(int index) const {
  // @@protoc_insertion_point(field_get:LspStats.lsp_stats_records)
  return lsp_stats_records_.Get(index);
}
inline ::LspStatsRecord* LspStats::mutable_lsp_stats_records(int index) {
  // @@protoc_insertion_point(field_mutable:LspStats.lsp_stats_records)
  return lsp_stats_records_.Mutable(index);
}
inline ::LspStatsRecord* LspStats::add_lsp_stats_records() {
  // @@protoc_insertion_point(field_add:LspStats.lsp_stats_records)
  return lsp_stats_records_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::LspStatsRecord >*
LspStats::mutable_lsp_stats_records() {
  // @@protoc_insertion_point(field_mutable_list:LspStats.lsp_stats_records)
  return &lsp_stats_records_;
}
inline const ::google::protobuf::RepeatedPtrField< ::LspStatsRecord >&
LspStats::lsp_stats_records() const {
  // @@protoc_insertion_point(field_list:LspStats.lsp_stats_records)
  return lsp_stats_records_;
}

// -------------------------------------------------------------------

// LspStatsRecord

// required string name = 1;
inline bool LspStatsRecord::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LspStatsRecord::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LspStatsRecord::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LspStatsRecord::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& LspStatsRecord::name() const {
  // @@protoc_insertion_point(field_get:LspStatsRecord.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LspStatsRecord::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LspStatsRecord.name)
}
inline void LspStatsRecord::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LspStatsRecord.name)
}
inline void LspStatsRecord::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LspStatsRecord.name)
}
inline ::std::string* LspStatsRecord::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:LspStatsRecord.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LspStatsRecord::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LspStatsRecord::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:LspStatsRecord.name)
}

// required uint32 instance_identifier = 2;
inline bool LspStatsRecord::has_instance_identifier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LspStatsRecord::set_has_instance_identifier() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LspStatsRecord::clear_has_instance_identifier() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LspStatsRecord::clear_instance_identifier() {
  instance_identifier_ = 0u;
  clear_has_instance_identifier();
}
inline ::google::protobuf::uint32 LspStatsRecord::instance_identifier() const {
  // @@protoc_insertion_point(field_get:LspStatsRecord.instance_identifier)
  return instance_identifier_;
}
inline void LspStatsRecord::set_instance_identifier(::google::protobuf::uint32 value) {
  set_has_instance_identifier();
  instance_identifier_ = value;
  // @@protoc_insertion_point(field_set:LspStatsRecord.instance_identifier)
}

// required string counter_name = 3;
inline bool LspStatsRecord::has_counter_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LspStatsRecord::set_has_counter_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LspStatsRecord::clear_has_counter_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LspStatsRecord::clear_counter_name() {
  counter_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_counter_name();
}
inline const ::std::string& LspStatsRecord::counter_name() const {
  // @@protoc_insertion_point(field_get:LspStatsRecord.counter_name)
  return counter_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LspStatsRecord::set_counter_name(const ::std::string& value) {
  set_has_counter_name();
  counter_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LspStatsRecord.counter_name)
}
inline void LspStatsRecord::set_counter_name(const char* value) {
  set_has_counter_name();
  counter_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LspStatsRecord.counter_name)
}
inline void LspStatsRecord::set_counter_name(const char* value, size_t size) {
  set_has_counter_name();
  counter_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LspStatsRecord.counter_name)
}
inline ::std::string* LspStatsRecord::mutable_counter_name() {
  set_has_counter_name();
  // @@protoc_insertion_point(field_mutable:LspStatsRecord.counter_name)
  return counter_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LspStatsRecord::release_counter_name() {
  clear_has_counter_name();
  return counter_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LspStatsRecord::set_allocated_counter_name(::std::string* counter_name) {
  if (counter_name != NULL) {
    set_has_counter_name();
  } else {
    clear_has_counter_name();
  }
  counter_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), counter_name);
  // @@protoc_insertion_point(field_set_allocated:LspStatsRecord.counter_name)
}

// optional uint64 packets = 4;
inline bool LspStatsRecord::has_packets() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LspStatsRecord::set_has_packets() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LspStatsRecord::clear_has_packets() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LspStatsRecord::clear_packets() {
  packets_ = GOOGLE_ULONGLONG(0);
  clear_has_packets();
}
inline ::google::protobuf::uint64 LspStatsRecord::packets() const {
  // @@protoc_insertion_point(field_get:LspStatsRecord.packets)
  return packets_;
}
inline void LspStatsRecord::set_packets(::google::protobuf::uint64 value) {
  set_has_packets();
  packets_ = value;
  // @@protoc_insertion_point(field_set:LspStatsRecord.packets)
}

// optional uint64 bytes = 5;
inline bool LspStatsRecord::has_bytes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LspStatsRecord::set_has_bytes() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LspStatsRecord::clear_has_bytes() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LspStatsRecord::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes();
}
inline ::google::protobuf::uint64 LspStatsRecord::bytes() const {
  // @@protoc_insertion_point(field_get:LspStatsRecord.bytes)
  return bytes_;
}
inline void LspStatsRecord::set_bytes(::google::protobuf::uint64 value) {
  set_has_bytes();
  bytes_ = value;
  // @@protoc_insertion_point(field_set:LspStatsRecord.bytes)
}

// optional uint64 packet_rate = 6;
inline bool LspStatsRecord::has_packet_rate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LspStatsRecord::set_has_packet_rate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LspStatsRecord::clear_has_packet_rate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LspStatsRecord::clear_packet_rate() {
  packet_rate_ = GOOGLE_ULONGLONG(0);
  clear_has_packet_rate();
}
inline ::google::protobuf::uint64 LspStatsRecord::packet_rate() const {
  // @@protoc_insertion_point(field_get:LspStatsRecord.packet_rate)
  return packet_rate_;
}
inline void LspStatsRecord::set_packet_rate(::google::protobuf::uint64 value) {
  set_has_packet_rate();
  packet_rate_ = value;
  // @@protoc_insertion_point(field_set:LspStatsRecord.packet_rate)
}

// optional uint64 byte_rate = 7;
inline bool LspStatsRecord::has_byte_rate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LspStatsRecord::set_has_byte_rate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LspStatsRecord::clear_has_byte_rate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LspStatsRecord::clear_byte_rate() {
  byte_rate_ = GOOGLE_ULONGLONG(0);
  clear_has_byte_rate();
}
inline ::google::protobuf::uint64 LspStatsRecord::byte_rate() const {
  // @@protoc_insertion_point(field_get:LspStatsRecord.byte_rate)
  return byte_rate_;
}
inline void LspStatsRecord::set_byte_rate(::google::protobuf::uint64 value) {
  set_has_byte_rate();
  byte_rate_ = value;
  // @@protoc_insertion_point(field_set:LspStatsRecord.byte_rate)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_lsp_5fstats_2eproto__INCLUDED
