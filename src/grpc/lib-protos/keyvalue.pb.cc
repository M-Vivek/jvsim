// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: keyvalue.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "keyvalue.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* keyvalue_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  keyvalue_reflection_ = NULL;
const ::google::protobuf::Descriptor* kvresponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  kvresponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_keyvalue_2eproto() {
  protobuf_AddDesc_keyvalue_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "keyvalue.proto");
  GOOGLE_CHECK(file != NULL);
  keyvalue_descriptor_ = file->message_type(0);
  static const int keyvalue_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(keyvalue, key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(keyvalue, int32_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(keyvalue, uint64_val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(keyvalue, string_val_),
  };
  keyvalue_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      keyvalue_descriptor_,
      keyvalue::default_instance_,
      keyvalue_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(keyvalue, _has_bits_[0]),
      -1,
      -1,
      sizeof(keyvalue),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(keyvalue, _internal_metadata_),
      -1);
  kvresponse_descriptor_ = file->message_type(1);
  static const int kvresponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(kvresponse, kvpairs_),
  };
  kvresponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      kvresponse_descriptor_,
      kvresponse::default_instance_,
      kvresponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(kvresponse, _has_bits_[0]),
      -1,
      -1,
      sizeof(kvresponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(kvresponse, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_keyvalue_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      keyvalue_descriptor_, &keyvalue::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      kvresponse_descriptor_, &kvresponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_keyvalue_2eproto() {
  delete keyvalue::default_instance_;
  delete keyvalue_reflection_;
  delete kvresponse::default_instance_;
  delete kvresponse_reflection_;
}

void protobuf_AddDesc_keyvalue_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_telemetry_5ftop_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016keyvalue.proto\032\023telemetry_top.proto\"R\n"
    "\010keyvalue\022\013\n\003key\030\001 \001(\t\022\021\n\tint32_val\030\002 \001("
    "\005\022\022\n\nuint64_val\030\003 \001(\004\022\022\n\nstring_val\030\004 \001("
    "\t\"(\n\nkvresponse\022\032\n\007kvpairs\030\001 \003(\0132\t.keyva"
    "lue:<\n\rkvresponseExt\022\027.JuniperNetworksSe"
    "nsors\030\320\017 \001(\0132\013.kvresponse", 225);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "keyvalue.proto", &protobuf_RegisterTypes);
  keyvalue::default_instance_ = new keyvalue();
  kvresponse::default_instance_ = new kvresponse();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::JuniperNetworksSensors::default_instance(),
    2000, 11, false, false,
    &::kvresponse::default_instance());
  keyvalue::default_instance_->InitAsDefaultInstance();
  kvresponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_keyvalue_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_keyvalue_2eproto {
  StaticDescriptorInitializer_keyvalue_2eproto() {
    protobuf_AddDesc_keyvalue_2eproto();
  }
} static_descriptor_initializer_keyvalue_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int keyvalue::kKeyFieldNumber;
const int keyvalue::kInt32ValFieldNumber;
const int keyvalue::kUint64ValFieldNumber;
const int keyvalue::kStringValFieldNumber;
#endif  // !_MSC_VER

keyvalue::keyvalue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:keyvalue)
}

void keyvalue::InitAsDefaultInstance() {
}

keyvalue::keyvalue(const keyvalue& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:keyvalue)
}

void keyvalue::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  int32_val_ = 0;
  uint64_val_ = GOOGLE_ULONGLONG(0);
  string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

keyvalue::~keyvalue() {
  // @@protoc_insertion_point(destructor:keyvalue)
  SharedDtor();
}

void keyvalue::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  string_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void keyvalue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* keyvalue::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return keyvalue_descriptor_;
}

const keyvalue& keyvalue::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_keyvalue_2eproto();
  return *default_instance_;
}

keyvalue* keyvalue::default_instance_ = NULL;

keyvalue* keyvalue::New(::google::protobuf::Arena* arena) const {
  keyvalue* n = new keyvalue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void keyvalue::Clear() {
  if (_has_bits_[0 / 32] & 15u) {
    if (has_key()) {
      key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    int32_val_ = 0;
    uint64_val_ = GOOGLE_ULONGLONG(0);
    if (has_string_val()) {
      string_val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool keyvalue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:keyvalue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "keyvalue.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_int32_val;
        break;
      }

      // optional int32 int32_val = 2;
      case 2: {
        if (tag == 16) {
         parse_int32_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int32_val_)));
          set_has_int32_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_uint64_val;
        break;
      }

      // optional uint64 uint64_val = 3;
      case 3: {
        if (tag == 24) {
         parse_uint64_val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uint64_val_)));
          set_has_uint64_val();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_string_val;
        break;
      }

      // optional string string_val = 4;
      case 4: {
        if (tag == 34) {
         parse_string_val:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_val()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->string_val().data(), this->string_val().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "keyvalue.string_val");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:keyvalue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:keyvalue)
  return false;
#undef DO_
}

void keyvalue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:keyvalue)
  // optional string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "keyvalue.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional int32 int32_val = 2;
  if (has_int32_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->int32_val(), output);
  }

  // optional uint64 uint64_val = 3;
  if (has_uint64_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->uint64_val(), output);
  }

  // optional string string_val = 4;
  if (has_string_val()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_val().data(), this->string_val().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "keyvalue.string_val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->string_val(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:keyvalue)
}

::google::protobuf::uint8* keyvalue::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:keyvalue)
  // optional string key = 1;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "keyvalue.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional int32 int32_val = 2;
  if (has_int32_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->int32_val(), target);
  }

  // optional uint64 uint64_val = 3;
  if (has_uint64_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->uint64_val(), target);
  }

  // optional string string_val = 4;
  if (has_string_val()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->string_val().data(), this->string_val().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "keyvalue.string_val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->string_val(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:keyvalue)
  return target;
}

int keyvalue::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional int32 int32_val = 2;
    if (has_int32_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int32_val());
    }

    // optional uint64 uint64_val = 3;
    if (has_uint64_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uint64_val());
    }

    // optional string string_val = 4;
    if (has_string_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_val());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void keyvalue::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const keyvalue* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const keyvalue>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void keyvalue::MergeFrom(const keyvalue& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (from.has_int32_val()) {
      set_int32_val(from.int32_val());
    }
    if (from.has_uint64_val()) {
      set_uint64_val(from.uint64_val());
    }
    if (from.has_string_val()) {
      set_has_string_val();
      string_val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_val_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void keyvalue::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void keyvalue::CopyFrom(const keyvalue& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool keyvalue::IsInitialized() const {

  return true;
}

void keyvalue::Swap(keyvalue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void keyvalue::InternalSwap(keyvalue* other) {
  key_.Swap(&other->key_);
  std::swap(int32_val_, other->int32_val_);
  std::swap(uint64_val_, other->uint64_val_);
  string_val_.Swap(&other->string_val_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata keyvalue::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = keyvalue_descriptor_;
  metadata.reflection = keyvalue_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// keyvalue

// optional string key = 1;
bool keyvalue::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void keyvalue::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void keyvalue::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void keyvalue::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
 const ::std::string& keyvalue::key() const {
  // @@protoc_insertion_point(field_get:keyvalue.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void keyvalue::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:keyvalue.key)
}
 void keyvalue::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:keyvalue.key)
}
 void keyvalue::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:keyvalue.key)
}
 ::std::string* keyvalue::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:keyvalue.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* keyvalue::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void keyvalue::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:keyvalue.key)
}

// optional int32 int32_val = 2;
bool keyvalue::has_int32_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void keyvalue::set_has_int32_val() {
  _has_bits_[0] |= 0x00000002u;
}
void keyvalue::clear_has_int32_val() {
  _has_bits_[0] &= ~0x00000002u;
}
void keyvalue::clear_int32_val() {
  int32_val_ = 0;
  clear_has_int32_val();
}
 ::google::protobuf::int32 keyvalue::int32_val() const {
  // @@protoc_insertion_point(field_get:keyvalue.int32_val)
  return int32_val_;
}
 void keyvalue::set_int32_val(::google::protobuf::int32 value) {
  set_has_int32_val();
  int32_val_ = value;
  // @@protoc_insertion_point(field_set:keyvalue.int32_val)
}

// optional uint64 uint64_val = 3;
bool keyvalue::has_uint64_val() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void keyvalue::set_has_uint64_val() {
  _has_bits_[0] |= 0x00000004u;
}
void keyvalue::clear_has_uint64_val() {
  _has_bits_[0] &= ~0x00000004u;
}
void keyvalue::clear_uint64_val() {
  uint64_val_ = GOOGLE_ULONGLONG(0);
  clear_has_uint64_val();
}
 ::google::protobuf::uint64 keyvalue::uint64_val() const {
  // @@protoc_insertion_point(field_get:keyvalue.uint64_val)
  return uint64_val_;
}
 void keyvalue::set_uint64_val(::google::protobuf::uint64 value) {
  set_has_uint64_val();
  uint64_val_ = value;
  // @@protoc_insertion_point(field_set:keyvalue.uint64_val)
}

// optional string string_val = 4;
bool keyvalue::has_string_val() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void keyvalue::set_has_string_val() {
  _has_bits_[0] |= 0x00000008u;
}
void keyvalue::clear_has_string_val() {
  _has_bits_[0] &= ~0x00000008u;
}
void keyvalue::clear_string_val() {
  string_val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string_val();
}
 const ::std::string& keyvalue::string_val() const {
  // @@protoc_insertion_point(field_get:keyvalue.string_val)
  return string_val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void keyvalue::set_string_val(const ::std::string& value) {
  set_has_string_val();
  string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:keyvalue.string_val)
}
 void keyvalue::set_string_val(const char* value) {
  set_has_string_val();
  string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:keyvalue.string_val)
}
 void keyvalue::set_string_val(const char* value, size_t size) {
  set_has_string_val();
  string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:keyvalue.string_val)
}
 ::std::string* keyvalue::mutable_string_val() {
  set_has_string_val();
  // @@protoc_insertion_point(field_mutable:keyvalue.string_val)
  return string_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* keyvalue::release_string_val() {
  clear_has_string_val();
  return string_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void keyvalue::set_allocated_string_val(::std::string* string_val) {
  if (string_val != NULL) {
    set_has_string_val();
  } else {
    clear_has_string_val();
  }
  string_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_val);
  // @@protoc_insertion_point(field_set_allocated:keyvalue.string_val)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int kvresponse::kKvpairsFieldNumber;
#endif  // !_MSC_VER

kvresponse::kvresponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:kvresponse)
}

void kvresponse::InitAsDefaultInstance() {
}

kvresponse::kvresponse(const kvresponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:kvresponse)
}

void kvresponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

kvresponse::~kvresponse() {
  // @@protoc_insertion_point(destructor:kvresponse)
  SharedDtor();
}

void kvresponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void kvresponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* kvresponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return kvresponse_descriptor_;
}

const kvresponse& kvresponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_keyvalue_2eproto();
  return *default_instance_;
}

kvresponse* kvresponse::default_instance_ = NULL;

kvresponse* kvresponse::New(::google::protobuf::Arena* arena) const {
  kvresponse* n = new kvresponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void kvresponse::Clear() {
  kvpairs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool kvresponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:kvresponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .keyvalue kvpairs = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_kvpairs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_kvpairs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_kvpairs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:kvresponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:kvresponse)
  return false;
#undef DO_
}

void kvresponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:kvresponse)
  // repeated .keyvalue kvpairs = 1;
  for (unsigned int i = 0, n = this->kvpairs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->kvpairs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:kvresponse)
}

::google::protobuf::uint8* kvresponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:kvresponse)
  // repeated .keyvalue kvpairs = 1;
  for (unsigned int i = 0, n = this->kvpairs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->kvpairs(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:kvresponse)
  return target;
}

int kvresponse::ByteSize() const {
  int total_size = 0;

  // repeated .keyvalue kvpairs = 1;
  total_size += 1 * this->kvpairs_size();
  for (int i = 0; i < this->kvpairs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->kvpairs(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void kvresponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const kvresponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const kvresponse>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void kvresponse::MergeFrom(const kvresponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  kvpairs_.MergeFrom(from.kvpairs_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void kvresponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void kvresponse::CopyFrom(const kvresponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool kvresponse::IsInitialized() const {

  return true;
}

void kvresponse::Swap(kvresponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void kvresponse::InternalSwap(kvresponse* other) {
  kvpairs_.UnsafeArenaSwap(&other->kvpairs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata kvresponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = kvresponse_descriptor_;
  metadata.reflection = kvresponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// kvresponse

// repeated .keyvalue kvpairs = 1;
int kvresponse::kvpairs_size() const {
  return kvpairs_.size();
}
void kvresponse::clear_kvpairs() {
  kvpairs_.Clear();
}
const ::keyvalue& kvresponse::kvpairs(int index) const {
  // @@protoc_insertion_point(field_get:kvresponse.kvpairs)
  return kvpairs_.Get(index);
}
::keyvalue* kvresponse::mutable_kvpairs(int index) {
  // @@protoc_insertion_point(field_mutable:kvresponse.kvpairs)
  return kvpairs_.Mutable(index);
}
::keyvalue* kvresponse::add_kvpairs() {
  // @@protoc_insertion_point(field_add:kvresponse.kvpairs)
  return kvpairs_.Add();
}
::google::protobuf::RepeatedPtrField< ::keyvalue >*
kvresponse::mutable_kvpairs() {
  // @@protoc_insertion_point(field_mutable_list:kvresponse.kvpairs)
  return &kvpairs_;
}
const ::google::protobuf::RepeatedPtrField< ::keyvalue >&
kvresponse::kvpairs() const {
  // @@protoc_insertion_point(field_list:kvresponse.kvpairs)
  return kvpairs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::JuniperNetworksSensors,
    ::google::protobuf::internal::MessageTypeTraits< ::kvresponse >, 11, false >
  kvresponseExt(kKvresponseExtFieldNumber, ::kvresponse::default_instance());

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
