// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lsp_stats.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "lsp_stats.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* LspStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LspStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* LspStatsRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LspStatsRecord_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_lsp_5fstats_2eproto() {
  protobuf_AddDesc_lsp_5fstats_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "lsp_stats.proto");
  GOOGLE_CHECK(file != NULL);
  LspStats_descriptor_ = file->message_type(0);
  static const int LspStats_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LspStats, lsp_stats_records_),
  };
  LspStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LspStats_descriptor_,
      LspStats::default_instance_,
      LspStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LspStats, _has_bits_[0]),
      -1,
      -1,
      sizeof(LspStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LspStats, _internal_metadata_),
      -1);
  LspStatsRecord_descriptor_ = file->message_type(1);
  static const int LspStatsRecord_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LspStatsRecord, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LspStatsRecord, instance_identifier_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LspStatsRecord, counter_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LspStatsRecord, packets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LspStatsRecord, bytes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LspStatsRecord, packet_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LspStatsRecord, byte_rate_),
  };
  LspStatsRecord_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LspStatsRecord_descriptor_,
      LspStatsRecord::default_instance_,
      LspStatsRecord_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LspStatsRecord, _has_bits_[0]),
      -1,
      -1,
      sizeof(LspStatsRecord),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LspStatsRecord, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_lsp_5fstats_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LspStats_descriptor_, &LspStats::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LspStatsRecord_descriptor_, &LspStatsRecord::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_lsp_5fstats_2eproto() {
  delete LspStats::default_instance_;
  delete LspStats_reflection_;
  delete LspStatsRecord::default_instance_;
  delete LspStatsRecord_reflection_;
}

void protobuf_AddDesc_lsp_5fstats_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_telemetry_5ftop_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017lsp_stats.proto\032\023telemetry_top.proto\"6"
    "\n\010LspStats\022*\n\021lsp_stats_records\030\001 \003(\0132\017."
    "LspStatsRecord\"\274\001\n\016LspStatsRecord\022\023\n\004nam"
    "e\030\001 \002(\tB\005\202@\002\010\001\022\"\n\023instance_identifier\030\002 "
    "\002(\rB\005\202@\002\010\001\022\033\n\014counter_name\030\003 \002(\tB\005\202@\002\010\001\022"
    "\026\n\007packets\030\004 \001(\004B\005\202@\002\030\001\022\024\n\005bytes\030\005 \001(\004B\005"
    "\202@\002\030\001\022\023\n\013packet_rate\030\006 \001(\004\022\021\n\tbyte_rate\030"
    "\007 \001(\004:C\n\027jnpr_lsp_statistics_ext\022\027.Junip"
    "erNetworksSensors\030\005 \001(\0132\t.LspStats", 354);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "lsp_stats.proto", &protobuf_RegisterTypes);
  LspStats::default_instance_ = new LspStats();
  LspStatsRecord::default_instance_ = new LspStatsRecord();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::JuniperNetworksSensors::default_instance(),
    5, 11, false, false,
    &::LspStats::default_instance());
  LspStats::default_instance_->InitAsDefaultInstance();
  LspStatsRecord::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_lsp_5fstats_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_lsp_5fstats_2eproto {
  StaticDescriptorInitializer_lsp_5fstats_2eproto() {
    protobuf_AddDesc_lsp_5fstats_2eproto();
  }
} static_descriptor_initializer_lsp_5fstats_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int LspStats::kLspStatsRecordsFieldNumber;
#endif  // !_MSC_VER

LspStats::LspStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LspStats)
}

void LspStats::InitAsDefaultInstance() {
}

LspStats::LspStats(const LspStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LspStats)
}

void LspStats::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LspStats::~LspStats() {
  // @@protoc_insertion_point(destructor:LspStats)
  SharedDtor();
}

void LspStats::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LspStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LspStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LspStats_descriptor_;
}

const LspStats& LspStats::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lsp_5fstats_2eproto();
  return *default_instance_;
}

LspStats* LspStats::default_instance_ = NULL;

LspStats* LspStats::New(::google::protobuf::Arena* arena) const {
  LspStats* n = new LspStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LspStats::Clear() {
  lsp_stats_records_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LspStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LspStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .LspStatsRecord lsp_stats_records = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_lsp_stats_records:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_lsp_stats_records()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_lsp_stats_records;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LspStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LspStats)
  return false;
#undef DO_
}

void LspStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LspStats)
  // repeated .LspStatsRecord lsp_stats_records = 1;
  for (unsigned int i = 0, n = this->lsp_stats_records_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->lsp_stats_records(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LspStats)
}

::google::protobuf::uint8* LspStats::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LspStats)
  // repeated .LspStatsRecord lsp_stats_records = 1;
  for (unsigned int i = 0, n = this->lsp_stats_records_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->lsp_stats_records(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LspStats)
  return target;
}

int LspStats::ByteSize() const {
  int total_size = 0;

  // repeated .LspStatsRecord lsp_stats_records = 1;
  total_size += 1 * this->lsp_stats_records_size();
  for (int i = 0; i < this->lsp_stats_records_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lsp_stats_records(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LspStats::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LspStats* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LspStats>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LspStats::MergeFrom(const LspStats& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  lsp_stats_records_.MergeFrom(from.lsp_stats_records_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LspStats::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LspStats::CopyFrom(const LspStats& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LspStats::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->lsp_stats_records())) return false;
  return true;
}

void LspStats::Swap(LspStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LspStats::InternalSwap(LspStats* other) {
  lsp_stats_records_.UnsafeArenaSwap(&other->lsp_stats_records_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LspStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LspStats_descriptor_;
  metadata.reflection = LspStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LspStats

// repeated .LspStatsRecord lsp_stats_records = 1;
int LspStats::lsp_stats_records_size() const {
  return lsp_stats_records_.size();
}
void LspStats::clear_lsp_stats_records() {
  lsp_stats_records_.Clear();
}
const ::LspStatsRecord& LspStats::lsp_stats_records(int index) const {
  // @@protoc_insertion_point(field_get:LspStats.lsp_stats_records)
  return lsp_stats_records_.Get(index);
}
::LspStatsRecord* LspStats::mutable_lsp_stats_records(int index) {
  // @@protoc_insertion_point(field_mutable:LspStats.lsp_stats_records)
  return lsp_stats_records_.Mutable(index);
}
::LspStatsRecord* LspStats::add_lsp_stats_records() {
  // @@protoc_insertion_point(field_add:LspStats.lsp_stats_records)
  return lsp_stats_records_.Add();
}
::google::protobuf::RepeatedPtrField< ::LspStatsRecord >*
LspStats::mutable_lsp_stats_records() {
  // @@protoc_insertion_point(field_mutable_list:LspStats.lsp_stats_records)
  return &lsp_stats_records_;
}
const ::google::protobuf::RepeatedPtrField< ::LspStatsRecord >&
LspStats::lsp_stats_records() const {
  // @@protoc_insertion_point(field_list:LspStats.lsp_stats_records)
  return lsp_stats_records_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int LspStatsRecord::kNameFieldNumber;
const int LspStatsRecord::kInstanceIdentifierFieldNumber;
const int LspStatsRecord::kCounterNameFieldNumber;
const int LspStatsRecord::kPacketsFieldNumber;
const int LspStatsRecord::kBytesFieldNumber;
const int LspStatsRecord::kPacketRateFieldNumber;
const int LspStatsRecord::kByteRateFieldNumber;
#endif  // !_MSC_VER

LspStatsRecord::LspStatsRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LspStatsRecord)
}

void LspStatsRecord::InitAsDefaultInstance() {
}

LspStatsRecord::LspStatsRecord(const LspStatsRecord& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LspStatsRecord)
}

void LspStatsRecord::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instance_identifier_ = 0u;
  counter_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  packets_ = GOOGLE_ULONGLONG(0);
  bytes_ = GOOGLE_ULONGLONG(0);
  packet_rate_ = GOOGLE_ULONGLONG(0);
  byte_rate_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LspStatsRecord::~LspStatsRecord() {
  // @@protoc_insertion_point(destructor:LspStatsRecord)
  SharedDtor();
}

void LspStatsRecord::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  counter_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LspStatsRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LspStatsRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LspStatsRecord_descriptor_;
}

const LspStatsRecord& LspStatsRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_lsp_5fstats_2eproto();
  return *default_instance_;
}

LspStatsRecord* LspStatsRecord::default_instance_ = NULL;

LspStatsRecord* LspStatsRecord::New(::google::protobuf::Arena* arena) const {
  LspStatsRecord* n = new LspStatsRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LspStatsRecord::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LspStatsRecord*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(packets_, instance_identifier_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_counter_name()) {
      counter_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LspStatsRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LspStatsRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LspStatsRecord.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_instance_identifier;
        break;
      }

      // required uint32 instance_identifier = 2;
      case 2: {
        if (tag == 16) {
         parse_instance_identifier:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &instance_identifier_)));
          set_has_instance_identifier();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_counter_name;
        break;
      }

      // required string counter_name = 3;
      case 3: {
        if (tag == 26) {
         parse_counter_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_counter_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->counter_name().data(), this->counter_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LspStatsRecord.counter_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_packets;
        break;
      }

      // optional uint64 packets = 4;
      case 4: {
        if (tag == 32) {
         parse_packets:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &packets_)));
          set_has_packets();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_bytes;
        break;
      }

      // optional uint64 bytes = 5;
      case 5: {
        if (tag == 40) {
         parse_bytes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_)));
          set_has_bytes();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_packet_rate;
        break;
      }

      // optional uint64 packet_rate = 6;
      case 6: {
        if (tag == 48) {
         parse_packet_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &packet_rate_)));
          set_has_packet_rate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_byte_rate;
        break;
      }

      // optional uint64 byte_rate = 7;
      case 7: {
        if (tag == 56) {
         parse_byte_rate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &byte_rate_)));
          set_has_byte_rate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LspStatsRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LspStatsRecord)
  return false;
#undef DO_
}

void LspStatsRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LspStatsRecord)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LspStatsRecord.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required uint32 instance_identifier = 2;
  if (has_instance_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->instance_identifier(), output);
  }

  // required string counter_name = 3;
  if (has_counter_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->counter_name().data(), this->counter_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LspStatsRecord.counter_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->counter_name(), output);
  }

  // optional uint64 packets = 4;
  if (has_packets()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->packets(), output);
  }

  // optional uint64 bytes = 5;
  if (has_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->bytes(), output);
  }

  // optional uint64 packet_rate = 6;
  if (has_packet_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->packet_rate(), output);
  }

  // optional uint64 byte_rate = 7;
  if (has_byte_rate()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->byte_rate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LspStatsRecord)
}

::google::protobuf::uint8* LspStatsRecord::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LspStatsRecord)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LspStatsRecord.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint32 instance_identifier = 2;
  if (has_instance_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->instance_identifier(), target);
  }

  // required string counter_name = 3;
  if (has_counter_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->counter_name().data(), this->counter_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LspStatsRecord.counter_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->counter_name(), target);
  }

  // optional uint64 packets = 4;
  if (has_packets()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->packets(), target);
  }

  // optional uint64 bytes = 5;
  if (has_bytes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->bytes(), target);
  }

  // optional uint64 packet_rate = 6;
  if (has_packet_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->packet_rate(), target);
  }

  // optional uint64 byte_rate = 7;
  if (has_byte_rate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->byte_rate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LspStatsRecord)
  return target;
}

int LspStatsRecord::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_instance_identifier()) {
    // required uint32 instance_identifier = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->instance_identifier());
  }

  if (has_counter_name()) {
    // required string counter_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->counter_name());
  }

  return total_size;
}
int LspStatsRecord::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint32 instance_identifier = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->instance_identifier());

    // required string counter_name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->counter_name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[3 / 32] & 120u) {
    // optional uint64 packets = 4;
    if (has_packets()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->packets());
    }

    // optional uint64 bytes = 5;
    if (has_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes());
    }

    // optional uint64 packet_rate = 6;
    if (has_packet_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->packet_rate());
    }

    // optional uint64 byte_rate = 7;
    if (has_byte_rate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->byte_rate());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LspStatsRecord::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LspStatsRecord* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const LspStatsRecord>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LspStatsRecord::MergeFrom(const LspStatsRecord& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_instance_identifier()) {
      set_instance_identifier(from.instance_identifier());
    }
    if (from.has_counter_name()) {
      set_has_counter_name();
      counter_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.counter_name_);
    }
    if (from.has_packets()) {
      set_packets(from.packets());
    }
    if (from.has_bytes()) {
      set_bytes(from.bytes());
    }
    if (from.has_packet_rate()) {
      set_packet_rate(from.packet_rate());
    }
    if (from.has_byte_rate()) {
      set_byte_rate(from.byte_rate());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LspStatsRecord::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LspStatsRecord::CopyFrom(const LspStatsRecord& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LspStatsRecord::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void LspStatsRecord::Swap(LspStatsRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LspStatsRecord::InternalSwap(LspStatsRecord* other) {
  name_.Swap(&other->name_);
  std::swap(instance_identifier_, other->instance_identifier_);
  counter_name_.Swap(&other->counter_name_);
  std::swap(packets_, other->packets_);
  std::swap(bytes_, other->bytes_);
  std::swap(packet_rate_, other->packet_rate_);
  std::swap(byte_rate_, other->byte_rate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LspStatsRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LspStatsRecord_descriptor_;
  metadata.reflection = LspStatsRecord_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LspStatsRecord

// required string name = 1;
bool LspStatsRecord::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LspStatsRecord::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void LspStatsRecord::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void LspStatsRecord::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& LspStatsRecord::name() const {
  // @@protoc_insertion_point(field_get:LspStatsRecord.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LspStatsRecord::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LspStatsRecord.name)
}
 void LspStatsRecord::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LspStatsRecord.name)
}
 void LspStatsRecord::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LspStatsRecord.name)
}
 ::std::string* LspStatsRecord::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:LspStatsRecord.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LspStatsRecord::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LspStatsRecord::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:LspStatsRecord.name)
}

// required uint32 instance_identifier = 2;
bool LspStatsRecord::has_instance_identifier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LspStatsRecord::set_has_instance_identifier() {
  _has_bits_[0] |= 0x00000002u;
}
void LspStatsRecord::clear_has_instance_identifier() {
  _has_bits_[0] &= ~0x00000002u;
}
void LspStatsRecord::clear_instance_identifier() {
  instance_identifier_ = 0u;
  clear_has_instance_identifier();
}
 ::google::protobuf::uint32 LspStatsRecord::instance_identifier() const {
  // @@protoc_insertion_point(field_get:LspStatsRecord.instance_identifier)
  return instance_identifier_;
}
 void LspStatsRecord::set_instance_identifier(::google::protobuf::uint32 value) {
  set_has_instance_identifier();
  instance_identifier_ = value;
  // @@protoc_insertion_point(field_set:LspStatsRecord.instance_identifier)
}

// required string counter_name = 3;
bool LspStatsRecord::has_counter_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LspStatsRecord::set_has_counter_name() {
  _has_bits_[0] |= 0x00000004u;
}
void LspStatsRecord::clear_has_counter_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void LspStatsRecord::clear_counter_name() {
  counter_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_counter_name();
}
 const ::std::string& LspStatsRecord::counter_name() const {
  // @@protoc_insertion_point(field_get:LspStatsRecord.counter_name)
  return counter_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LspStatsRecord::set_counter_name(const ::std::string& value) {
  set_has_counter_name();
  counter_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LspStatsRecord.counter_name)
}
 void LspStatsRecord::set_counter_name(const char* value) {
  set_has_counter_name();
  counter_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LspStatsRecord.counter_name)
}
 void LspStatsRecord::set_counter_name(const char* value, size_t size) {
  set_has_counter_name();
  counter_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LspStatsRecord.counter_name)
}
 ::std::string* LspStatsRecord::mutable_counter_name() {
  set_has_counter_name();
  // @@protoc_insertion_point(field_mutable:LspStatsRecord.counter_name)
  return counter_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LspStatsRecord::release_counter_name() {
  clear_has_counter_name();
  return counter_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LspStatsRecord::set_allocated_counter_name(::std::string* counter_name) {
  if (counter_name != NULL) {
    set_has_counter_name();
  } else {
    clear_has_counter_name();
  }
  counter_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), counter_name);
  // @@protoc_insertion_point(field_set_allocated:LspStatsRecord.counter_name)
}

// optional uint64 packets = 4;
bool LspStatsRecord::has_packets() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LspStatsRecord::set_has_packets() {
  _has_bits_[0] |= 0x00000008u;
}
void LspStatsRecord::clear_has_packets() {
  _has_bits_[0] &= ~0x00000008u;
}
void LspStatsRecord::clear_packets() {
  packets_ = GOOGLE_ULONGLONG(0);
  clear_has_packets();
}
 ::google::protobuf::uint64 LspStatsRecord::packets() const {
  // @@protoc_insertion_point(field_get:LspStatsRecord.packets)
  return packets_;
}
 void LspStatsRecord::set_packets(::google::protobuf::uint64 value) {
  set_has_packets();
  packets_ = value;
  // @@protoc_insertion_point(field_set:LspStatsRecord.packets)
}

// optional uint64 bytes = 5;
bool LspStatsRecord::has_bytes() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LspStatsRecord::set_has_bytes() {
  _has_bits_[0] |= 0x00000010u;
}
void LspStatsRecord::clear_has_bytes() {
  _has_bits_[0] &= ~0x00000010u;
}
void LspStatsRecord::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes();
}
 ::google::protobuf::uint64 LspStatsRecord::bytes() const {
  // @@protoc_insertion_point(field_get:LspStatsRecord.bytes)
  return bytes_;
}
 void LspStatsRecord::set_bytes(::google::protobuf::uint64 value) {
  set_has_bytes();
  bytes_ = value;
  // @@protoc_insertion_point(field_set:LspStatsRecord.bytes)
}

// optional uint64 packet_rate = 6;
bool LspStatsRecord::has_packet_rate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LspStatsRecord::set_has_packet_rate() {
  _has_bits_[0] |= 0x00000020u;
}
void LspStatsRecord::clear_has_packet_rate() {
  _has_bits_[0] &= ~0x00000020u;
}
void LspStatsRecord::clear_packet_rate() {
  packet_rate_ = GOOGLE_ULONGLONG(0);
  clear_has_packet_rate();
}
 ::google::protobuf::uint64 LspStatsRecord::packet_rate() const {
  // @@protoc_insertion_point(field_get:LspStatsRecord.packet_rate)
  return packet_rate_;
}
 void LspStatsRecord::set_packet_rate(::google::protobuf::uint64 value) {
  set_has_packet_rate();
  packet_rate_ = value;
  // @@protoc_insertion_point(field_set:LspStatsRecord.packet_rate)
}

// optional uint64 byte_rate = 7;
bool LspStatsRecord::has_byte_rate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void LspStatsRecord::set_has_byte_rate() {
  _has_bits_[0] |= 0x00000040u;
}
void LspStatsRecord::clear_has_byte_rate() {
  _has_bits_[0] &= ~0x00000040u;
}
void LspStatsRecord::clear_byte_rate() {
  byte_rate_ = GOOGLE_ULONGLONG(0);
  clear_has_byte_rate();
}
 ::google::protobuf::uint64 LspStatsRecord::byte_rate() const {
  // @@protoc_insertion_point(field_get:LspStatsRecord.byte_rate)
  return byte_rate_;
}
 void LspStatsRecord::set_byte_rate(::google::protobuf::uint64 value) {
  set_has_byte_rate();
  byte_rate_ = value;
  // @@protoc_insertion_point(field_set:LspStatsRecord.byte_rate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::JuniperNetworksSensors,
    ::google::protobuf::internal::MessageTypeTraits< ::LspStats >, 11, false >
  jnpr_lsp_statistics_ext(kJnprLspStatisticsExtFieldNumber, ::LspStats::default_instance());

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
