// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: npu_util.proto

#ifndef PROTOBUF_npu_5futil_2eproto__INCLUDED
#define PROTOBUF_npu_5futil_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "jvision_top.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_npu_5futil_2eproto();
void protobuf_AssignDesc_npu_5futil_2eproto();
void protobuf_ShutdownFile_npu_5futil_2eproto();

class MemoryLoad;
class NetworkProcessorUtilization;
class PacketLoad;
class Utilization;

// ===================================================================

class NetworkProcessorUtilization : public ::google::protobuf::Message {
 public:
  NetworkProcessorUtilization();
  virtual ~NetworkProcessorUtilization();

  NetworkProcessorUtilization(const NetworkProcessorUtilization& from);

  inline NetworkProcessorUtilization& operator=(const NetworkProcessorUtilization& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetworkProcessorUtilization& default_instance();

  void Swap(NetworkProcessorUtilization* other);

  // implements Message ----------------------------------------------

  inline NetworkProcessorUtilization* New() const { return New(NULL); }

  NetworkProcessorUtilization* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetworkProcessorUtilization& from);
  void MergeFrom(const NetworkProcessorUtilization& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NetworkProcessorUtilization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Utilization npu_util_stats = 1;
  int npu_util_stats_size() const;
  void clear_npu_util_stats();
  static const int kNpuUtilStatsFieldNumber = 1;
  const ::Utilization& npu_util_stats(int index) const;
  ::Utilization* mutable_npu_util_stats(int index);
  ::Utilization* add_npu_util_stats();
  ::google::protobuf::RepeatedPtrField< ::Utilization >*
      mutable_npu_util_stats();
  const ::google::protobuf::RepeatedPtrField< ::Utilization >&
      npu_util_stats() const;

  // @@protoc_insertion_point(class_scope:NetworkProcessorUtilization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Utilization > npu_util_stats_;
  friend void  protobuf_AddDesc_npu_5futil_2eproto();
  friend void protobuf_AssignDesc_npu_5futil_2eproto();
  friend void protobuf_ShutdownFile_npu_5futil_2eproto();

  void InitAsDefaultInstance();
  static NetworkProcessorUtilization* default_instance_;
};
// -------------------------------------------------------------------

class Utilization : public ::google::protobuf::Message {
 public:
  Utilization();
  virtual ~Utilization();

  Utilization(const Utilization& from);

  inline Utilization& operator=(const Utilization& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Utilization& default_instance();

  void Swap(Utilization* other);

  // implements Message ----------------------------------------------

  inline Utilization* New() const { return New(NULL); }

  Utilization* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Utilization& from);
  void MergeFrom(const Utilization& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Utilization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string identifier = 1;
  bool has_identifier() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 1;
  const ::std::string& identifier() const;
  void set_identifier(const ::std::string& value);
  void set_identifier(const char* value);
  void set_identifier(const char* value, size_t size);
  ::std::string* mutable_identifier();
  ::std::string* release_identifier();
  void set_allocated_identifier(::std::string* identifier);

  // optional uint32 utilization = 2;
  bool has_utilization() const;
  void clear_utilization();
  static const int kUtilizationFieldNumber = 2;
  ::google::protobuf::uint32 utilization() const;
  void set_utilization(::google::protobuf::uint32 value);

  // repeated .PacketLoad packets = 3;
  int packets_size() const;
  void clear_packets();
  static const int kPacketsFieldNumber = 3;
  const ::PacketLoad& packets(int index) const;
  ::PacketLoad* mutable_packets(int index);
  ::PacketLoad* add_packets();
  ::google::protobuf::RepeatedPtrField< ::PacketLoad >*
      mutable_packets();
  const ::google::protobuf::RepeatedPtrField< ::PacketLoad >&
      packets() const;

  // repeated .MemoryLoad memory = 4;
  int memory_size() const;
  void clear_memory();
  static const int kMemoryFieldNumber = 4;
  const ::MemoryLoad& memory(int index) const;
  ::MemoryLoad* mutable_memory(int index);
  ::MemoryLoad* add_memory();
  ::google::protobuf::RepeatedPtrField< ::MemoryLoad >*
      mutable_memory();
  const ::google::protobuf::RepeatedPtrField< ::MemoryLoad >&
      memory() const;

  // @@protoc_insertion_point(class_scope:Utilization)
 private:
  inline void set_has_identifier();
  inline void clear_has_identifier();
  inline void set_has_utilization();
  inline void clear_has_utilization();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr identifier_;
  ::google::protobuf::RepeatedPtrField< ::PacketLoad > packets_;
  ::google::protobuf::RepeatedPtrField< ::MemoryLoad > memory_;
  ::google::protobuf::uint32 utilization_;
  friend void  protobuf_AddDesc_npu_5futil_2eproto();
  friend void protobuf_AssignDesc_npu_5futil_2eproto();
  friend void protobuf_ShutdownFile_npu_5futil_2eproto();

  void InitAsDefaultInstance();
  static Utilization* default_instance_;
};
// -------------------------------------------------------------------

class MemoryLoad : public ::google::protobuf::Message {
 public:
  MemoryLoad();
  virtual ~MemoryLoad();

  MemoryLoad(const MemoryLoad& from);

  inline MemoryLoad& operator=(const MemoryLoad& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MemoryLoad& default_instance();

  void Swap(MemoryLoad* other);

  // implements Message ----------------------------------------------

  inline MemoryLoad* New() const { return New(NULL); }

  MemoryLoad* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MemoryLoad& from);
  void MergeFrom(const MemoryLoad& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MemoryLoad* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 average_util = 2;
  bool has_average_util() const;
  void clear_average_util();
  static const int kAverageUtilFieldNumber = 2;
  ::google::protobuf::uint32 average_util() const;
  void set_average_util(::google::protobuf::uint32 value);

  // optional uint32 highest_util = 3;
  bool has_highest_util() const;
  void clear_highest_util();
  static const int kHighestUtilFieldNumber = 3;
  ::google::protobuf::uint32 highest_util() const;
  void set_highest_util(::google::protobuf::uint32 value);

  // optional uint32 lowest_util = 4;
  bool has_lowest_util() const;
  void clear_lowest_util();
  static const int kLowestUtilFieldNumber = 4;
  ::google::protobuf::uint32 lowest_util() const;
  void set_lowest_util(::google::protobuf::uint32 value);

  // optional uint32 average_cache_hit_rate = 5;
  bool has_average_cache_hit_rate() const;
  void clear_average_cache_hit_rate();
  static const int kAverageCacheHitRateFieldNumber = 5;
  ::google::protobuf::uint32 average_cache_hit_rate() const;
  void set_average_cache_hit_rate(::google::protobuf::uint32 value);

  // optional uint32 highest_cache_hit_rate = 6;
  bool has_highest_cache_hit_rate() const;
  void clear_highest_cache_hit_rate();
  static const int kHighestCacheHitRateFieldNumber = 6;
  ::google::protobuf::uint32 highest_cache_hit_rate() const;
  void set_highest_cache_hit_rate(::google::protobuf::uint32 value);

  // optional uint32 lowest_cache_hit_rate = 7;
  bool has_lowest_cache_hit_rate() const;
  void clear_lowest_cache_hit_rate();
  static const int kLowestCacheHitRateFieldNumber = 7;
  ::google::protobuf::uint32 lowest_cache_hit_rate() const;
  void set_lowest_cache_hit_rate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MemoryLoad)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_average_util();
  inline void clear_has_average_util();
  inline void set_has_highest_util();
  inline void clear_has_highest_util();
  inline void set_has_lowest_util();
  inline void clear_has_lowest_util();
  inline void set_has_average_cache_hit_rate();
  inline void clear_has_average_cache_hit_rate();
  inline void set_has_highest_cache_hit_rate();
  inline void clear_has_highest_cache_hit_rate();
  inline void set_has_lowest_cache_hit_rate();
  inline void clear_has_lowest_cache_hit_rate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 average_util_;
  ::google::protobuf::uint32 highest_util_;
  ::google::protobuf::uint32 lowest_util_;
  ::google::protobuf::uint32 average_cache_hit_rate_;
  ::google::protobuf::uint32 highest_cache_hit_rate_;
  ::google::protobuf::uint32 lowest_cache_hit_rate_;
  friend void  protobuf_AddDesc_npu_5futil_2eproto();
  friend void protobuf_AssignDesc_npu_5futil_2eproto();
  friend void protobuf_ShutdownFile_npu_5futil_2eproto();

  void InitAsDefaultInstance();
  static MemoryLoad* default_instance_;
};
// -------------------------------------------------------------------

class PacketLoad : public ::google::protobuf::Message {
 public:
  PacketLoad();
  virtual ~PacketLoad();

  PacketLoad(const PacketLoad& from);

  inline PacketLoad& operator=(const PacketLoad& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketLoad& default_instance();

  void Swap(PacketLoad* other);

  // implements Message ----------------------------------------------

  inline PacketLoad* New() const { return New(NULL); }

  PacketLoad* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PacketLoad& from);
  void MergeFrom(const PacketLoad& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PacketLoad* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string identifier = 1;
  bool has_identifier() const;
  void clear_identifier();
  static const int kIdentifierFieldNumber = 1;
  const ::std::string& identifier() const;
  void set_identifier(const ::std::string& value);
  void set_identifier(const char* value);
  void set_identifier(const char* value, size_t size);
  ::std::string* mutable_identifier();
  ::std::string* release_identifier();
  void set_allocated_identifier(::std::string* identifier);

  // optional uint32 rate = 2;
  bool has_rate() const;
  void clear_rate();
  static const int kRateFieldNumber = 2;
  ::google::protobuf::uint32 rate() const;
  void set_rate(::google::protobuf::uint32 value);

  // optional uint32 average_instructions_per_packet = 3;
  bool has_average_instructions_per_packet() const;
  void clear_average_instructions_per_packet();
  static const int kAverageInstructionsPerPacketFieldNumber = 3;
  ::google::protobuf::uint32 average_instructions_per_packet() const;
  void set_average_instructions_per_packet(::google::protobuf::uint32 value);

  // optional uint32 average_wait_cycles_per_packet = 4;
  bool has_average_wait_cycles_per_packet() const;
  void clear_average_wait_cycles_per_packet();
  static const int kAverageWaitCyclesPerPacketFieldNumber = 4;
  ::google::protobuf::uint32 average_wait_cycles_per_packet() const;
  void set_average_wait_cycles_per_packet(::google::protobuf::uint32 value);

  // optional uint32 average_cycles_per_packet = 5;
  bool has_average_cycles_per_packet() const;
  void clear_average_cycles_per_packet();
  static const int kAverageCyclesPerPacketFieldNumber = 5;
  ::google::protobuf::uint32 average_cycles_per_packet() const;
  void set_average_cycles_per_packet(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PacketLoad)
 private:
  inline void set_has_identifier();
  inline void clear_has_identifier();
  inline void set_has_rate();
  inline void clear_has_rate();
  inline void set_has_average_instructions_per_packet();
  inline void clear_has_average_instructions_per_packet();
  inline void set_has_average_wait_cycles_per_packet();
  inline void clear_has_average_wait_cycles_per_packet();
  inline void set_has_average_cycles_per_packet();
  inline void clear_has_average_cycles_per_packet();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr identifier_;
  ::google::protobuf::uint32 rate_;
  ::google::protobuf::uint32 average_instructions_per_packet_;
  ::google::protobuf::uint32 average_wait_cycles_per_packet_;
  ::google::protobuf::uint32 average_cycles_per_packet_;
  friend void  protobuf_AddDesc_npu_5futil_2eproto();
  friend void protobuf_AssignDesc_npu_5futil_2eproto();
  friend void protobuf_ShutdownFile_npu_5futil_2eproto();

  void InitAsDefaultInstance();
  static PacketLoad* default_instance_;
};
// ===================================================================

static const int kJnprNpuUtilExtFieldNumber = 11;
extern ::google::protobuf::internal::ExtensionIdentifier< ::JuniperNetworksSensors,
    ::google::protobuf::internal::MessageTypeTraits< ::NetworkProcessorUtilization >, 11, false >
  jnpr_npu_util_ext;

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NetworkProcessorUtilization

// repeated .Utilization npu_util_stats = 1;
inline int NetworkProcessorUtilization::npu_util_stats_size() const {
  return npu_util_stats_.size();
}
inline void NetworkProcessorUtilization::clear_npu_util_stats() {
  npu_util_stats_.Clear();
}
inline const ::Utilization& NetworkProcessorUtilization::npu_util_stats(int index) const {
  // @@protoc_insertion_point(field_get:NetworkProcessorUtilization.npu_util_stats)
  return npu_util_stats_.Get(index);
}
inline ::Utilization* NetworkProcessorUtilization::mutable_npu_util_stats(int index) {
  // @@protoc_insertion_point(field_mutable:NetworkProcessorUtilization.npu_util_stats)
  return npu_util_stats_.Mutable(index);
}
inline ::Utilization* NetworkProcessorUtilization::add_npu_util_stats() {
  // @@protoc_insertion_point(field_add:NetworkProcessorUtilization.npu_util_stats)
  return npu_util_stats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Utilization >*
NetworkProcessorUtilization::mutable_npu_util_stats() {
  // @@protoc_insertion_point(field_mutable_list:NetworkProcessorUtilization.npu_util_stats)
  return &npu_util_stats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Utilization >&
NetworkProcessorUtilization::npu_util_stats() const {
  // @@protoc_insertion_point(field_list:NetworkProcessorUtilization.npu_util_stats)
  return npu_util_stats_;
}

// -------------------------------------------------------------------

// Utilization

// required string identifier = 1;
inline bool Utilization::has_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Utilization::set_has_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Utilization::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Utilization::clear_identifier() {
  identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_identifier();
}
inline const ::std::string& Utilization::identifier() const {
  // @@protoc_insertion_point(field_get:Utilization.identifier)
  return identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utilization::set_identifier(const ::std::string& value) {
  set_has_identifier();
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Utilization.identifier)
}
inline void Utilization::set_identifier(const char* value) {
  set_has_identifier();
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Utilization.identifier)
}
inline void Utilization::set_identifier(const char* value, size_t size) {
  set_has_identifier();
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Utilization.identifier)
}
inline ::std::string* Utilization::mutable_identifier() {
  set_has_identifier();
  // @@protoc_insertion_point(field_mutable:Utilization.identifier)
  return identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Utilization::release_identifier() {
  clear_has_identifier();
  return identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Utilization::set_allocated_identifier(::std::string* identifier) {
  if (identifier != NULL) {
    set_has_identifier();
  } else {
    clear_has_identifier();
  }
  identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identifier);
  // @@protoc_insertion_point(field_set_allocated:Utilization.identifier)
}

// optional uint32 utilization = 2;
inline bool Utilization::has_utilization() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Utilization::set_has_utilization() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Utilization::clear_has_utilization() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Utilization::clear_utilization() {
  utilization_ = 0u;
  clear_has_utilization();
}
inline ::google::protobuf::uint32 Utilization::utilization() const {
  // @@protoc_insertion_point(field_get:Utilization.utilization)
  return utilization_;
}
inline void Utilization::set_utilization(::google::protobuf::uint32 value) {
  set_has_utilization();
  utilization_ = value;
  // @@protoc_insertion_point(field_set:Utilization.utilization)
}

// repeated .PacketLoad packets = 3;
inline int Utilization::packets_size() const {
  return packets_.size();
}
inline void Utilization::clear_packets() {
  packets_.Clear();
}
inline const ::PacketLoad& Utilization::packets(int index) const {
  // @@protoc_insertion_point(field_get:Utilization.packets)
  return packets_.Get(index);
}
inline ::PacketLoad* Utilization::mutable_packets(int index) {
  // @@protoc_insertion_point(field_mutable:Utilization.packets)
  return packets_.Mutable(index);
}
inline ::PacketLoad* Utilization::add_packets() {
  // @@protoc_insertion_point(field_add:Utilization.packets)
  return packets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PacketLoad >*
Utilization::mutable_packets() {
  // @@protoc_insertion_point(field_mutable_list:Utilization.packets)
  return &packets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PacketLoad >&
Utilization::packets() const {
  // @@protoc_insertion_point(field_list:Utilization.packets)
  return packets_;
}

// repeated .MemoryLoad memory = 4;
inline int Utilization::memory_size() const {
  return memory_.size();
}
inline void Utilization::clear_memory() {
  memory_.Clear();
}
inline const ::MemoryLoad& Utilization::memory(int index) const {
  // @@protoc_insertion_point(field_get:Utilization.memory)
  return memory_.Get(index);
}
inline ::MemoryLoad* Utilization::mutable_memory(int index) {
  // @@protoc_insertion_point(field_mutable:Utilization.memory)
  return memory_.Mutable(index);
}
inline ::MemoryLoad* Utilization::add_memory() {
  // @@protoc_insertion_point(field_add:Utilization.memory)
  return memory_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::MemoryLoad >*
Utilization::mutable_memory() {
  // @@protoc_insertion_point(field_mutable_list:Utilization.memory)
  return &memory_;
}
inline const ::google::protobuf::RepeatedPtrField< ::MemoryLoad >&
Utilization::memory() const {
  // @@protoc_insertion_point(field_list:Utilization.memory)
  return memory_;
}

// -------------------------------------------------------------------

// MemoryLoad

// optional string name = 1;
inline bool MemoryLoad::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MemoryLoad::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MemoryLoad::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MemoryLoad::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& MemoryLoad::name() const {
  // @@protoc_insertion_point(field_get:MemoryLoad.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MemoryLoad::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MemoryLoad.name)
}
inline void MemoryLoad::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MemoryLoad.name)
}
inline void MemoryLoad::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MemoryLoad.name)
}
inline ::std::string* MemoryLoad::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:MemoryLoad.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MemoryLoad::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MemoryLoad::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:MemoryLoad.name)
}

// optional uint32 average_util = 2;
inline bool MemoryLoad::has_average_util() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MemoryLoad::set_has_average_util() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MemoryLoad::clear_has_average_util() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MemoryLoad::clear_average_util() {
  average_util_ = 0u;
  clear_has_average_util();
}
inline ::google::protobuf::uint32 MemoryLoad::average_util() const {
  // @@protoc_insertion_point(field_get:MemoryLoad.average_util)
  return average_util_;
}
inline void MemoryLoad::set_average_util(::google::protobuf::uint32 value) {
  set_has_average_util();
  average_util_ = value;
  // @@protoc_insertion_point(field_set:MemoryLoad.average_util)
}

// optional uint32 highest_util = 3;
inline bool MemoryLoad::has_highest_util() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MemoryLoad::set_has_highest_util() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MemoryLoad::clear_has_highest_util() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MemoryLoad::clear_highest_util() {
  highest_util_ = 0u;
  clear_has_highest_util();
}
inline ::google::protobuf::uint32 MemoryLoad::highest_util() const {
  // @@protoc_insertion_point(field_get:MemoryLoad.highest_util)
  return highest_util_;
}
inline void MemoryLoad::set_highest_util(::google::protobuf::uint32 value) {
  set_has_highest_util();
  highest_util_ = value;
  // @@protoc_insertion_point(field_set:MemoryLoad.highest_util)
}

// optional uint32 lowest_util = 4;
inline bool MemoryLoad::has_lowest_util() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MemoryLoad::set_has_lowest_util() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MemoryLoad::clear_has_lowest_util() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MemoryLoad::clear_lowest_util() {
  lowest_util_ = 0u;
  clear_has_lowest_util();
}
inline ::google::protobuf::uint32 MemoryLoad::lowest_util() const {
  // @@protoc_insertion_point(field_get:MemoryLoad.lowest_util)
  return lowest_util_;
}
inline void MemoryLoad::set_lowest_util(::google::protobuf::uint32 value) {
  set_has_lowest_util();
  lowest_util_ = value;
  // @@protoc_insertion_point(field_set:MemoryLoad.lowest_util)
}

// optional uint32 average_cache_hit_rate = 5;
inline bool MemoryLoad::has_average_cache_hit_rate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MemoryLoad::set_has_average_cache_hit_rate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MemoryLoad::clear_has_average_cache_hit_rate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MemoryLoad::clear_average_cache_hit_rate() {
  average_cache_hit_rate_ = 0u;
  clear_has_average_cache_hit_rate();
}
inline ::google::protobuf::uint32 MemoryLoad::average_cache_hit_rate() const {
  // @@protoc_insertion_point(field_get:MemoryLoad.average_cache_hit_rate)
  return average_cache_hit_rate_;
}
inline void MemoryLoad::set_average_cache_hit_rate(::google::protobuf::uint32 value) {
  set_has_average_cache_hit_rate();
  average_cache_hit_rate_ = value;
  // @@protoc_insertion_point(field_set:MemoryLoad.average_cache_hit_rate)
}

// optional uint32 highest_cache_hit_rate = 6;
inline bool MemoryLoad::has_highest_cache_hit_rate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MemoryLoad::set_has_highest_cache_hit_rate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MemoryLoad::clear_has_highest_cache_hit_rate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MemoryLoad::clear_highest_cache_hit_rate() {
  highest_cache_hit_rate_ = 0u;
  clear_has_highest_cache_hit_rate();
}
inline ::google::protobuf::uint32 MemoryLoad::highest_cache_hit_rate() const {
  // @@protoc_insertion_point(field_get:MemoryLoad.highest_cache_hit_rate)
  return highest_cache_hit_rate_;
}
inline void MemoryLoad::set_highest_cache_hit_rate(::google::protobuf::uint32 value) {
  set_has_highest_cache_hit_rate();
  highest_cache_hit_rate_ = value;
  // @@protoc_insertion_point(field_set:MemoryLoad.highest_cache_hit_rate)
}

// optional uint32 lowest_cache_hit_rate = 7;
inline bool MemoryLoad::has_lowest_cache_hit_rate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MemoryLoad::set_has_lowest_cache_hit_rate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MemoryLoad::clear_has_lowest_cache_hit_rate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MemoryLoad::clear_lowest_cache_hit_rate() {
  lowest_cache_hit_rate_ = 0u;
  clear_has_lowest_cache_hit_rate();
}
inline ::google::protobuf::uint32 MemoryLoad::lowest_cache_hit_rate() const {
  // @@protoc_insertion_point(field_get:MemoryLoad.lowest_cache_hit_rate)
  return lowest_cache_hit_rate_;
}
inline void MemoryLoad::set_lowest_cache_hit_rate(::google::protobuf::uint32 value) {
  set_has_lowest_cache_hit_rate();
  lowest_cache_hit_rate_ = value;
  // @@protoc_insertion_point(field_set:MemoryLoad.lowest_cache_hit_rate)
}

// -------------------------------------------------------------------

// PacketLoad

// required string identifier = 1;
inline bool PacketLoad::has_identifier() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PacketLoad::set_has_identifier() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PacketLoad::clear_has_identifier() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PacketLoad::clear_identifier() {
  identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_identifier();
}
inline const ::std::string& PacketLoad::identifier() const {
  // @@protoc_insertion_point(field_get:PacketLoad.identifier)
  return identifier_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketLoad::set_identifier(const ::std::string& value) {
  set_has_identifier();
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PacketLoad.identifier)
}
inline void PacketLoad::set_identifier(const char* value) {
  set_has_identifier();
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PacketLoad.identifier)
}
inline void PacketLoad::set_identifier(const char* value, size_t size) {
  set_has_identifier();
  identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PacketLoad.identifier)
}
inline ::std::string* PacketLoad::mutable_identifier() {
  set_has_identifier();
  // @@protoc_insertion_point(field_mutable:PacketLoad.identifier)
  return identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PacketLoad::release_identifier() {
  clear_has_identifier();
  return identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PacketLoad::set_allocated_identifier(::std::string* identifier) {
  if (identifier != NULL) {
    set_has_identifier();
  } else {
    clear_has_identifier();
  }
  identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), identifier);
  // @@protoc_insertion_point(field_set_allocated:PacketLoad.identifier)
}

// optional uint32 rate = 2;
inline bool PacketLoad::has_rate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PacketLoad::set_has_rate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PacketLoad::clear_has_rate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PacketLoad::clear_rate() {
  rate_ = 0u;
  clear_has_rate();
}
inline ::google::protobuf::uint32 PacketLoad::rate() const {
  // @@protoc_insertion_point(field_get:PacketLoad.rate)
  return rate_;
}
inline void PacketLoad::set_rate(::google::protobuf::uint32 value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:PacketLoad.rate)
}

// optional uint32 average_instructions_per_packet = 3;
inline bool PacketLoad::has_average_instructions_per_packet() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PacketLoad::set_has_average_instructions_per_packet() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PacketLoad::clear_has_average_instructions_per_packet() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PacketLoad::clear_average_instructions_per_packet() {
  average_instructions_per_packet_ = 0u;
  clear_has_average_instructions_per_packet();
}
inline ::google::protobuf::uint32 PacketLoad::average_instructions_per_packet() const {
  // @@protoc_insertion_point(field_get:PacketLoad.average_instructions_per_packet)
  return average_instructions_per_packet_;
}
inline void PacketLoad::set_average_instructions_per_packet(::google::protobuf::uint32 value) {
  set_has_average_instructions_per_packet();
  average_instructions_per_packet_ = value;
  // @@protoc_insertion_point(field_set:PacketLoad.average_instructions_per_packet)
}

// optional uint32 average_wait_cycles_per_packet = 4;
inline bool PacketLoad::has_average_wait_cycles_per_packet() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PacketLoad::set_has_average_wait_cycles_per_packet() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PacketLoad::clear_has_average_wait_cycles_per_packet() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PacketLoad::clear_average_wait_cycles_per_packet() {
  average_wait_cycles_per_packet_ = 0u;
  clear_has_average_wait_cycles_per_packet();
}
inline ::google::protobuf::uint32 PacketLoad::average_wait_cycles_per_packet() const {
  // @@protoc_insertion_point(field_get:PacketLoad.average_wait_cycles_per_packet)
  return average_wait_cycles_per_packet_;
}
inline void PacketLoad::set_average_wait_cycles_per_packet(::google::protobuf::uint32 value) {
  set_has_average_wait_cycles_per_packet();
  average_wait_cycles_per_packet_ = value;
  // @@protoc_insertion_point(field_set:PacketLoad.average_wait_cycles_per_packet)
}

// optional uint32 average_cycles_per_packet = 5;
inline bool PacketLoad::has_average_cycles_per_packet() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PacketLoad::set_has_average_cycles_per_packet() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PacketLoad::clear_has_average_cycles_per_packet() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PacketLoad::clear_average_cycles_per_packet() {
  average_cycles_per_packet_ = 0u;
  clear_has_average_cycles_per_packet();
}
inline ::google::protobuf::uint32 PacketLoad::average_cycles_per_packet() const {
  // @@protoc_insertion_point(field_get:PacketLoad.average_cycles_per_packet)
  return average_cycles_per_packet_;
}
inline void PacketLoad::set_average_cycles_per_packet(::google::protobuf::uint32 value) {
  set_has_average_cycles_per_packet();
  average_cycles_per_packet_ = value;
  // @@protoc_insertion_point(field_set:PacketLoad.average_cycles_per_packet)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_npu_5futil_2eproto__INCLUDED
