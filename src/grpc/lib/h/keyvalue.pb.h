// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: keyvalue.proto

#ifndef PROTOBUF_keyvalue_2eproto__INCLUDED
#define PROTOBUF_keyvalue_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "telemetry_top.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_keyvalue_2eproto();
void protobuf_AssignDesc_keyvalue_2eproto();
void protobuf_ShutdownFile_keyvalue_2eproto();

class keyvalue;
class kvresponse;

// ===================================================================

class keyvalue : public ::google::protobuf::Message {
 public:
  keyvalue();
  virtual ~keyvalue();

  keyvalue(const keyvalue& from);

  inline keyvalue& operator=(const keyvalue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const keyvalue& default_instance();

  void Swap(keyvalue* other);

  // implements Message ----------------------------------------------

  inline keyvalue* New() const { return New(NULL); }

  keyvalue* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const keyvalue& from);
  void MergeFrom(const keyvalue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(keyvalue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional int32 int32_val = 2;
  bool has_int32_val() const;
  void clear_int32_val();
  static const int kInt32ValFieldNumber = 2;
  ::google::protobuf::int32 int32_val() const;
  void set_int32_val(::google::protobuf::int32 value);

  // optional uint64 uint64_val = 3;
  bool has_uint64_val() const;
  void clear_uint64_val();
  static const int kUint64ValFieldNumber = 3;
  ::google::protobuf::uint64 uint64_val() const;
  void set_uint64_val(::google::protobuf::uint64 value);

  // optional string string_val = 4;
  bool has_string_val() const;
  void clear_string_val();
  static const int kStringValFieldNumber = 4;
  const ::std::string& string_val() const;
  void set_string_val(const ::std::string& value);
  void set_string_val(const char* value);
  void set_string_val(const char* value, size_t size);
  ::std::string* mutable_string_val();
  ::std::string* release_string_val();
  void set_allocated_string_val(::std::string* string_val);

  // @@protoc_insertion_point(class_scope:keyvalue)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_int32_val();
  inline void clear_has_int32_val();
  inline void set_has_uint64_val();
  inline void clear_has_uint64_val();
  inline void set_has_string_val();
  inline void clear_has_string_val();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::uint64 uint64_val_;
  ::google::protobuf::internal::ArenaStringPtr string_val_;
  ::google::protobuf::int32 int32_val_;
  friend void  protobuf_AddDesc_keyvalue_2eproto();
  friend void protobuf_AssignDesc_keyvalue_2eproto();
  friend void protobuf_ShutdownFile_keyvalue_2eproto();

  void InitAsDefaultInstance();
  static keyvalue* default_instance_;
};
// -------------------------------------------------------------------

class kvresponse : public ::google::protobuf::Message {
 public:
  kvresponse();
  virtual ~kvresponse();

  kvresponse(const kvresponse& from);

  inline kvresponse& operator=(const kvresponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const kvresponse& default_instance();

  void Swap(kvresponse* other);

  // implements Message ----------------------------------------------

  inline kvresponse* New() const { return New(NULL); }

  kvresponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const kvresponse& from);
  void MergeFrom(const kvresponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(kvresponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .keyvalue kvpairs = 1;
  int kvpairs_size() const;
  void clear_kvpairs();
  static const int kKvpairsFieldNumber = 1;
  const ::keyvalue& kvpairs(int index) const;
  ::keyvalue* mutable_kvpairs(int index);
  ::keyvalue* add_kvpairs();
  ::google::protobuf::RepeatedPtrField< ::keyvalue >*
      mutable_kvpairs();
  const ::google::protobuf::RepeatedPtrField< ::keyvalue >&
      kvpairs() const;

  // @@protoc_insertion_point(class_scope:kvresponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::keyvalue > kvpairs_;
  friend void  protobuf_AddDesc_keyvalue_2eproto();
  friend void protobuf_AssignDesc_keyvalue_2eproto();
  friend void protobuf_ShutdownFile_keyvalue_2eproto();

  void InitAsDefaultInstance();
  static kvresponse* default_instance_;
};
// ===================================================================

static const int kKvresponseExtFieldNumber = 2000;
extern ::google::protobuf::internal::ExtensionIdentifier< ::JuniperNetworksSensors,
    ::google::protobuf::internal::MessageTypeTraits< ::kvresponse >, 11, false >
  kvresponseExt;

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// keyvalue

// optional string key = 1;
inline bool keyvalue::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void keyvalue::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void keyvalue::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void keyvalue::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& keyvalue::key() const {
  // @@protoc_insertion_point(field_get:keyvalue.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void keyvalue::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:keyvalue.key)
}
inline void keyvalue::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:keyvalue.key)
}
inline void keyvalue::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:keyvalue.key)
}
inline ::std::string* keyvalue::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:keyvalue.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* keyvalue::release_key() {
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void keyvalue::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:keyvalue.key)
}

// optional int32 int32_val = 2;
inline bool keyvalue::has_int32_val() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void keyvalue::set_has_int32_val() {
  _has_bits_[0] |= 0x00000002u;
}
inline void keyvalue::clear_has_int32_val() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void keyvalue::clear_int32_val() {
  int32_val_ = 0;
  clear_has_int32_val();
}
inline ::google::protobuf::int32 keyvalue::int32_val() const {
  // @@protoc_insertion_point(field_get:keyvalue.int32_val)
  return int32_val_;
}
inline void keyvalue::set_int32_val(::google::protobuf::int32 value) {
  set_has_int32_val();
  int32_val_ = value;
  // @@protoc_insertion_point(field_set:keyvalue.int32_val)
}

// optional uint64 uint64_val = 3;
inline bool keyvalue::has_uint64_val() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void keyvalue::set_has_uint64_val() {
  _has_bits_[0] |= 0x00000004u;
}
inline void keyvalue::clear_has_uint64_val() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void keyvalue::clear_uint64_val() {
  uint64_val_ = GOOGLE_ULONGLONG(0);
  clear_has_uint64_val();
}
inline ::google::protobuf::uint64 keyvalue::uint64_val() const {
  // @@protoc_insertion_point(field_get:keyvalue.uint64_val)
  return uint64_val_;
}
inline void keyvalue::set_uint64_val(::google::protobuf::uint64 value) {
  set_has_uint64_val();
  uint64_val_ = value;
  // @@protoc_insertion_point(field_set:keyvalue.uint64_val)
}

// optional string string_val = 4;
inline bool keyvalue::has_string_val() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void keyvalue::set_has_string_val() {
  _has_bits_[0] |= 0x00000008u;
}
inline void keyvalue::clear_has_string_val() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void keyvalue::clear_string_val() {
  string_val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string_val();
}
inline const ::std::string& keyvalue::string_val() const {
  // @@protoc_insertion_point(field_get:keyvalue.string_val)
  return string_val_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void keyvalue::set_string_val(const ::std::string& value) {
  set_has_string_val();
  string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:keyvalue.string_val)
}
inline void keyvalue::set_string_val(const char* value) {
  set_has_string_val();
  string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:keyvalue.string_val)
}
inline void keyvalue::set_string_val(const char* value, size_t size) {
  set_has_string_val();
  string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:keyvalue.string_val)
}
inline ::std::string* keyvalue::mutable_string_val() {
  set_has_string_val();
  // @@protoc_insertion_point(field_mutable:keyvalue.string_val)
  return string_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* keyvalue::release_string_val() {
  clear_has_string_val();
  return string_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void keyvalue::set_allocated_string_val(::std::string* string_val) {
  if (string_val != NULL) {
    set_has_string_val();
  } else {
    clear_has_string_val();
  }
  string_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_val);
  // @@protoc_insertion_point(field_set_allocated:keyvalue.string_val)
}

// -------------------------------------------------------------------

// kvresponse

// repeated .keyvalue kvpairs = 1;
inline int kvresponse::kvpairs_size() const {
  return kvpairs_.size();
}
inline void kvresponse::clear_kvpairs() {
  kvpairs_.Clear();
}
inline const ::keyvalue& kvresponse::kvpairs(int index) const {
  // @@protoc_insertion_point(field_get:kvresponse.kvpairs)
  return kvpairs_.Get(index);
}
inline ::keyvalue* kvresponse::mutable_kvpairs(int index) {
  // @@protoc_insertion_point(field_mutable:kvresponse.kvpairs)
  return kvpairs_.Mutable(index);
}
inline ::keyvalue* kvresponse::add_kvpairs() {
  // @@protoc_insertion_point(field_add:kvresponse.kvpairs)
  return kvpairs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::keyvalue >*
kvresponse::mutable_kvpairs() {
  // @@protoc_insertion_point(field_mutable_list:kvresponse.kvpairs)
  return &kvpairs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::keyvalue >&
kvresponse::kvpairs() const {
  // @@protoc_insertion_point(field_list:kvresponse.kvpairs)
  return kvpairs_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_keyvalue_2eproto__INCLUDED
