// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: optics.proto

#ifndef PROTOBUF_optics_2eproto__INCLUDED
#define PROTOBUF_optics_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_optics_2eproto();
void protobuf_AssignDesc_optics_2eproto();
void protobuf_ShutdownFile_optics_2eproto();

class Optics;
class Stats;

// ===================================================================

class Optics : public ::google::protobuf::Message {
 public:
  Optics();
  virtual ~Optics();

  Optics(const Optics& from);

  inline Optics& operator=(const Optics& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Optics& default_instance();

  void Swap(Optics* other);

  // implements Message ----------------------------------------------

  inline Optics* New() const { return New(NULL); }

  Optics* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Optics& from);
  void MergeFrom(const Optics& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Optics* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Stats stats_record = 1;
  int stats_record_size() const;
  void clear_stats_record();
  static const int kStatsRecordFieldNumber = 1;
  const ::Stats& stats_record(int index) const;
  ::Stats* mutable_stats_record(int index);
  ::Stats* add_stats_record();
  ::google::protobuf::RepeatedPtrField< ::Stats >*
      mutable_stats_record();
  const ::google::protobuf::RepeatedPtrField< ::Stats >&
      stats_record() const;

  // @@protoc_insertion_point(class_scope:Optics)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Stats > stats_record_;
  friend void  protobuf_AddDesc_optics_2eproto();
  friend void protobuf_AssignDesc_optics_2eproto();
  friend void protobuf_ShutdownFile_optics_2eproto();

  void InitAsDefaultInstance();
  static Optics* default_instance_;
};
// -------------------------------------------------------------------

class Stats : public ::google::protobuf::Message {
 public:
  Stats();
  virtual ~Stats();

  Stats(const Stats& from);

  inline Stats& operator=(const Stats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Stats& default_instance();

  void Swap(Stats* other);

  // implements Message ----------------------------------------------

  inline Stats* New() const { return New(NULL); }

  Stats* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Stats& from);
  void MergeFrom(const Stats& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Stats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Stats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_optics_2eproto();
  friend void protobuf_AssignDesc_optics_2eproto();
  friend void protobuf_ShutdownFile_optics_2eproto();

  void InitAsDefaultInstance();
  static Stats* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Optics

// repeated .Stats stats_record = 1;
inline int Optics::stats_record_size() const {
  return stats_record_.size();
}
inline void Optics::clear_stats_record() {
  stats_record_.Clear();
}
inline const ::Stats& Optics::stats_record(int index) const {
  // @@protoc_insertion_point(field_get:Optics.stats_record)
  return stats_record_.Get(index);
}
inline ::Stats* Optics::mutable_stats_record(int index) {
  // @@protoc_insertion_point(field_mutable:Optics.stats_record)
  return stats_record_.Mutable(index);
}
inline ::Stats* Optics::add_stats_record() {
  // @@protoc_insertion_point(field_add:Optics.stats_record)
  return stats_record_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::Stats >*
Optics::mutable_stats_record() {
  // @@protoc_insertion_point(field_mutable_list:Optics.stats_record)
  return &stats_record_;
}
inline const ::google::protobuf::RepeatedPtrField< ::Stats >&
Optics::stats_record() const {
  // @@protoc_insertion_point(field_list:Optics.stats_record)
  return stats_record_;
}

// -------------------------------------------------------------------

// Stats

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_optics_2eproto__INCLUDED
