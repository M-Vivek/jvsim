// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mgd_service.proto

#ifndef PROTOBUF_mgd_5fservice_2eproto__INCLUDED
#define PROTOBUF_mgd_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace management {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_mgd_5fservice_2eproto();
void protobuf_AssignDesc_mgd_5fservice_2eproto();
void protobuf_ShutdownFile_mgd_5fservice_2eproto();

class ConfigCommit;
class EditEphemeralConfigRequest;
class EditEphemeralConfigRequest_ConfigOperationList;
class EditEphemeralConfigResponse;
class EditEphemeralConfigResponse_ResponseList;
class EphConfigRequestList;
class ExecuteCfgCommandRequest;
class ExecuteCfgCommandResponse;
class ExecuteOpCommandRequest;
class ExecuteOpCommandResponse;
class GetEphemeralConfigRequest;
class GetEphemeralConfigResponse;
class GetEphemeralConfigResponse_ResponseList;

enum OperationFormatType {
  OPERATION_FORMAT_JSON = 0,
  OPERATION_FORMAT_XML = 1,
  OPERATION_FORMAT_CLI = 2,
  OperationFormatType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OperationFormatType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OperationFormatType_IsValid(int value);
const OperationFormatType OperationFormatType_MIN = OPERATION_FORMAT_JSON;
const OperationFormatType OperationFormatType_MAX = OPERATION_FORMAT_CLI;
const int OperationFormatType_ARRAYSIZE = OperationFormatType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OperationFormatType_descriptor();
inline const ::std::string& OperationFormatType_Name(OperationFormatType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OperationFormatType_descriptor(), value);
}
inline bool OperationFormatType_Parse(
    const ::std::string& name, OperationFormatType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperationFormatType>(
    OperationFormatType_descriptor(), name, value);
}
enum JunosRpcResponseTypes {
  SUCCESS = 0,
  NOK = 1,
  UNSUPPORTED_PATH = 2,
  INVALID_PATH = 3,
  INVALID_CONFIGURATION = 4,
  UNSUPPORTED_ENCODING = 5,
  JunosRpcResponseTypes_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  JunosRpcResponseTypes_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool JunosRpcResponseTypes_IsValid(int value);
const JunosRpcResponseTypes JunosRpcResponseTypes_MIN = SUCCESS;
const JunosRpcResponseTypes JunosRpcResponseTypes_MAX = UNSUPPORTED_ENCODING;
const int JunosRpcResponseTypes_ARRAYSIZE = JunosRpcResponseTypes_MAX + 1;

const ::google::protobuf::EnumDescriptor* JunosRpcResponseTypes_descriptor();
inline const ::std::string& JunosRpcResponseTypes_Name(JunosRpcResponseTypes value) {
  return ::google::protobuf::internal::NameOfEnum(
    JunosRpcResponseTypes_descriptor(), value);
}
inline bool JunosRpcResponseTypes_Parse(
    const ::std::string& name, JunosRpcResponseTypes* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JunosRpcResponseTypes>(
    JunosRpcResponseTypes_descriptor(), name, value);
}
enum JunosDataEncodingTypes {
  ENCODING_XML = 0,
  ENCODING_JSON = 1,
  JunosDataEncodingTypes_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  JunosDataEncodingTypes_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool JunosDataEncodingTypes_IsValid(int value);
const JunosDataEncodingTypes JunosDataEncodingTypes_MIN = ENCODING_XML;
const JunosDataEncodingTypes JunosDataEncodingTypes_MAX = ENCODING_JSON;
const int JunosDataEncodingTypes_ARRAYSIZE = JunosDataEncodingTypes_MAX + 1;

const ::google::protobuf::EnumDescriptor* JunosDataEncodingTypes_descriptor();
inline const ::std::string& JunosDataEncodingTypes_Name(JunosDataEncodingTypes value) {
  return ::google::protobuf::internal::NameOfEnum(
    JunosDataEncodingTypes_descriptor(), value);
}
inline bool JunosDataEncodingTypes_Parse(
    const ::std::string& name, JunosDataEncodingTypes* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JunosDataEncodingTypes>(
    JunosDataEncodingTypes_descriptor(), name, value);
}
enum ConfigCommands {
  UPDATE_CONFIG = 0,
  REPLACE_CONFIG = 1,
  DELETE_CONFIG = 2,
  ConfigCommands_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConfigCommands_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConfigCommands_IsValid(int value);
const ConfigCommands ConfigCommands_MIN = UPDATE_CONFIG;
const ConfigCommands ConfigCommands_MAX = DELETE_CONFIG;
const int ConfigCommands_ARRAYSIZE = ConfigCommands_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConfigCommands_descriptor();
inline const ::std::string& ConfigCommands_Name(ConfigCommands value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConfigCommands_descriptor(), value);
}
inline bool ConfigCommands_Parse(
    const ::std::string& name, ConfigCommands* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConfigCommands>(
    ConfigCommands_descriptor(), name, value);
}
enum ConfigLoadType {
  CONFIG_LOAD_REPLACE = 0,
  CONFIG_LOAD_MERGE = 1,
  CONFIG_LOAD_OVERRIDE = 2,
  CONFIG_LOAD_UPDATE = 3,
  CONFIG_LOAD_SET = 4,
  ConfigLoadType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConfigLoadType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConfigLoadType_IsValid(int value);
const ConfigLoadType ConfigLoadType_MIN = CONFIG_LOAD_REPLACE;
const ConfigLoadType ConfigLoadType_MAX = CONFIG_LOAD_SET;
const int ConfigLoadType_ARRAYSIZE = ConfigLoadType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConfigLoadType_descriptor();
inline const ::std::string& ConfigLoadType_Name(ConfigLoadType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConfigLoadType_descriptor(), value);
}
inline bool ConfigLoadType_Parse(
    const ::std::string& name, ConfigLoadType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConfigLoadType>(
    ConfigLoadType_descriptor(), name, value);
}
enum ConfigCommitType {
  CONFIG_COMMIT_SYNCHRONIZE = 0,
  CONFIG_COMMIT = 1,
  ConfigCommitType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ConfigCommitType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ConfigCommitType_IsValid(int value);
const ConfigCommitType ConfigCommitType_MIN = CONFIG_COMMIT_SYNCHRONIZE;
const ConfigCommitType ConfigCommitType_MAX = CONFIG_COMMIT;
const int ConfigCommitType_ARRAYSIZE = ConfigCommitType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConfigCommitType_descriptor();
inline const ::std::string& ConfigCommitType_Name(ConfigCommitType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConfigCommitType_descriptor(), value);
}
inline bool ConfigCommitType_Parse(
    const ::std::string& name, ConfigCommitType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConfigCommitType>(
    ConfigCommitType_descriptor(), name, value);
}
// ===================================================================

class ExecuteOpCommandRequest : public ::google::protobuf::Message {
 public:
  ExecuteOpCommandRequest();
  virtual ~ExecuteOpCommandRequest();

  ExecuteOpCommandRequest(const ExecuteOpCommandRequest& from);

  inline ExecuteOpCommandRequest& operator=(const ExecuteOpCommandRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteOpCommandRequest& default_instance();

  enum CommandCase {
    kCliCommand = 2,
    kXmlCommand = 3,
    kJsonCommand = 4,
    COMMAND_NOT_SET = 0,
  };

  void Swap(ExecuteOpCommandRequest* other);

  // implements Message ----------------------------------------------

  inline ExecuteOpCommandRequest* New() const { return New(NULL); }

  ExecuteOpCommandRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecuteOpCommandRequest& from);
  void MergeFrom(const ExecuteOpCommandRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecuteOpCommandRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // optional string cli_command = 2;
  private:
  bool has_cli_command() const;
  public:
  void clear_cli_command();
  static const int kCliCommandFieldNumber = 2;
  const ::std::string& cli_command() const;
  void set_cli_command(const ::std::string& value);
  void set_cli_command(const char* value);
  void set_cli_command(const char* value, size_t size);
  ::std::string* mutable_cli_command();
  ::std::string* release_cli_command();
  void set_allocated_cli_command(::std::string* cli_command);

  // optional string xml_command = 3;
  private:
  bool has_xml_command() const;
  public:
  void clear_xml_command();
  static const int kXmlCommandFieldNumber = 3;
  const ::std::string& xml_command() const;
  void set_xml_command(const ::std::string& value);
  void set_xml_command(const char* value);
  void set_xml_command(const char* value, size_t size);
  ::std::string* mutable_xml_command();
  ::std::string* release_xml_command();
  void set_allocated_xml_command(::std::string* xml_command);

  // optional string json_command = 4;
  private:
  bool has_json_command() const;
  public:
  void clear_json_command();
  static const int kJsonCommandFieldNumber = 4;
  const ::std::string& json_command() const;
  void set_json_command(const ::std::string& value);
  void set_json_command(const char* value);
  void set_json_command(const char* value, size_t size);
  ::std::string* mutable_json_command();
  ::std::string* release_json_command();
  void set_allocated_json_command(::std::string* json_command);

  // optional .management.OperationFormatType out_format = 5;
  void clear_out_format();
  static const int kOutFormatFieldNumber = 5;
  ::management::OperationFormatType out_format() const;
  void set_out_format(::management::OperationFormatType value);

  CommandCase command_case() const;
  // @@protoc_insertion_point(class_scope:management.ExecuteOpCommandRequest)
 private:
  inline void set_has_cli_command();
  inline void set_has_xml_command();
  inline void set_has_json_command();

  inline bool has_command() const;
  void clear_command();
  inline void clear_has_command();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 request_id_;
  int out_format_;
  union CommandUnion {
    CommandUnion() {}
    ::google::protobuf::internal::ArenaStringPtr cli_command_;
    ::google::protobuf::internal::ArenaStringPtr xml_command_;
    ::google::protobuf::internal::ArenaStringPtr json_command_;
  } command_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_mgd_5fservice_2eproto();
  friend void protobuf_AssignDesc_mgd_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mgd_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ExecuteOpCommandRequest* default_instance_;
};
// -------------------------------------------------------------------

class ExecuteOpCommandResponse : public ::google::protobuf::Message {
 public:
  ExecuteOpCommandResponse();
  virtual ~ExecuteOpCommandResponse();

  ExecuteOpCommandResponse(const ExecuteOpCommandResponse& from);

  inline ExecuteOpCommandResponse& operator=(const ExecuteOpCommandResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteOpCommandResponse& default_instance();

  void Swap(ExecuteOpCommandResponse* other);

  // implements Message ----------------------------------------------

  inline ExecuteOpCommandResponse* New() const { return New(NULL); }

  ExecuteOpCommandResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecuteOpCommandResponse& from);
  void MergeFrom(const ExecuteOpCommandResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecuteOpCommandResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // optional string data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional .management.JunosRpcResponseTypes status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::management::JunosRpcResponseTypes status() const;
  void set_status(::management::JunosRpcResponseTypes value);

  // optional string message = 4;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:management.ExecuteOpCommandResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mgd_5fservice_2eproto();
  friend void protobuf_AssignDesc_mgd_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mgd_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ExecuteOpCommandResponse* default_instance_;
};
// -------------------------------------------------------------------

class EphConfigRequestList : public ::google::protobuf::Message {
 public:
  EphConfigRequestList();
  virtual ~EphConfigRequestList();

  EphConfigRequestList(const EphConfigRequestList& from);

  inline EphConfigRequestList& operator=(const EphConfigRequestList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EphConfigRequestList& default_instance();

  void Swap(EphConfigRequestList* other);

  // implements Message ----------------------------------------------

  inline EphConfigRequestList* New() const { return New(NULL); }

  EphConfigRequestList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EphConfigRequestList& from);
  void MergeFrom(const EphConfigRequestList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EphConfigRequestList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string operation_id = 1;
  void clear_operation_id();
  static const int kOperationIdFieldNumber = 1;
  const ::std::string& operation_id() const;
  void set_operation_id(const ::std::string& value);
  void set_operation_id(const char* value);
  void set_operation_id(const char* value, size_t size);
  ::std::string* mutable_operation_id();
  ::std::string* release_operation_id();
  void set_allocated_operation_id(::std::string* operation_id);

  // optional string path = 2;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:management.EphConfigRequestList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr operation_id_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mgd_5fservice_2eproto();
  friend void protobuf_AssignDesc_mgd_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mgd_5fservice_2eproto();

  void InitAsDefaultInstance();
  static EphConfigRequestList* default_instance_;
};
// -------------------------------------------------------------------

class GetEphemeralConfigRequest : public ::google::protobuf::Message {
 public:
  GetEphemeralConfigRequest();
  virtual ~GetEphemeralConfigRequest();

  GetEphemeralConfigRequest(const GetEphemeralConfigRequest& from);

  inline GetEphemeralConfigRequest& operator=(const GetEphemeralConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEphemeralConfigRequest& default_instance();

  void Swap(GetEphemeralConfigRequest* other);

  // implements Message ----------------------------------------------

  inline GetEphemeralConfigRequest* New() const { return New(NULL); }

  GetEphemeralConfigRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetEphemeralConfigRequest& from);
  void MergeFrom(const GetEphemeralConfigRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetEphemeralConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // optional .management.JunosDataEncodingTypes encoding = 2;
  void clear_encoding();
  static const int kEncodingFieldNumber = 2;
  ::management::JunosDataEncodingTypes encoding() const;
  void set_encoding(::management::JunosDataEncodingTypes value);

  // repeated .management.EphConfigRequestList eph_config_requests = 3;
  int eph_config_requests_size() const;
  void clear_eph_config_requests();
  static const int kEphConfigRequestsFieldNumber = 3;
  const ::management::EphConfigRequestList& eph_config_requests(int index) const;
  ::management::EphConfigRequestList* mutable_eph_config_requests(int index);
  ::management::EphConfigRequestList* add_eph_config_requests();
  ::google::protobuf::RepeatedPtrField< ::management::EphConfigRequestList >*
      mutable_eph_config_requests();
  const ::google::protobuf::RepeatedPtrField< ::management::EphConfigRequestList >&
      eph_config_requests() const;

  // optional string eph_instance_name = 4;
  void clear_eph_instance_name();
  static const int kEphInstanceNameFieldNumber = 4;
  const ::std::string& eph_instance_name() const;
  void set_eph_instance_name(const ::std::string& value);
  void set_eph_instance_name(const char* value);
  void set_eph_instance_name(const char* value, size_t size);
  ::std::string* mutable_eph_instance_name();
  ::std::string* release_eph_instance_name();
  void set_allocated_eph_instance_name(::std::string* eph_instance_name);

  // optional bool merge_view = 5;
  void clear_merge_view();
  static const int kMergeViewFieldNumber = 5;
  bool merge_view() const;
  void set_merge_view(bool value);

  // @@protoc_insertion_point(class_scope:management.GetEphemeralConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::RepeatedPtrField< ::management::EphConfigRequestList > eph_config_requests_;
  int encoding_;
  bool merge_view_;
  ::google::protobuf::internal::ArenaStringPtr eph_instance_name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mgd_5fservice_2eproto();
  friend void protobuf_AssignDesc_mgd_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mgd_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetEphemeralConfigRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetEphemeralConfigResponse_ResponseList : public ::google::protobuf::Message {
 public:
  GetEphemeralConfigResponse_ResponseList();
  virtual ~GetEphemeralConfigResponse_ResponseList();

  GetEphemeralConfigResponse_ResponseList(const GetEphemeralConfigResponse_ResponseList& from);

  inline GetEphemeralConfigResponse_ResponseList& operator=(const GetEphemeralConfigResponse_ResponseList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEphemeralConfigResponse_ResponseList& default_instance();

  void Swap(GetEphemeralConfigResponse_ResponseList* other);

  // implements Message ----------------------------------------------

  inline GetEphemeralConfigResponse_ResponseList* New() const { return New(NULL); }

  GetEphemeralConfigResponse_ResponseList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetEphemeralConfigResponse_ResponseList& from);
  void MergeFrom(const GetEphemeralConfigResponse_ResponseList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetEphemeralConfigResponse_ResponseList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string operation_id = 1;
  void clear_operation_id();
  static const int kOperationIdFieldNumber = 1;
  const ::std::string& operation_id() const;
  void set_operation_id(const ::std::string& value);
  void set_operation_id(const char* value);
  void set_operation_id(const char* value, size_t size);
  ::std::string* mutable_operation_id();
  ::std::string* release_operation_id();
  void set_allocated_operation_id(::std::string* operation_id);

  // optional string path = 2;
  void clear_path();
  static const int kPathFieldNumber = 2;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional string value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional .management.JunosRpcResponseTypes status = 4;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::management::JunosRpcResponseTypes status() const;
  void set_status(::management::JunosRpcResponseTypes value);

  // optional string message = 5;
  void clear_message();
  static const int kMessageFieldNumber = 5;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:management.GetEphemeralConfigResponse.ResponseList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr operation_id_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mgd_5fservice_2eproto();
  friend void protobuf_AssignDesc_mgd_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mgd_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetEphemeralConfigResponse_ResponseList* default_instance_;
};
// -------------------------------------------------------------------

class GetEphemeralConfigResponse : public ::google::protobuf::Message {
 public:
  GetEphemeralConfigResponse();
  virtual ~GetEphemeralConfigResponse();

  GetEphemeralConfigResponse(const GetEphemeralConfigResponse& from);

  inline GetEphemeralConfigResponse& operator=(const GetEphemeralConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEphemeralConfigResponse& default_instance();

  void Swap(GetEphemeralConfigResponse* other);

  // implements Message ----------------------------------------------

  inline GetEphemeralConfigResponse* New() const { return New(NULL); }

  GetEphemeralConfigResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetEphemeralConfigResponse& from);
  void MergeFrom(const GetEphemeralConfigResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetEphemeralConfigResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetEphemeralConfigResponse_ResponseList ResponseList;

  // accessors -------------------------------------------------------

  // optional uint64 request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // repeated .management.GetEphemeralConfigResponse.ResponseList response = 2;
  int response_size() const;
  void clear_response();
  static const int kResponseFieldNumber = 2;
  const ::management::GetEphemeralConfigResponse_ResponseList& response(int index) const;
  ::management::GetEphemeralConfigResponse_ResponseList* mutable_response(int index);
  ::management::GetEphemeralConfigResponse_ResponseList* add_response();
  ::google::protobuf::RepeatedPtrField< ::management::GetEphemeralConfigResponse_ResponseList >*
      mutable_response();
  const ::google::protobuf::RepeatedPtrField< ::management::GetEphemeralConfigResponse_ResponseList >&
      response() const;

  // @@protoc_insertion_point(class_scope:management.GetEphemeralConfigResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::RepeatedPtrField< ::management::GetEphemeralConfigResponse_ResponseList > response_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mgd_5fservice_2eproto();
  friend void protobuf_AssignDesc_mgd_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mgd_5fservice_2eproto();

  void InitAsDefaultInstance();
  static GetEphemeralConfigResponse* default_instance_;
};
// -------------------------------------------------------------------

class EditEphemeralConfigRequest_ConfigOperationList : public ::google::protobuf::Message {
 public:
  EditEphemeralConfigRequest_ConfigOperationList();
  virtual ~EditEphemeralConfigRequest_ConfigOperationList();

  EditEphemeralConfigRequest_ConfigOperationList(const EditEphemeralConfigRequest_ConfigOperationList& from);

  inline EditEphemeralConfigRequest_ConfigOperationList& operator=(const EditEphemeralConfigRequest_ConfigOperationList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditEphemeralConfigRequest_ConfigOperationList& default_instance();

  enum ValueCase {
    kXmlConfig = 4,
    kJsonConfig = 5,
    VALUE_NOT_SET = 0,
  };

  void Swap(EditEphemeralConfigRequest_ConfigOperationList* other);

  // implements Message ----------------------------------------------

  inline EditEphemeralConfigRequest_ConfigOperationList* New() const { return New(NULL); }

  EditEphemeralConfigRequest_ConfigOperationList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EditEphemeralConfigRequest_ConfigOperationList& from);
  void MergeFrom(const EditEphemeralConfigRequest_ConfigOperationList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EditEphemeralConfigRequest_ConfigOperationList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string operation_id = 1;
  void clear_operation_id();
  static const int kOperationIdFieldNumber = 1;
  const ::std::string& operation_id() const;
  void set_operation_id(const ::std::string& value);
  void set_operation_id(const char* value);
  void set_operation_id(const char* value, size_t size);
  ::std::string* mutable_operation_id();
  ::std::string* release_operation_id();
  void set_allocated_operation_id(::std::string* operation_id);

  // optional .management.ConfigCommands operation = 2;
  void clear_operation();
  static const int kOperationFieldNumber = 2;
  ::management::ConfigCommands operation() const;
  void set_operation(::management::ConfigCommands value);

  // optional string path = 3;
  void clear_path();
  static const int kPathFieldNumber = 3;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional string xml_config = 4;
  private:
  bool has_xml_config() const;
  public:
  void clear_xml_config();
  static const int kXmlConfigFieldNumber = 4;
  const ::std::string& xml_config() const;
  void set_xml_config(const ::std::string& value);
  void set_xml_config(const char* value);
  void set_xml_config(const char* value, size_t size);
  ::std::string* mutable_xml_config();
  ::std::string* release_xml_config();
  void set_allocated_xml_config(::std::string* xml_config);

  // optional string json_config = 5;
  private:
  bool has_json_config() const;
  public:
  void clear_json_config();
  static const int kJsonConfigFieldNumber = 5;
  const ::std::string& json_config() const;
  void set_json_config(const ::std::string& value);
  void set_json_config(const char* value);
  void set_json_config(const char* value, size_t size);
  ::std::string* mutable_json_config();
  ::std::string* release_json_config();
  void set_allocated_json_config(::std::string* json_config);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:management.EditEphemeralConfigRequest.ConfigOperationList)
 private:
  inline void set_has_xml_config();
  inline void set_has_json_config();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr operation_id_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  int operation_;
  union ValueUnion {
    ValueUnion() {}
    ::google::protobuf::internal::ArenaStringPtr xml_config_;
    ::google::protobuf::internal::ArenaStringPtr json_config_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_mgd_5fservice_2eproto();
  friend void protobuf_AssignDesc_mgd_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mgd_5fservice_2eproto();

  void InitAsDefaultInstance();
  static EditEphemeralConfigRequest_ConfigOperationList* default_instance_;
};
// -------------------------------------------------------------------

class EditEphemeralConfigRequest : public ::google::protobuf::Message {
 public:
  EditEphemeralConfigRequest();
  virtual ~EditEphemeralConfigRequest();

  EditEphemeralConfigRequest(const EditEphemeralConfigRequest& from);

  inline EditEphemeralConfigRequest& operator=(const EditEphemeralConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditEphemeralConfigRequest& default_instance();

  void Swap(EditEphemeralConfigRequest* other);

  // implements Message ----------------------------------------------

  inline EditEphemeralConfigRequest* New() const { return New(NULL); }

  EditEphemeralConfigRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EditEphemeralConfigRequest& from);
  void MergeFrom(const EditEphemeralConfigRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EditEphemeralConfigRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef EditEphemeralConfigRequest_ConfigOperationList ConfigOperationList;

  // accessors -------------------------------------------------------

  // optional uint64 request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // repeated .management.EditEphemeralConfigRequest.ConfigOperationList eph_config_operations = 3;
  int eph_config_operations_size() const;
  void clear_eph_config_operations();
  static const int kEphConfigOperationsFieldNumber = 3;
  const ::management::EditEphemeralConfigRequest_ConfigOperationList& eph_config_operations(int index) const;
  ::management::EditEphemeralConfigRequest_ConfigOperationList* mutable_eph_config_operations(int index);
  ::management::EditEphemeralConfigRequest_ConfigOperationList* add_eph_config_operations();
  ::google::protobuf::RepeatedPtrField< ::management::EditEphemeralConfigRequest_ConfigOperationList >*
      mutable_eph_config_operations();
  const ::google::protobuf::RepeatedPtrField< ::management::EditEphemeralConfigRequest_ConfigOperationList >&
      eph_config_operations() const;

  // optional string eph_instance_name = 4;
  void clear_eph_instance_name();
  static const int kEphInstanceNameFieldNumber = 4;
  const ::std::string& eph_instance_name() const;
  void set_eph_instance_name(const ::std::string& value);
  void set_eph_instance_name(const char* value);
  void set_eph_instance_name(const char* value, size_t size);
  ::std::string* mutable_eph_instance_name();
  ::std::string* release_eph_instance_name();
  void set_allocated_eph_instance_name(::std::string* eph_instance_name);

  // optional bool enable_config_validation = 5;
  void clear_enable_config_validation();
  static const int kEnableConfigValidationFieldNumber = 5;
  bool enable_config_validation() const;
  void set_enable_config_validation(bool value);

  // @@protoc_insertion_point(class_scope:management.EditEphemeralConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::RepeatedPtrField< ::management::EditEphemeralConfigRequest_ConfigOperationList > eph_config_operations_;
  ::google::protobuf::internal::ArenaStringPtr eph_instance_name_;
  bool enable_config_validation_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mgd_5fservice_2eproto();
  friend void protobuf_AssignDesc_mgd_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mgd_5fservice_2eproto();

  void InitAsDefaultInstance();
  static EditEphemeralConfigRequest* default_instance_;
};
// -------------------------------------------------------------------

class EditEphemeralConfigResponse_ResponseList : public ::google::protobuf::Message {
 public:
  EditEphemeralConfigResponse_ResponseList();
  virtual ~EditEphemeralConfigResponse_ResponseList();

  EditEphemeralConfigResponse_ResponseList(const EditEphemeralConfigResponse_ResponseList& from);

  inline EditEphemeralConfigResponse_ResponseList& operator=(const EditEphemeralConfigResponse_ResponseList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditEphemeralConfigResponse_ResponseList& default_instance();

  void Swap(EditEphemeralConfigResponse_ResponseList* other);

  // implements Message ----------------------------------------------

  inline EditEphemeralConfigResponse_ResponseList* New() const { return New(NULL); }

  EditEphemeralConfigResponse_ResponseList* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EditEphemeralConfigResponse_ResponseList& from);
  void MergeFrom(const EditEphemeralConfigResponse_ResponseList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EditEphemeralConfigResponse_ResponseList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string operation_id = 1;
  void clear_operation_id();
  static const int kOperationIdFieldNumber = 1;
  const ::std::string& operation_id() const;
  void set_operation_id(const ::std::string& value);
  void set_operation_id(const char* value);
  void set_operation_id(const char* value, size_t size);
  ::std::string* mutable_operation_id();
  ::std::string* release_operation_id();
  void set_allocated_operation_id(::std::string* operation_id);

  // optional .management.JunosRpcResponseTypes status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::management::JunosRpcResponseTypes status() const;
  void set_status(::management::JunosRpcResponseTypes value);

  // optional string message = 3;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:management.EditEphemeralConfigResponse.ResponseList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr operation_id_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mgd_5fservice_2eproto();
  friend void protobuf_AssignDesc_mgd_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mgd_5fservice_2eproto();

  void InitAsDefaultInstance();
  static EditEphemeralConfigResponse_ResponseList* default_instance_;
};
// -------------------------------------------------------------------

class EditEphemeralConfigResponse : public ::google::protobuf::Message {
 public:
  EditEphemeralConfigResponse();
  virtual ~EditEphemeralConfigResponse();

  EditEphemeralConfigResponse(const EditEphemeralConfigResponse& from);

  inline EditEphemeralConfigResponse& operator=(const EditEphemeralConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditEphemeralConfigResponse& default_instance();

  void Swap(EditEphemeralConfigResponse* other);

  // implements Message ----------------------------------------------

  inline EditEphemeralConfigResponse* New() const { return New(NULL); }

  EditEphemeralConfigResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EditEphemeralConfigResponse& from);
  void MergeFrom(const EditEphemeralConfigResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EditEphemeralConfigResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef EditEphemeralConfigResponse_ResponseList ResponseList;

  // accessors -------------------------------------------------------

  // optional uint64 request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // repeated .management.EditEphemeralConfigResponse.ResponseList response = 2;
  int response_size() const;
  void clear_response();
  static const int kResponseFieldNumber = 2;
  const ::management::EditEphemeralConfigResponse_ResponseList& response(int index) const;
  ::management::EditEphemeralConfigResponse_ResponseList* mutable_response(int index);
  ::management::EditEphemeralConfigResponse_ResponseList* add_response();
  ::google::protobuf::RepeatedPtrField< ::management::EditEphemeralConfigResponse_ResponseList >*
      mutable_response();
  const ::google::protobuf::RepeatedPtrField< ::management::EditEphemeralConfigResponse_ResponseList >&
      response() const;

  // @@protoc_insertion_point(class_scope:management.EditEphemeralConfigResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::RepeatedPtrField< ::management::EditEphemeralConfigResponse_ResponseList > response_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mgd_5fservice_2eproto();
  friend void protobuf_AssignDesc_mgd_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mgd_5fservice_2eproto();

  void InitAsDefaultInstance();
  static EditEphemeralConfigResponse* default_instance_;
};
// -------------------------------------------------------------------

class ConfigCommit : public ::google::protobuf::Message {
 public:
  ConfigCommit();
  virtual ~ConfigCommit();

  ConfigCommit(const ConfigCommit& from);

  inline ConfigCommit& operator=(const ConfigCommit& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigCommit& default_instance();

  void Swap(ConfigCommit* other);

  // implements Message ----------------------------------------------

  inline ConfigCommit* New() const { return New(NULL); }

  ConfigCommit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfigCommit& from);
  void MergeFrom(const ConfigCommit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfigCommit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .management.ConfigCommitType commit_type = 1;
  void clear_commit_type();
  static const int kCommitTypeFieldNumber = 1;
  ::management::ConfigCommitType commit_type() const;
  void set_commit_type(::management::ConfigCommitType value);

  // optional string comment = 2;
  void clear_comment();
  static const int kCommentFieldNumber = 2;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:management.ConfigCommit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  int commit_type_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mgd_5fservice_2eproto();
  friend void protobuf_AssignDesc_mgd_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mgd_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ConfigCommit* default_instance_;
};
// -------------------------------------------------------------------

class ExecuteCfgCommandRequest : public ::google::protobuf::Message {
 public:
  ExecuteCfgCommandRequest();
  virtual ~ExecuteCfgCommandRequest();

  ExecuteCfgCommandRequest(const ExecuteCfgCommandRequest& from);

  inline ExecuteCfgCommandRequest& operator=(const ExecuteCfgCommandRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteCfgCommandRequest& default_instance();

  enum ConfigCase {
    kXmlConfig = 2,
    kJsonConfig = 3,
    kTextConfig = 4,
    CONFIG_NOT_SET = 0,
  };

  void Swap(ExecuteCfgCommandRequest* other);

  // implements Message ----------------------------------------------

  inline ExecuteCfgCommandRequest* New() const { return New(NULL); }

  ExecuteCfgCommandRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecuteCfgCommandRequest& from);
  void MergeFrom(const ExecuteCfgCommandRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecuteCfgCommandRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // optional string xml_config = 2;
  private:
  bool has_xml_config() const;
  public:
  void clear_xml_config();
  static const int kXmlConfigFieldNumber = 2;
  const ::std::string& xml_config() const;
  void set_xml_config(const ::std::string& value);
  void set_xml_config(const char* value);
  void set_xml_config(const char* value, size_t size);
  ::std::string* mutable_xml_config();
  ::std::string* release_xml_config();
  void set_allocated_xml_config(::std::string* xml_config);

  // optional string json_config = 3;
  private:
  bool has_json_config() const;
  public:
  void clear_json_config();
  static const int kJsonConfigFieldNumber = 3;
  const ::std::string& json_config() const;
  void set_json_config(const ::std::string& value);
  void set_json_config(const char* value);
  void set_json_config(const char* value, size_t size);
  ::std::string* mutable_json_config();
  ::std::string* release_json_config();
  void set_allocated_json_config(::std::string* json_config);

  // optional string text_config = 4;
  private:
  bool has_text_config() const;
  public:
  void clear_text_config();
  static const int kTextConfigFieldNumber = 4;
  const ::std::string& text_config() const;
  void set_text_config(const ::std::string& value);
  void set_text_config(const char* value);
  void set_text_config(const char* value, size_t size);
  ::std::string* mutable_text_config();
  ::std::string* release_text_config();
  void set_allocated_text_config(::std::string* text_config);

  // optional .management.ConfigLoadType load_type = 5;
  void clear_load_type();
  static const int kLoadTypeFieldNumber = 5;
  ::management::ConfigLoadType load_type() const;
  void set_load_type(::management::ConfigLoadType value);

  // optional .management.ConfigCommit commit = 6;
  bool has_commit() const;
  void clear_commit();
  static const int kCommitFieldNumber = 6;
  const ::management::ConfigCommit& commit() const;
  ::management::ConfigCommit* mutable_commit();
  ::management::ConfigCommit* release_commit();
  void set_allocated_commit(::management::ConfigCommit* commit);

  ConfigCase config_case() const;
  // @@protoc_insertion_point(class_scope:management.ExecuteCfgCommandRequest)
 private:
  inline void set_has_xml_config();
  inline void set_has_json_config();
  inline void set_has_text_config();

  inline bool has_config() const;
  void clear_config();
  inline void clear_has_config();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 request_id_;
  ::management::ConfigCommit* commit_;
  int load_type_;
  union ConfigUnion {
    ConfigUnion() {}
    ::google::protobuf::internal::ArenaStringPtr xml_config_;
    ::google::protobuf::internal::ArenaStringPtr json_config_;
    ::google::protobuf::internal::ArenaStringPtr text_config_;
  } config_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_mgd_5fservice_2eproto();
  friend void protobuf_AssignDesc_mgd_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mgd_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ExecuteCfgCommandRequest* default_instance_;
};
// -------------------------------------------------------------------

class ExecuteCfgCommandResponse : public ::google::protobuf::Message {
 public:
  ExecuteCfgCommandResponse();
  virtual ~ExecuteCfgCommandResponse();

  ExecuteCfgCommandResponse(const ExecuteCfgCommandResponse& from);

  inline ExecuteCfgCommandResponse& operator=(const ExecuteCfgCommandResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteCfgCommandResponse& default_instance();

  void Swap(ExecuteCfgCommandResponse* other);

  // implements Message ----------------------------------------------

  inline ExecuteCfgCommandResponse* New() const { return New(NULL); }

  ExecuteCfgCommandResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecuteCfgCommandResponse& from);
  void MergeFrom(const ExecuteCfgCommandResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExecuteCfgCommandResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 request_id = 1;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // optional .management.JunosRpcResponseTypes status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::management::JunosRpcResponseTypes status() const;
  void set_status(::management::JunosRpcResponseTypes value);

  // optional string message = 3;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:management.ExecuteCfgCommandResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  int status_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_mgd_5fservice_2eproto();
  friend void protobuf_AssignDesc_mgd_5fservice_2eproto();
  friend void protobuf_ShutdownFile_mgd_5fservice_2eproto();

  void InitAsDefaultInstance();
  static ExecuteCfgCommandResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteOpCommandRequest

// optional uint64 request_id = 1;
inline void ExecuteOpCommandRequest::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ExecuteOpCommandRequest::request_id() const {
  // @@protoc_insertion_point(field_get:management.ExecuteOpCommandRequest.request_id)
  return request_id_;
}
inline void ExecuteOpCommandRequest::set_request_id(::google::protobuf::uint64 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:management.ExecuteOpCommandRequest.request_id)
}

// optional string cli_command = 2;
inline bool ExecuteOpCommandRequest::has_cli_command() const {
  return command_case() == kCliCommand;
}
inline void ExecuteOpCommandRequest::set_has_cli_command() {
  _oneof_case_[0] = kCliCommand;
}
inline void ExecuteOpCommandRequest::clear_cli_command() {
  if (has_cli_command()) {
    command_.cli_command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_command();
  }
}
inline const ::std::string& ExecuteOpCommandRequest::cli_command() const {
  // @@protoc_insertion_point(field_get:management.ExecuteOpCommandRequest.cli_command)
  if (has_cli_command()) {
    return command_.cli_command_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ExecuteOpCommandRequest::set_cli_command(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:management.ExecuteOpCommandRequest.cli_command)
  if (!has_cli_command()) {
    clear_command();
    set_has_cli_command();
    command_.cli_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  command_.cli_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.ExecuteOpCommandRequest.cli_command)
}
inline void ExecuteOpCommandRequest::set_cli_command(const char* value) {
  if (!has_cli_command()) {
    clear_command();
    set_has_cli_command();
    command_.cli_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  command_.cli_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.ExecuteOpCommandRequest.cli_command)
}
inline void ExecuteOpCommandRequest::set_cli_command(const char* value, size_t size) {
  if (!has_cli_command()) {
    clear_command();
    set_has_cli_command();
    command_.cli_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  command_.cli_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.ExecuteOpCommandRequest.cli_command)
}
inline ::std::string* ExecuteOpCommandRequest::mutable_cli_command() {
  if (!has_cli_command()) {
    clear_command();
    set_has_cli_command();
    command_.cli_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:management.ExecuteOpCommandRequest.cli_command)
  return command_.cli_command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteOpCommandRequest::release_cli_command() {
  if (has_cli_command()) {
    clear_has_command();
    return command_.cli_command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ExecuteOpCommandRequest::set_allocated_cli_command(::std::string* cli_command) {
  if (!has_cli_command()) {
    command_.cli_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_command();
  if (cli_command != NULL) {
    set_has_cli_command();
    command_.cli_command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        cli_command);
  }
  // @@protoc_insertion_point(field_set_allocated:management.ExecuteOpCommandRequest.cli_command)
}

// optional string xml_command = 3;
inline bool ExecuteOpCommandRequest::has_xml_command() const {
  return command_case() == kXmlCommand;
}
inline void ExecuteOpCommandRequest::set_has_xml_command() {
  _oneof_case_[0] = kXmlCommand;
}
inline void ExecuteOpCommandRequest::clear_xml_command() {
  if (has_xml_command()) {
    command_.xml_command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_command();
  }
}
inline const ::std::string& ExecuteOpCommandRequest::xml_command() const {
  // @@protoc_insertion_point(field_get:management.ExecuteOpCommandRequest.xml_command)
  if (has_xml_command()) {
    return command_.xml_command_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ExecuteOpCommandRequest::set_xml_command(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:management.ExecuteOpCommandRequest.xml_command)
  if (!has_xml_command()) {
    clear_command();
    set_has_xml_command();
    command_.xml_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  command_.xml_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.ExecuteOpCommandRequest.xml_command)
}
inline void ExecuteOpCommandRequest::set_xml_command(const char* value) {
  if (!has_xml_command()) {
    clear_command();
    set_has_xml_command();
    command_.xml_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  command_.xml_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.ExecuteOpCommandRequest.xml_command)
}
inline void ExecuteOpCommandRequest::set_xml_command(const char* value, size_t size) {
  if (!has_xml_command()) {
    clear_command();
    set_has_xml_command();
    command_.xml_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  command_.xml_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.ExecuteOpCommandRequest.xml_command)
}
inline ::std::string* ExecuteOpCommandRequest::mutable_xml_command() {
  if (!has_xml_command()) {
    clear_command();
    set_has_xml_command();
    command_.xml_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:management.ExecuteOpCommandRequest.xml_command)
  return command_.xml_command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteOpCommandRequest::release_xml_command() {
  if (has_xml_command()) {
    clear_has_command();
    return command_.xml_command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ExecuteOpCommandRequest::set_allocated_xml_command(::std::string* xml_command) {
  if (!has_xml_command()) {
    command_.xml_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_command();
  if (xml_command != NULL) {
    set_has_xml_command();
    command_.xml_command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        xml_command);
  }
  // @@protoc_insertion_point(field_set_allocated:management.ExecuteOpCommandRequest.xml_command)
}

// optional string json_command = 4;
inline bool ExecuteOpCommandRequest::has_json_command() const {
  return command_case() == kJsonCommand;
}
inline void ExecuteOpCommandRequest::set_has_json_command() {
  _oneof_case_[0] = kJsonCommand;
}
inline void ExecuteOpCommandRequest::clear_json_command() {
  if (has_json_command()) {
    command_.json_command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_command();
  }
}
inline const ::std::string& ExecuteOpCommandRequest::json_command() const {
  // @@protoc_insertion_point(field_get:management.ExecuteOpCommandRequest.json_command)
  if (has_json_command()) {
    return command_.json_command_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ExecuteOpCommandRequest::set_json_command(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:management.ExecuteOpCommandRequest.json_command)
  if (!has_json_command()) {
    clear_command();
    set_has_json_command();
    command_.json_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  command_.json_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.ExecuteOpCommandRequest.json_command)
}
inline void ExecuteOpCommandRequest::set_json_command(const char* value) {
  if (!has_json_command()) {
    clear_command();
    set_has_json_command();
    command_.json_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  command_.json_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.ExecuteOpCommandRequest.json_command)
}
inline void ExecuteOpCommandRequest::set_json_command(const char* value, size_t size) {
  if (!has_json_command()) {
    clear_command();
    set_has_json_command();
    command_.json_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  command_.json_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.ExecuteOpCommandRequest.json_command)
}
inline ::std::string* ExecuteOpCommandRequest::mutable_json_command() {
  if (!has_json_command()) {
    clear_command();
    set_has_json_command();
    command_.json_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:management.ExecuteOpCommandRequest.json_command)
  return command_.json_command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteOpCommandRequest::release_json_command() {
  if (has_json_command()) {
    clear_has_command();
    return command_.json_command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ExecuteOpCommandRequest::set_allocated_json_command(::std::string* json_command) {
  if (!has_json_command()) {
    command_.json_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_command();
  if (json_command != NULL) {
    set_has_json_command();
    command_.json_command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        json_command);
  }
  // @@protoc_insertion_point(field_set_allocated:management.ExecuteOpCommandRequest.json_command)
}

// optional .management.OperationFormatType out_format = 5;
inline void ExecuteOpCommandRequest::clear_out_format() {
  out_format_ = 0;
}
inline ::management::OperationFormatType ExecuteOpCommandRequest::out_format() const {
  // @@protoc_insertion_point(field_get:management.ExecuteOpCommandRequest.out_format)
  return static_cast< ::management::OperationFormatType >(out_format_);
}
inline void ExecuteOpCommandRequest::set_out_format(::management::OperationFormatType value) {
  
  out_format_ = value;
  // @@protoc_insertion_point(field_set:management.ExecuteOpCommandRequest.out_format)
}

inline bool ExecuteOpCommandRequest::has_command() const {
  return command_case() != COMMAND_NOT_SET;
}
inline void ExecuteOpCommandRequest::clear_has_command() {
  _oneof_case_[0] = COMMAND_NOT_SET;
}
inline ExecuteOpCommandRequest::CommandCase ExecuteOpCommandRequest::command_case() const {
  return ExecuteOpCommandRequest::CommandCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ExecuteOpCommandResponse

// optional uint64 request_id = 1;
inline void ExecuteOpCommandResponse::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ExecuteOpCommandResponse::request_id() const {
  // @@protoc_insertion_point(field_get:management.ExecuteOpCommandResponse.request_id)
  return request_id_;
}
inline void ExecuteOpCommandResponse::set_request_id(::google::protobuf::uint64 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:management.ExecuteOpCommandResponse.request_id)
}

// optional string data = 2;
inline void ExecuteOpCommandResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteOpCommandResponse::data() const {
  // @@protoc_insertion_point(field_get:management.ExecuteOpCommandResponse.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteOpCommandResponse::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.ExecuteOpCommandResponse.data)
}
inline void ExecuteOpCommandResponse::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.ExecuteOpCommandResponse.data)
}
inline void ExecuteOpCommandResponse::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.ExecuteOpCommandResponse.data)
}
inline ::std::string* ExecuteOpCommandResponse::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:management.ExecuteOpCommandResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteOpCommandResponse::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteOpCommandResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:management.ExecuteOpCommandResponse.data)
}

// optional .management.JunosRpcResponseTypes status = 3;
inline void ExecuteOpCommandResponse::clear_status() {
  status_ = 0;
}
inline ::management::JunosRpcResponseTypes ExecuteOpCommandResponse::status() const {
  // @@protoc_insertion_point(field_get:management.ExecuteOpCommandResponse.status)
  return static_cast< ::management::JunosRpcResponseTypes >(status_);
}
inline void ExecuteOpCommandResponse::set_status(::management::JunosRpcResponseTypes value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:management.ExecuteOpCommandResponse.status)
}

// optional string message = 4;
inline void ExecuteOpCommandResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteOpCommandResponse::message() const {
  // @@protoc_insertion_point(field_get:management.ExecuteOpCommandResponse.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteOpCommandResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.ExecuteOpCommandResponse.message)
}
inline void ExecuteOpCommandResponse::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.ExecuteOpCommandResponse.message)
}
inline void ExecuteOpCommandResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.ExecuteOpCommandResponse.message)
}
inline ::std::string* ExecuteOpCommandResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:management.ExecuteOpCommandResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteOpCommandResponse::release_message() {
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteOpCommandResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:management.ExecuteOpCommandResponse.message)
}

// -------------------------------------------------------------------

// EphConfigRequestList

// optional string operation_id = 1;
inline void EphConfigRequestList::clear_operation_id() {
  operation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EphConfigRequestList::operation_id() const {
  // @@protoc_insertion_point(field_get:management.EphConfigRequestList.operation_id)
  return operation_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EphConfigRequestList::set_operation_id(const ::std::string& value) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.EphConfigRequestList.operation_id)
}
inline void EphConfigRequestList::set_operation_id(const char* value) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.EphConfigRequestList.operation_id)
}
inline void EphConfigRequestList::set_operation_id(const char* value, size_t size) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.EphConfigRequestList.operation_id)
}
inline ::std::string* EphConfigRequestList::mutable_operation_id() {
  
  // @@protoc_insertion_point(field_mutable:management.EphConfigRequestList.operation_id)
  return operation_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EphConfigRequestList::release_operation_id() {
  
  return operation_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EphConfigRequestList::set_allocated_operation_id(::std::string* operation_id) {
  if (operation_id != NULL) {
    
  } else {
    
  }
  operation_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation_id);
  // @@protoc_insertion_point(field_set_allocated:management.EphConfigRequestList.operation_id)
}

// optional string path = 2;
inline void EphConfigRequestList::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EphConfigRequestList::path() const {
  // @@protoc_insertion_point(field_get:management.EphConfigRequestList.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EphConfigRequestList::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.EphConfigRequestList.path)
}
inline void EphConfigRequestList::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.EphConfigRequestList.path)
}
inline void EphConfigRequestList::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.EphConfigRequestList.path)
}
inline ::std::string* EphConfigRequestList::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:management.EphConfigRequestList.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EphConfigRequestList::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EphConfigRequestList::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:management.EphConfigRequestList.path)
}

// -------------------------------------------------------------------

// GetEphemeralConfigRequest

// optional uint64 request_id = 1;
inline void GetEphemeralConfigRequest::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetEphemeralConfigRequest::request_id() const {
  // @@protoc_insertion_point(field_get:management.GetEphemeralConfigRequest.request_id)
  return request_id_;
}
inline void GetEphemeralConfigRequest::set_request_id(::google::protobuf::uint64 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:management.GetEphemeralConfigRequest.request_id)
}

// optional .management.JunosDataEncodingTypes encoding = 2;
inline void GetEphemeralConfigRequest::clear_encoding() {
  encoding_ = 0;
}
inline ::management::JunosDataEncodingTypes GetEphemeralConfigRequest::encoding() const {
  // @@protoc_insertion_point(field_get:management.GetEphemeralConfigRequest.encoding)
  return static_cast< ::management::JunosDataEncodingTypes >(encoding_);
}
inline void GetEphemeralConfigRequest::set_encoding(::management::JunosDataEncodingTypes value) {
  
  encoding_ = value;
  // @@protoc_insertion_point(field_set:management.GetEphemeralConfigRequest.encoding)
}

// repeated .management.EphConfigRequestList eph_config_requests = 3;
inline int GetEphemeralConfigRequest::eph_config_requests_size() const {
  return eph_config_requests_.size();
}
inline void GetEphemeralConfigRequest::clear_eph_config_requests() {
  eph_config_requests_.Clear();
}
inline const ::management::EphConfigRequestList& GetEphemeralConfigRequest::eph_config_requests(int index) const {
  // @@protoc_insertion_point(field_get:management.GetEphemeralConfigRequest.eph_config_requests)
  return eph_config_requests_.Get(index);
}
inline ::management::EphConfigRequestList* GetEphemeralConfigRequest::mutable_eph_config_requests(int index) {
  // @@protoc_insertion_point(field_mutable:management.GetEphemeralConfigRequest.eph_config_requests)
  return eph_config_requests_.Mutable(index);
}
inline ::management::EphConfigRequestList* GetEphemeralConfigRequest::add_eph_config_requests() {
  // @@protoc_insertion_point(field_add:management.GetEphemeralConfigRequest.eph_config_requests)
  return eph_config_requests_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::management::EphConfigRequestList >*
GetEphemeralConfigRequest::mutable_eph_config_requests() {
  // @@protoc_insertion_point(field_mutable_list:management.GetEphemeralConfigRequest.eph_config_requests)
  return &eph_config_requests_;
}
inline const ::google::protobuf::RepeatedPtrField< ::management::EphConfigRequestList >&
GetEphemeralConfigRequest::eph_config_requests() const {
  // @@protoc_insertion_point(field_list:management.GetEphemeralConfigRequest.eph_config_requests)
  return eph_config_requests_;
}

// optional string eph_instance_name = 4;
inline void GetEphemeralConfigRequest::clear_eph_instance_name() {
  eph_instance_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetEphemeralConfigRequest::eph_instance_name() const {
  // @@protoc_insertion_point(field_get:management.GetEphemeralConfigRequest.eph_instance_name)
  return eph_instance_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetEphemeralConfigRequest::set_eph_instance_name(const ::std::string& value) {
  
  eph_instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.GetEphemeralConfigRequest.eph_instance_name)
}
inline void GetEphemeralConfigRequest::set_eph_instance_name(const char* value) {
  
  eph_instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.GetEphemeralConfigRequest.eph_instance_name)
}
inline void GetEphemeralConfigRequest::set_eph_instance_name(const char* value, size_t size) {
  
  eph_instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.GetEphemeralConfigRequest.eph_instance_name)
}
inline ::std::string* GetEphemeralConfigRequest::mutable_eph_instance_name() {
  
  // @@protoc_insertion_point(field_mutable:management.GetEphemeralConfigRequest.eph_instance_name)
  return eph_instance_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetEphemeralConfigRequest::release_eph_instance_name() {
  
  return eph_instance_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetEphemeralConfigRequest::set_allocated_eph_instance_name(::std::string* eph_instance_name) {
  if (eph_instance_name != NULL) {
    
  } else {
    
  }
  eph_instance_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eph_instance_name);
  // @@protoc_insertion_point(field_set_allocated:management.GetEphemeralConfigRequest.eph_instance_name)
}

// optional bool merge_view = 5;
inline void GetEphemeralConfigRequest::clear_merge_view() {
  merge_view_ = false;
}
inline bool GetEphemeralConfigRequest::merge_view() const {
  // @@protoc_insertion_point(field_get:management.GetEphemeralConfigRequest.merge_view)
  return merge_view_;
}
inline void GetEphemeralConfigRequest::set_merge_view(bool value) {
  
  merge_view_ = value;
  // @@protoc_insertion_point(field_set:management.GetEphemeralConfigRequest.merge_view)
}

// -------------------------------------------------------------------

// GetEphemeralConfigResponse_ResponseList

// optional string operation_id = 1;
inline void GetEphemeralConfigResponse_ResponseList::clear_operation_id() {
  operation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetEphemeralConfigResponse_ResponseList::operation_id() const {
  // @@protoc_insertion_point(field_get:management.GetEphemeralConfigResponse.ResponseList.operation_id)
  return operation_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetEphemeralConfigResponse_ResponseList::set_operation_id(const ::std::string& value) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.GetEphemeralConfigResponse.ResponseList.operation_id)
}
inline void GetEphemeralConfigResponse_ResponseList::set_operation_id(const char* value) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.GetEphemeralConfigResponse.ResponseList.operation_id)
}
inline void GetEphemeralConfigResponse_ResponseList::set_operation_id(const char* value, size_t size) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.GetEphemeralConfigResponse.ResponseList.operation_id)
}
inline ::std::string* GetEphemeralConfigResponse_ResponseList::mutable_operation_id() {
  
  // @@protoc_insertion_point(field_mutable:management.GetEphemeralConfigResponse.ResponseList.operation_id)
  return operation_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetEphemeralConfigResponse_ResponseList::release_operation_id() {
  
  return operation_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetEphemeralConfigResponse_ResponseList::set_allocated_operation_id(::std::string* operation_id) {
  if (operation_id != NULL) {
    
  } else {
    
  }
  operation_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation_id);
  // @@protoc_insertion_point(field_set_allocated:management.GetEphemeralConfigResponse.ResponseList.operation_id)
}

// optional string path = 2;
inline void GetEphemeralConfigResponse_ResponseList::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetEphemeralConfigResponse_ResponseList::path() const {
  // @@protoc_insertion_point(field_get:management.GetEphemeralConfigResponse.ResponseList.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetEphemeralConfigResponse_ResponseList::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.GetEphemeralConfigResponse.ResponseList.path)
}
inline void GetEphemeralConfigResponse_ResponseList::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.GetEphemeralConfigResponse.ResponseList.path)
}
inline void GetEphemeralConfigResponse_ResponseList::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.GetEphemeralConfigResponse.ResponseList.path)
}
inline ::std::string* GetEphemeralConfigResponse_ResponseList::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:management.GetEphemeralConfigResponse.ResponseList.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetEphemeralConfigResponse_ResponseList::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetEphemeralConfigResponse_ResponseList::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:management.GetEphemeralConfigResponse.ResponseList.path)
}

// optional string value = 3;
inline void GetEphemeralConfigResponse_ResponseList::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetEphemeralConfigResponse_ResponseList::value() const {
  // @@protoc_insertion_point(field_get:management.GetEphemeralConfigResponse.ResponseList.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetEphemeralConfigResponse_ResponseList::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.GetEphemeralConfigResponse.ResponseList.value)
}
inline void GetEphemeralConfigResponse_ResponseList::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.GetEphemeralConfigResponse.ResponseList.value)
}
inline void GetEphemeralConfigResponse_ResponseList::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.GetEphemeralConfigResponse.ResponseList.value)
}
inline ::std::string* GetEphemeralConfigResponse_ResponseList::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:management.GetEphemeralConfigResponse.ResponseList.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetEphemeralConfigResponse_ResponseList::release_value() {
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetEphemeralConfigResponse_ResponseList::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:management.GetEphemeralConfigResponse.ResponseList.value)
}

// optional .management.JunosRpcResponseTypes status = 4;
inline void GetEphemeralConfigResponse_ResponseList::clear_status() {
  status_ = 0;
}
inline ::management::JunosRpcResponseTypes GetEphemeralConfigResponse_ResponseList::status() const {
  // @@protoc_insertion_point(field_get:management.GetEphemeralConfigResponse.ResponseList.status)
  return static_cast< ::management::JunosRpcResponseTypes >(status_);
}
inline void GetEphemeralConfigResponse_ResponseList::set_status(::management::JunosRpcResponseTypes value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:management.GetEphemeralConfigResponse.ResponseList.status)
}

// optional string message = 5;
inline void GetEphemeralConfigResponse_ResponseList::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetEphemeralConfigResponse_ResponseList::message() const {
  // @@protoc_insertion_point(field_get:management.GetEphemeralConfigResponse.ResponseList.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetEphemeralConfigResponse_ResponseList::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.GetEphemeralConfigResponse.ResponseList.message)
}
inline void GetEphemeralConfigResponse_ResponseList::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.GetEphemeralConfigResponse.ResponseList.message)
}
inline void GetEphemeralConfigResponse_ResponseList::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.GetEphemeralConfigResponse.ResponseList.message)
}
inline ::std::string* GetEphemeralConfigResponse_ResponseList::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:management.GetEphemeralConfigResponse.ResponseList.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetEphemeralConfigResponse_ResponseList::release_message() {
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetEphemeralConfigResponse_ResponseList::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:management.GetEphemeralConfigResponse.ResponseList.message)
}

// -------------------------------------------------------------------

// GetEphemeralConfigResponse

// optional uint64 request_id = 1;
inline void GetEphemeralConfigResponse::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetEphemeralConfigResponse::request_id() const {
  // @@protoc_insertion_point(field_get:management.GetEphemeralConfigResponse.request_id)
  return request_id_;
}
inline void GetEphemeralConfigResponse::set_request_id(::google::protobuf::uint64 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:management.GetEphemeralConfigResponse.request_id)
}

// repeated .management.GetEphemeralConfigResponse.ResponseList response = 2;
inline int GetEphemeralConfigResponse::response_size() const {
  return response_.size();
}
inline void GetEphemeralConfigResponse::clear_response() {
  response_.Clear();
}
inline const ::management::GetEphemeralConfigResponse_ResponseList& GetEphemeralConfigResponse::response(int index) const {
  // @@protoc_insertion_point(field_get:management.GetEphemeralConfigResponse.response)
  return response_.Get(index);
}
inline ::management::GetEphemeralConfigResponse_ResponseList* GetEphemeralConfigResponse::mutable_response(int index) {
  // @@protoc_insertion_point(field_mutable:management.GetEphemeralConfigResponse.response)
  return response_.Mutable(index);
}
inline ::management::GetEphemeralConfigResponse_ResponseList* GetEphemeralConfigResponse::add_response() {
  // @@protoc_insertion_point(field_add:management.GetEphemeralConfigResponse.response)
  return response_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::management::GetEphemeralConfigResponse_ResponseList >*
GetEphemeralConfigResponse::mutable_response() {
  // @@protoc_insertion_point(field_mutable_list:management.GetEphemeralConfigResponse.response)
  return &response_;
}
inline const ::google::protobuf::RepeatedPtrField< ::management::GetEphemeralConfigResponse_ResponseList >&
GetEphemeralConfigResponse::response() const {
  // @@protoc_insertion_point(field_list:management.GetEphemeralConfigResponse.response)
  return response_;
}

// -------------------------------------------------------------------

// EditEphemeralConfigRequest_ConfigOperationList

// optional string operation_id = 1;
inline void EditEphemeralConfigRequest_ConfigOperationList::clear_operation_id() {
  operation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EditEphemeralConfigRequest_ConfigOperationList::operation_id() const {
  // @@protoc_insertion_point(field_get:management.EditEphemeralConfigRequest.ConfigOperationList.operation_id)
  return operation_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_operation_id(const ::std::string& value) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.EditEphemeralConfigRequest.ConfigOperationList.operation_id)
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_operation_id(const char* value) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.EditEphemeralConfigRequest.ConfigOperationList.operation_id)
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_operation_id(const char* value, size_t size) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.EditEphemeralConfigRequest.ConfigOperationList.operation_id)
}
inline ::std::string* EditEphemeralConfigRequest_ConfigOperationList::mutable_operation_id() {
  
  // @@protoc_insertion_point(field_mutable:management.EditEphemeralConfigRequest.ConfigOperationList.operation_id)
  return operation_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditEphemeralConfigRequest_ConfigOperationList::release_operation_id() {
  
  return operation_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_allocated_operation_id(::std::string* operation_id) {
  if (operation_id != NULL) {
    
  } else {
    
  }
  operation_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation_id);
  // @@protoc_insertion_point(field_set_allocated:management.EditEphemeralConfigRequest.ConfigOperationList.operation_id)
}

// optional .management.ConfigCommands operation = 2;
inline void EditEphemeralConfigRequest_ConfigOperationList::clear_operation() {
  operation_ = 0;
}
inline ::management::ConfigCommands EditEphemeralConfigRequest_ConfigOperationList::operation() const {
  // @@protoc_insertion_point(field_get:management.EditEphemeralConfigRequest.ConfigOperationList.operation)
  return static_cast< ::management::ConfigCommands >(operation_);
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_operation(::management::ConfigCommands value) {
  
  operation_ = value;
  // @@protoc_insertion_point(field_set:management.EditEphemeralConfigRequest.ConfigOperationList.operation)
}

// optional string path = 3;
inline void EditEphemeralConfigRequest_ConfigOperationList::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EditEphemeralConfigRequest_ConfigOperationList::path() const {
  // @@protoc_insertion_point(field_get:management.EditEphemeralConfigRequest.ConfigOperationList.path)
  return path_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.EditEphemeralConfigRequest.ConfigOperationList.path)
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_path(const char* value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.EditEphemeralConfigRequest.ConfigOperationList.path)
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.EditEphemeralConfigRequest.ConfigOperationList.path)
}
inline ::std::string* EditEphemeralConfigRequest_ConfigOperationList::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:management.EditEphemeralConfigRequest.ConfigOperationList.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditEphemeralConfigRequest_ConfigOperationList::release_path() {
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:management.EditEphemeralConfigRequest.ConfigOperationList.path)
}

// optional string xml_config = 4;
inline bool EditEphemeralConfigRequest_ConfigOperationList::has_xml_config() const {
  return value_case() == kXmlConfig;
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_has_xml_config() {
  _oneof_case_[0] = kXmlConfig;
}
inline void EditEphemeralConfigRequest_ConfigOperationList::clear_xml_config() {
  if (has_xml_config()) {
    value_.xml_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& EditEphemeralConfigRequest_ConfigOperationList::xml_config() const {
  // @@protoc_insertion_point(field_get:management.EditEphemeralConfigRequest.ConfigOperationList.xml_config)
  if (has_xml_config()) {
    return value_.xml_config_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_xml_config(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:management.EditEphemeralConfigRequest.ConfigOperationList.xml_config)
  if (!has_xml_config()) {
    clear_value();
    set_has_xml_config();
    value_.xml_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.xml_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.EditEphemeralConfigRequest.ConfigOperationList.xml_config)
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_xml_config(const char* value) {
  if (!has_xml_config()) {
    clear_value();
    set_has_xml_config();
    value_.xml_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.xml_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.EditEphemeralConfigRequest.ConfigOperationList.xml_config)
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_xml_config(const char* value, size_t size) {
  if (!has_xml_config()) {
    clear_value();
    set_has_xml_config();
    value_.xml_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.xml_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.EditEphemeralConfigRequest.ConfigOperationList.xml_config)
}
inline ::std::string* EditEphemeralConfigRequest_ConfigOperationList::mutable_xml_config() {
  if (!has_xml_config()) {
    clear_value();
    set_has_xml_config();
    value_.xml_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:management.EditEphemeralConfigRequest.ConfigOperationList.xml_config)
  return value_.xml_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditEphemeralConfigRequest_ConfigOperationList::release_xml_config() {
  if (has_xml_config()) {
    clear_has_value();
    return value_.xml_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_allocated_xml_config(::std::string* xml_config) {
  if (!has_xml_config()) {
    value_.xml_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (xml_config != NULL) {
    set_has_xml_config();
    value_.xml_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        xml_config);
  }
  // @@protoc_insertion_point(field_set_allocated:management.EditEphemeralConfigRequest.ConfigOperationList.xml_config)
}

// optional string json_config = 5;
inline bool EditEphemeralConfigRequest_ConfigOperationList::has_json_config() const {
  return value_case() == kJsonConfig;
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_has_json_config() {
  _oneof_case_[0] = kJsonConfig;
}
inline void EditEphemeralConfigRequest_ConfigOperationList::clear_json_config() {
  if (has_json_config()) {
    value_.json_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& EditEphemeralConfigRequest_ConfigOperationList::json_config() const {
  // @@protoc_insertion_point(field_get:management.EditEphemeralConfigRequest.ConfigOperationList.json_config)
  if (has_json_config()) {
    return value_.json_config_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_json_config(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:management.EditEphemeralConfigRequest.ConfigOperationList.json_config)
  if (!has_json_config()) {
    clear_value();
    set_has_json_config();
    value_.json_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.EditEphemeralConfigRequest.ConfigOperationList.json_config)
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_json_config(const char* value) {
  if (!has_json_config()) {
    clear_value();
    set_has_json_config();
    value_.json_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.EditEphemeralConfigRequest.ConfigOperationList.json_config)
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_json_config(const char* value, size_t size) {
  if (!has_json_config()) {
    clear_value();
    set_has_json_config();
    value_.json_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.EditEphemeralConfigRequest.ConfigOperationList.json_config)
}
inline ::std::string* EditEphemeralConfigRequest_ConfigOperationList::mutable_json_config() {
  if (!has_json_config()) {
    clear_value();
    set_has_json_config();
    value_.json_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:management.EditEphemeralConfigRequest.ConfigOperationList.json_config)
  return value_.json_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditEphemeralConfigRequest_ConfigOperationList::release_json_config() {
  if (has_json_config()) {
    clear_has_value();
    return value_.json_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void EditEphemeralConfigRequest_ConfigOperationList::set_allocated_json_config(::std::string* json_config) {
  if (!has_json_config()) {
    value_.json_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (json_config != NULL) {
    set_has_json_config();
    value_.json_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        json_config);
  }
  // @@protoc_insertion_point(field_set_allocated:management.EditEphemeralConfigRequest.ConfigOperationList.json_config)
}

inline bool EditEphemeralConfigRequest_ConfigOperationList::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void EditEphemeralConfigRequest_ConfigOperationList::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline EditEphemeralConfigRequest_ConfigOperationList::ValueCase EditEphemeralConfigRequest_ConfigOperationList::value_case() const {
  return EditEphemeralConfigRequest_ConfigOperationList::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// EditEphemeralConfigRequest

// optional uint64 request_id = 1;
inline void EditEphemeralConfigRequest::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EditEphemeralConfigRequest::request_id() const {
  // @@protoc_insertion_point(field_get:management.EditEphemeralConfigRequest.request_id)
  return request_id_;
}
inline void EditEphemeralConfigRequest::set_request_id(::google::protobuf::uint64 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:management.EditEphemeralConfigRequest.request_id)
}

// repeated .management.EditEphemeralConfigRequest.ConfigOperationList eph_config_operations = 3;
inline int EditEphemeralConfigRequest::eph_config_operations_size() const {
  return eph_config_operations_.size();
}
inline void EditEphemeralConfigRequest::clear_eph_config_operations() {
  eph_config_operations_.Clear();
}
inline const ::management::EditEphemeralConfigRequest_ConfigOperationList& EditEphemeralConfigRequest::eph_config_operations(int index) const {
  // @@protoc_insertion_point(field_get:management.EditEphemeralConfigRequest.eph_config_operations)
  return eph_config_operations_.Get(index);
}
inline ::management::EditEphemeralConfigRequest_ConfigOperationList* EditEphemeralConfigRequest::mutable_eph_config_operations(int index) {
  // @@protoc_insertion_point(field_mutable:management.EditEphemeralConfigRequest.eph_config_operations)
  return eph_config_operations_.Mutable(index);
}
inline ::management::EditEphemeralConfigRequest_ConfigOperationList* EditEphemeralConfigRequest::add_eph_config_operations() {
  // @@protoc_insertion_point(field_add:management.EditEphemeralConfigRequest.eph_config_operations)
  return eph_config_operations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::management::EditEphemeralConfigRequest_ConfigOperationList >*
EditEphemeralConfigRequest::mutable_eph_config_operations() {
  // @@protoc_insertion_point(field_mutable_list:management.EditEphemeralConfigRequest.eph_config_operations)
  return &eph_config_operations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::management::EditEphemeralConfigRequest_ConfigOperationList >&
EditEphemeralConfigRequest::eph_config_operations() const {
  // @@protoc_insertion_point(field_list:management.EditEphemeralConfigRequest.eph_config_operations)
  return eph_config_operations_;
}

// optional string eph_instance_name = 4;
inline void EditEphemeralConfigRequest::clear_eph_instance_name() {
  eph_instance_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EditEphemeralConfigRequest::eph_instance_name() const {
  // @@protoc_insertion_point(field_get:management.EditEphemeralConfigRequest.eph_instance_name)
  return eph_instance_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditEphemeralConfigRequest::set_eph_instance_name(const ::std::string& value) {
  
  eph_instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.EditEphemeralConfigRequest.eph_instance_name)
}
inline void EditEphemeralConfigRequest::set_eph_instance_name(const char* value) {
  
  eph_instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.EditEphemeralConfigRequest.eph_instance_name)
}
inline void EditEphemeralConfigRequest::set_eph_instance_name(const char* value, size_t size) {
  
  eph_instance_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.EditEphemeralConfigRequest.eph_instance_name)
}
inline ::std::string* EditEphemeralConfigRequest::mutable_eph_instance_name() {
  
  // @@protoc_insertion_point(field_mutable:management.EditEphemeralConfigRequest.eph_instance_name)
  return eph_instance_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditEphemeralConfigRequest::release_eph_instance_name() {
  
  return eph_instance_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditEphemeralConfigRequest::set_allocated_eph_instance_name(::std::string* eph_instance_name) {
  if (eph_instance_name != NULL) {
    
  } else {
    
  }
  eph_instance_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), eph_instance_name);
  // @@protoc_insertion_point(field_set_allocated:management.EditEphemeralConfigRequest.eph_instance_name)
}

// optional bool enable_config_validation = 5;
inline void EditEphemeralConfigRequest::clear_enable_config_validation() {
  enable_config_validation_ = false;
}
inline bool EditEphemeralConfigRequest::enable_config_validation() const {
  // @@protoc_insertion_point(field_get:management.EditEphemeralConfigRequest.enable_config_validation)
  return enable_config_validation_;
}
inline void EditEphemeralConfigRequest::set_enable_config_validation(bool value) {
  
  enable_config_validation_ = value;
  // @@protoc_insertion_point(field_set:management.EditEphemeralConfigRequest.enable_config_validation)
}

// -------------------------------------------------------------------

// EditEphemeralConfigResponse_ResponseList

// optional string operation_id = 1;
inline void EditEphemeralConfigResponse_ResponseList::clear_operation_id() {
  operation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EditEphemeralConfigResponse_ResponseList::operation_id() const {
  // @@protoc_insertion_point(field_get:management.EditEphemeralConfigResponse.ResponseList.operation_id)
  return operation_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditEphemeralConfigResponse_ResponseList::set_operation_id(const ::std::string& value) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.EditEphemeralConfigResponse.ResponseList.operation_id)
}
inline void EditEphemeralConfigResponse_ResponseList::set_operation_id(const char* value) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.EditEphemeralConfigResponse.ResponseList.operation_id)
}
inline void EditEphemeralConfigResponse_ResponseList::set_operation_id(const char* value, size_t size) {
  
  operation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.EditEphemeralConfigResponse.ResponseList.operation_id)
}
inline ::std::string* EditEphemeralConfigResponse_ResponseList::mutable_operation_id() {
  
  // @@protoc_insertion_point(field_mutable:management.EditEphemeralConfigResponse.ResponseList.operation_id)
  return operation_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditEphemeralConfigResponse_ResponseList::release_operation_id() {
  
  return operation_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditEphemeralConfigResponse_ResponseList::set_allocated_operation_id(::std::string* operation_id) {
  if (operation_id != NULL) {
    
  } else {
    
  }
  operation_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), operation_id);
  // @@protoc_insertion_point(field_set_allocated:management.EditEphemeralConfigResponse.ResponseList.operation_id)
}

// optional .management.JunosRpcResponseTypes status = 2;
inline void EditEphemeralConfigResponse_ResponseList::clear_status() {
  status_ = 0;
}
inline ::management::JunosRpcResponseTypes EditEphemeralConfigResponse_ResponseList::status() const {
  // @@protoc_insertion_point(field_get:management.EditEphemeralConfigResponse.ResponseList.status)
  return static_cast< ::management::JunosRpcResponseTypes >(status_);
}
inline void EditEphemeralConfigResponse_ResponseList::set_status(::management::JunosRpcResponseTypes value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:management.EditEphemeralConfigResponse.ResponseList.status)
}

// optional string message = 3;
inline void EditEphemeralConfigResponse_ResponseList::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EditEphemeralConfigResponse_ResponseList::message() const {
  // @@protoc_insertion_point(field_get:management.EditEphemeralConfigResponse.ResponseList.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditEphemeralConfigResponse_ResponseList::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.EditEphemeralConfigResponse.ResponseList.message)
}
inline void EditEphemeralConfigResponse_ResponseList::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.EditEphemeralConfigResponse.ResponseList.message)
}
inline void EditEphemeralConfigResponse_ResponseList::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.EditEphemeralConfigResponse.ResponseList.message)
}
inline ::std::string* EditEphemeralConfigResponse_ResponseList::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:management.EditEphemeralConfigResponse.ResponseList.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditEphemeralConfigResponse_ResponseList::release_message() {
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditEphemeralConfigResponse_ResponseList::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:management.EditEphemeralConfigResponse.ResponseList.message)
}

// -------------------------------------------------------------------

// EditEphemeralConfigResponse

// optional uint64 request_id = 1;
inline void EditEphemeralConfigResponse::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EditEphemeralConfigResponse::request_id() const {
  // @@protoc_insertion_point(field_get:management.EditEphemeralConfigResponse.request_id)
  return request_id_;
}
inline void EditEphemeralConfigResponse::set_request_id(::google::protobuf::uint64 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:management.EditEphemeralConfigResponse.request_id)
}

// repeated .management.EditEphemeralConfigResponse.ResponseList response = 2;
inline int EditEphemeralConfigResponse::response_size() const {
  return response_.size();
}
inline void EditEphemeralConfigResponse::clear_response() {
  response_.Clear();
}
inline const ::management::EditEphemeralConfigResponse_ResponseList& EditEphemeralConfigResponse::response(int index) const {
  // @@protoc_insertion_point(field_get:management.EditEphemeralConfigResponse.response)
  return response_.Get(index);
}
inline ::management::EditEphemeralConfigResponse_ResponseList* EditEphemeralConfigResponse::mutable_response(int index) {
  // @@protoc_insertion_point(field_mutable:management.EditEphemeralConfigResponse.response)
  return response_.Mutable(index);
}
inline ::management::EditEphemeralConfigResponse_ResponseList* EditEphemeralConfigResponse::add_response() {
  // @@protoc_insertion_point(field_add:management.EditEphemeralConfigResponse.response)
  return response_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::management::EditEphemeralConfigResponse_ResponseList >*
EditEphemeralConfigResponse::mutable_response() {
  // @@protoc_insertion_point(field_mutable_list:management.EditEphemeralConfigResponse.response)
  return &response_;
}
inline const ::google::protobuf::RepeatedPtrField< ::management::EditEphemeralConfigResponse_ResponseList >&
EditEphemeralConfigResponse::response() const {
  // @@protoc_insertion_point(field_list:management.EditEphemeralConfigResponse.response)
  return response_;
}

// -------------------------------------------------------------------

// ConfigCommit

// optional .management.ConfigCommitType commit_type = 1;
inline void ConfigCommit::clear_commit_type() {
  commit_type_ = 0;
}
inline ::management::ConfigCommitType ConfigCommit::commit_type() const {
  // @@protoc_insertion_point(field_get:management.ConfigCommit.commit_type)
  return static_cast< ::management::ConfigCommitType >(commit_type_);
}
inline void ConfigCommit::set_commit_type(::management::ConfigCommitType value) {
  
  commit_type_ = value;
  // @@protoc_insertion_point(field_set:management.ConfigCommit.commit_type)
}

// optional string comment = 2;
inline void ConfigCommit::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigCommit::comment() const {
  // @@protoc_insertion_point(field_get:management.ConfigCommit.comment)
  return comment_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigCommit::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.ConfigCommit.comment)
}
inline void ConfigCommit::set_comment(const char* value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.ConfigCommit.comment)
}
inline void ConfigCommit::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.ConfigCommit.comment)
}
inline ::std::string* ConfigCommit::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:management.ConfigCommit.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigCommit::release_comment() {
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigCommit::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:management.ConfigCommit.comment)
}

// -------------------------------------------------------------------

// ExecuteCfgCommandRequest

// optional uint64 request_id = 1;
inline void ExecuteCfgCommandRequest::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ExecuteCfgCommandRequest::request_id() const {
  // @@protoc_insertion_point(field_get:management.ExecuteCfgCommandRequest.request_id)
  return request_id_;
}
inline void ExecuteCfgCommandRequest::set_request_id(::google::protobuf::uint64 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:management.ExecuteCfgCommandRequest.request_id)
}

// optional string xml_config = 2;
inline bool ExecuteCfgCommandRequest::has_xml_config() const {
  return config_case() == kXmlConfig;
}
inline void ExecuteCfgCommandRequest::set_has_xml_config() {
  _oneof_case_[0] = kXmlConfig;
}
inline void ExecuteCfgCommandRequest::clear_xml_config() {
  if (has_xml_config()) {
    config_.xml_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_config();
  }
}
inline const ::std::string& ExecuteCfgCommandRequest::xml_config() const {
  // @@protoc_insertion_point(field_get:management.ExecuteCfgCommandRequest.xml_config)
  if (has_xml_config()) {
    return config_.xml_config_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ExecuteCfgCommandRequest::set_xml_config(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:management.ExecuteCfgCommandRequest.xml_config)
  if (!has_xml_config()) {
    clear_config();
    set_has_xml_config();
    config_.xml_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  config_.xml_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.ExecuteCfgCommandRequest.xml_config)
}
inline void ExecuteCfgCommandRequest::set_xml_config(const char* value) {
  if (!has_xml_config()) {
    clear_config();
    set_has_xml_config();
    config_.xml_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  config_.xml_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.ExecuteCfgCommandRequest.xml_config)
}
inline void ExecuteCfgCommandRequest::set_xml_config(const char* value, size_t size) {
  if (!has_xml_config()) {
    clear_config();
    set_has_xml_config();
    config_.xml_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  config_.xml_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.ExecuteCfgCommandRequest.xml_config)
}
inline ::std::string* ExecuteCfgCommandRequest::mutable_xml_config() {
  if (!has_xml_config()) {
    clear_config();
    set_has_xml_config();
    config_.xml_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:management.ExecuteCfgCommandRequest.xml_config)
  return config_.xml_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteCfgCommandRequest::release_xml_config() {
  if (has_xml_config()) {
    clear_has_config();
    return config_.xml_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ExecuteCfgCommandRequest::set_allocated_xml_config(::std::string* xml_config) {
  if (!has_xml_config()) {
    config_.xml_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_config();
  if (xml_config != NULL) {
    set_has_xml_config();
    config_.xml_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        xml_config);
  }
  // @@protoc_insertion_point(field_set_allocated:management.ExecuteCfgCommandRequest.xml_config)
}

// optional string json_config = 3;
inline bool ExecuteCfgCommandRequest::has_json_config() const {
  return config_case() == kJsonConfig;
}
inline void ExecuteCfgCommandRequest::set_has_json_config() {
  _oneof_case_[0] = kJsonConfig;
}
inline void ExecuteCfgCommandRequest::clear_json_config() {
  if (has_json_config()) {
    config_.json_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_config();
  }
}
inline const ::std::string& ExecuteCfgCommandRequest::json_config() const {
  // @@protoc_insertion_point(field_get:management.ExecuteCfgCommandRequest.json_config)
  if (has_json_config()) {
    return config_.json_config_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ExecuteCfgCommandRequest::set_json_config(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:management.ExecuteCfgCommandRequest.json_config)
  if (!has_json_config()) {
    clear_config();
    set_has_json_config();
    config_.json_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  config_.json_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.ExecuteCfgCommandRequest.json_config)
}
inline void ExecuteCfgCommandRequest::set_json_config(const char* value) {
  if (!has_json_config()) {
    clear_config();
    set_has_json_config();
    config_.json_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  config_.json_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.ExecuteCfgCommandRequest.json_config)
}
inline void ExecuteCfgCommandRequest::set_json_config(const char* value, size_t size) {
  if (!has_json_config()) {
    clear_config();
    set_has_json_config();
    config_.json_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  config_.json_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.ExecuteCfgCommandRequest.json_config)
}
inline ::std::string* ExecuteCfgCommandRequest::mutable_json_config() {
  if (!has_json_config()) {
    clear_config();
    set_has_json_config();
    config_.json_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:management.ExecuteCfgCommandRequest.json_config)
  return config_.json_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteCfgCommandRequest::release_json_config() {
  if (has_json_config()) {
    clear_has_config();
    return config_.json_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ExecuteCfgCommandRequest::set_allocated_json_config(::std::string* json_config) {
  if (!has_json_config()) {
    config_.json_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_config();
  if (json_config != NULL) {
    set_has_json_config();
    config_.json_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        json_config);
  }
  // @@protoc_insertion_point(field_set_allocated:management.ExecuteCfgCommandRequest.json_config)
}

// optional string text_config = 4;
inline bool ExecuteCfgCommandRequest::has_text_config() const {
  return config_case() == kTextConfig;
}
inline void ExecuteCfgCommandRequest::set_has_text_config() {
  _oneof_case_[0] = kTextConfig;
}
inline void ExecuteCfgCommandRequest::clear_text_config() {
  if (has_text_config()) {
    config_.text_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_config();
  }
}
inline const ::std::string& ExecuteCfgCommandRequest::text_config() const {
  // @@protoc_insertion_point(field_get:management.ExecuteCfgCommandRequest.text_config)
  if (has_text_config()) {
    return config_.text_config_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ExecuteCfgCommandRequest::set_text_config(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:management.ExecuteCfgCommandRequest.text_config)
  if (!has_text_config()) {
    clear_config();
    set_has_text_config();
    config_.text_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  config_.text_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.ExecuteCfgCommandRequest.text_config)
}
inline void ExecuteCfgCommandRequest::set_text_config(const char* value) {
  if (!has_text_config()) {
    clear_config();
    set_has_text_config();
    config_.text_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  config_.text_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.ExecuteCfgCommandRequest.text_config)
}
inline void ExecuteCfgCommandRequest::set_text_config(const char* value, size_t size) {
  if (!has_text_config()) {
    clear_config();
    set_has_text_config();
    config_.text_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  config_.text_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.ExecuteCfgCommandRequest.text_config)
}
inline ::std::string* ExecuteCfgCommandRequest::mutable_text_config() {
  if (!has_text_config()) {
    clear_config();
    set_has_text_config();
    config_.text_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:management.ExecuteCfgCommandRequest.text_config)
  return config_.text_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteCfgCommandRequest::release_text_config() {
  if (has_text_config()) {
    clear_has_config();
    return config_.text_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ExecuteCfgCommandRequest::set_allocated_text_config(::std::string* text_config) {
  if (!has_text_config()) {
    config_.text_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_config();
  if (text_config != NULL) {
    set_has_text_config();
    config_.text_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        text_config);
  }
  // @@protoc_insertion_point(field_set_allocated:management.ExecuteCfgCommandRequest.text_config)
}

// optional .management.ConfigLoadType load_type = 5;
inline void ExecuteCfgCommandRequest::clear_load_type() {
  load_type_ = 0;
}
inline ::management::ConfigLoadType ExecuteCfgCommandRequest::load_type() const {
  // @@protoc_insertion_point(field_get:management.ExecuteCfgCommandRequest.load_type)
  return static_cast< ::management::ConfigLoadType >(load_type_);
}
inline void ExecuteCfgCommandRequest::set_load_type(::management::ConfigLoadType value) {
  
  load_type_ = value;
  // @@protoc_insertion_point(field_set:management.ExecuteCfgCommandRequest.load_type)
}

// optional .management.ConfigCommit commit = 6;
inline bool ExecuteCfgCommandRequest::has_commit() const {
  return !_is_default_instance_ && commit_ != NULL;
}
inline void ExecuteCfgCommandRequest::clear_commit() {
  if (GetArenaNoVirtual() == NULL && commit_ != NULL) delete commit_;
  commit_ = NULL;
}
inline const ::management::ConfigCommit& ExecuteCfgCommandRequest::commit() const {
  // @@protoc_insertion_point(field_get:management.ExecuteCfgCommandRequest.commit)
  return commit_ != NULL ? *commit_ : *default_instance_->commit_;
}
inline ::management::ConfigCommit* ExecuteCfgCommandRequest::mutable_commit() {
  
  if (commit_ == NULL) {
    commit_ = new ::management::ConfigCommit;
  }
  // @@protoc_insertion_point(field_mutable:management.ExecuteCfgCommandRequest.commit)
  return commit_;
}
inline ::management::ConfigCommit* ExecuteCfgCommandRequest::release_commit() {
  
  ::management::ConfigCommit* temp = commit_;
  commit_ = NULL;
  return temp;
}
inline void ExecuteCfgCommandRequest::set_allocated_commit(::management::ConfigCommit* commit) {
  delete commit_;
  commit_ = commit;
  if (commit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:management.ExecuteCfgCommandRequest.commit)
}

inline bool ExecuteCfgCommandRequest::has_config() const {
  return config_case() != CONFIG_NOT_SET;
}
inline void ExecuteCfgCommandRequest::clear_has_config() {
  _oneof_case_[0] = CONFIG_NOT_SET;
}
inline ExecuteCfgCommandRequest::ConfigCase ExecuteCfgCommandRequest::config_case() const {
  return ExecuteCfgCommandRequest::ConfigCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ExecuteCfgCommandResponse

// optional uint64 request_id = 1;
inline void ExecuteCfgCommandResponse::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ExecuteCfgCommandResponse::request_id() const {
  // @@protoc_insertion_point(field_get:management.ExecuteCfgCommandResponse.request_id)
  return request_id_;
}
inline void ExecuteCfgCommandResponse::set_request_id(::google::protobuf::uint64 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:management.ExecuteCfgCommandResponse.request_id)
}

// optional .management.JunosRpcResponseTypes status = 2;
inline void ExecuteCfgCommandResponse::clear_status() {
  status_ = 0;
}
inline ::management::JunosRpcResponseTypes ExecuteCfgCommandResponse::status() const {
  // @@protoc_insertion_point(field_get:management.ExecuteCfgCommandResponse.status)
  return static_cast< ::management::JunosRpcResponseTypes >(status_);
}
inline void ExecuteCfgCommandResponse::set_status(::management::JunosRpcResponseTypes value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:management.ExecuteCfgCommandResponse.status)
}

// optional string message = 3;
inline void ExecuteCfgCommandResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteCfgCommandResponse::message() const {
  // @@protoc_insertion_point(field_get:management.ExecuteCfgCommandResponse.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteCfgCommandResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:management.ExecuteCfgCommandResponse.message)
}
inline void ExecuteCfgCommandResponse::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:management.ExecuteCfgCommandResponse.message)
}
inline void ExecuteCfgCommandResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:management.ExecuteCfgCommandResponse.message)
}
inline ::std::string* ExecuteCfgCommandResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:management.ExecuteCfgCommandResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteCfgCommandResponse::release_message() {
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteCfgCommandResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:management.ExecuteCfgCommandResponse.message)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace management

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::management::OperationFormatType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::management::OperationFormatType>() {
  return ::management::OperationFormatType_descriptor();
}
template <> struct is_proto_enum< ::management::JunosRpcResponseTypes> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::management::JunosRpcResponseTypes>() {
  return ::management::JunosRpcResponseTypes_descriptor();
}
template <> struct is_proto_enum< ::management::JunosDataEncodingTypes> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::management::JunosDataEncodingTypes>() {
  return ::management::JunosDataEncodingTypes_descriptor();
}
template <> struct is_proto_enum< ::management::ConfigCommands> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::management::ConfigCommands>() {
  return ::management::ConfigCommands_descriptor();
}
template <> struct is_proto_enum< ::management::ConfigLoadType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::management::ConfigLoadType>() {
  return ::management::ConfigLoadType_descriptor();
}
template <> struct is_proto_enum< ::management::ConfigCommitType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::management::ConfigCommitType>() {
  return ::management::ConfigCommitType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mgd_5fservice_2eproto__INCLUDED
