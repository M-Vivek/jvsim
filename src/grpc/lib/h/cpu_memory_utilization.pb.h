// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cpu_memory_utilization.proto

#ifndef PROTOBUF_cpu_5fmemory_5futilization_2eproto__INCLUDED
#define PROTOBUF_cpu_5fmemory_5futilization_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "jvision_top.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_cpu_5fmemory_5futilization_2eproto();
void protobuf_AssignDesc_cpu_5fmemory_5futilization_2eproto();
void protobuf_ShutdownFile_cpu_5fmemory_5futilization_2eproto();

class CpuMemoryUtilization;
class CpuMemoryUtilizationPerApplication;
class CpuMemoryUtilizationSummary;

// ===================================================================

class CpuMemoryUtilization : public ::google::protobuf::Message {
 public:
  CpuMemoryUtilization();
  virtual ~CpuMemoryUtilization();

  CpuMemoryUtilization(const CpuMemoryUtilization& from);

  inline CpuMemoryUtilization& operator=(const CpuMemoryUtilization& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CpuMemoryUtilization& default_instance();

  void Swap(CpuMemoryUtilization* other);

  // implements Message ----------------------------------------------

  inline CpuMemoryUtilization* New() const { return New(NULL); }

  CpuMemoryUtilization* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CpuMemoryUtilization& from);
  void MergeFrom(const CpuMemoryUtilization& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CpuMemoryUtilization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .CpuMemoryUtilizationSummary utilization = 1;
  int utilization_size() const;
  void clear_utilization();
  static const int kUtilizationFieldNumber = 1;
  const ::CpuMemoryUtilizationSummary& utilization(int index) const;
  ::CpuMemoryUtilizationSummary* mutable_utilization(int index);
  ::CpuMemoryUtilizationSummary* add_utilization();
  ::google::protobuf::RepeatedPtrField< ::CpuMemoryUtilizationSummary >*
      mutable_utilization();
  const ::google::protobuf::RepeatedPtrField< ::CpuMemoryUtilizationSummary >&
      utilization() const;

  // @@protoc_insertion_point(class_scope:CpuMemoryUtilization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::CpuMemoryUtilizationSummary > utilization_;
  friend void  protobuf_AddDesc_cpu_5fmemory_5futilization_2eproto();
  friend void protobuf_AssignDesc_cpu_5fmemory_5futilization_2eproto();
  friend void protobuf_ShutdownFile_cpu_5fmemory_5futilization_2eproto();

  void InitAsDefaultInstance();
  static CpuMemoryUtilization* default_instance_;
};
// -------------------------------------------------------------------

class CpuMemoryUtilizationSummary : public ::google::protobuf::Message {
 public:
  CpuMemoryUtilizationSummary();
  virtual ~CpuMemoryUtilizationSummary();

  CpuMemoryUtilizationSummary(const CpuMemoryUtilizationSummary& from);

  inline CpuMemoryUtilizationSummary& operator=(const CpuMemoryUtilizationSummary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CpuMemoryUtilizationSummary& default_instance();

  void Swap(CpuMemoryUtilizationSummary* other);

  // implements Message ----------------------------------------------

  inline CpuMemoryUtilizationSummary* New() const { return New(NULL); }

  CpuMemoryUtilizationSummary* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CpuMemoryUtilizationSummary& from);
  void MergeFrom(const CpuMemoryUtilizationSummary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CpuMemoryUtilizationSummary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 size = 2;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // optional uint64 bytes_allocated = 3;
  bool has_bytes_allocated() const;
  void clear_bytes_allocated();
  static const int kBytesAllocatedFieldNumber = 3;
  ::google::protobuf::uint64 bytes_allocated() const;
  void set_bytes_allocated(::google::protobuf::uint64 value);

  // optional int32 utilization = 4;
  bool has_utilization() const;
  void clear_utilization();
  static const int kUtilizationFieldNumber = 4;
  ::google::protobuf::int32 utilization() const;
  void set_utilization(::google::protobuf::int32 value);

  // repeated .CpuMemoryUtilizationPerApplication application_utilization = 5;
  int application_utilization_size() const;
  void clear_application_utilization();
  static const int kApplicationUtilizationFieldNumber = 5;
  const ::CpuMemoryUtilizationPerApplication& application_utilization(int index) const;
  ::CpuMemoryUtilizationPerApplication* mutable_application_utilization(int index);
  ::CpuMemoryUtilizationPerApplication* add_application_utilization();
  ::google::protobuf::RepeatedPtrField< ::CpuMemoryUtilizationPerApplication >*
      mutable_application_utilization();
  const ::google::protobuf::RepeatedPtrField< ::CpuMemoryUtilizationPerApplication >&
      application_utilization() const;

  // @@protoc_insertion_point(class_scope:CpuMemoryUtilizationSummary)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_bytes_allocated();
  inline void clear_has_bytes_allocated();
  inline void set_has_utilization();
  inline void clear_has_utilization();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 size_;
  ::google::protobuf::uint64 bytes_allocated_;
  ::google::protobuf::RepeatedPtrField< ::CpuMemoryUtilizationPerApplication > application_utilization_;
  ::google::protobuf::int32 utilization_;
  friend void  protobuf_AddDesc_cpu_5fmemory_5futilization_2eproto();
  friend void protobuf_AssignDesc_cpu_5fmemory_5futilization_2eproto();
  friend void protobuf_ShutdownFile_cpu_5fmemory_5futilization_2eproto();

  void InitAsDefaultInstance();
  static CpuMemoryUtilizationSummary* default_instance_;
};
// -------------------------------------------------------------------

class CpuMemoryUtilizationPerApplication : public ::google::protobuf::Message {
 public:
  CpuMemoryUtilizationPerApplication();
  virtual ~CpuMemoryUtilizationPerApplication();

  CpuMemoryUtilizationPerApplication(const CpuMemoryUtilizationPerApplication& from);

  inline CpuMemoryUtilizationPerApplication& operator=(const CpuMemoryUtilizationPerApplication& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CpuMemoryUtilizationPerApplication& default_instance();

  void Swap(CpuMemoryUtilizationPerApplication* other);

  // implements Message ----------------------------------------------

  inline CpuMemoryUtilizationPerApplication* New() const { return New(NULL); }

  CpuMemoryUtilizationPerApplication* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CpuMemoryUtilizationPerApplication& from);
  void MergeFrom(const CpuMemoryUtilizationPerApplication& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CpuMemoryUtilizationPerApplication* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 bytes_allocated = 2;
  bool has_bytes_allocated() const;
  void clear_bytes_allocated();
  static const int kBytesAllocatedFieldNumber = 2;
  ::google::protobuf::uint64 bytes_allocated() const;
  void set_bytes_allocated(::google::protobuf::uint64 value);

  // optional uint64 allocations = 3;
  bool has_allocations() const;
  void clear_allocations();
  static const int kAllocationsFieldNumber = 3;
  ::google::protobuf::uint64 allocations() const;
  void set_allocations(::google::protobuf::uint64 value);

  // optional uint64 frees = 4;
  bool has_frees() const;
  void clear_frees();
  static const int kFreesFieldNumber = 4;
  ::google::protobuf::uint64 frees() const;
  void set_frees(::google::protobuf::uint64 value);

  // optional uint64 allocations_failed = 5;
  bool has_allocations_failed() const;
  void clear_allocations_failed();
  static const int kAllocationsFailedFieldNumber = 5;
  ::google::protobuf::uint64 allocations_failed() const;
  void set_allocations_failed(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:CpuMemoryUtilizationPerApplication)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_bytes_allocated();
  inline void clear_has_bytes_allocated();
  inline void set_has_allocations();
  inline void clear_has_allocations();
  inline void set_has_frees();
  inline void clear_has_frees();
  inline void set_has_allocations_failed();
  inline void clear_has_allocations_failed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 bytes_allocated_;
  ::google::protobuf::uint64 allocations_;
  ::google::protobuf::uint64 frees_;
  ::google::protobuf::uint64 allocations_failed_;
  friend void  protobuf_AddDesc_cpu_5fmemory_5futilization_2eproto();
  friend void protobuf_AssignDesc_cpu_5fmemory_5futilization_2eproto();
  friend void protobuf_ShutdownFile_cpu_5fmemory_5futilization_2eproto();

  void InitAsDefaultInstance();
  static CpuMemoryUtilizationPerApplication* default_instance_;
};
// ===================================================================

static const int kCpuMemoryUtilExtFieldNumber = 1;
extern ::google::protobuf::internal::ExtensionIdentifier< ::JuniperNetworksSensors,
    ::google::protobuf::internal::MessageTypeTraits< ::CpuMemoryUtilization >, 11, false >
  cpu_memory_util_ext;

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CpuMemoryUtilization

// repeated .CpuMemoryUtilizationSummary utilization = 1;
inline int CpuMemoryUtilization::utilization_size() const {
  return utilization_.size();
}
inline void CpuMemoryUtilization::clear_utilization() {
  utilization_.Clear();
}
inline const ::CpuMemoryUtilizationSummary& CpuMemoryUtilization::utilization(int index) const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilization.utilization)
  return utilization_.Get(index);
}
inline ::CpuMemoryUtilizationSummary* CpuMemoryUtilization::mutable_utilization(int index) {
  // @@protoc_insertion_point(field_mutable:CpuMemoryUtilization.utilization)
  return utilization_.Mutable(index);
}
inline ::CpuMemoryUtilizationSummary* CpuMemoryUtilization::add_utilization() {
  // @@protoc_insertion_point(field_add:CpuMemoryUtilization.utilization)
  return utilization_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CpuMemoryUtilizationSummary >*
CpuMemoryUtilization::mutable_utilization() {
  // @@protoc_insertion_point(field_mutable_list:CpuMemoryUtilization.utilization)
  return &utilization_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CpuMemoryUtilizationSummary >&
CpuMemoryUtilization::utilization() const {
  // @@protoc_insertion_point(field_list:CpuMemoryUtilization.utilization)
  return utilization_;
}

// -------------------------------------------------------------------

// CpuMemoryUtilizationSummary

// optional string name = 1;
inline bool CpuMemoryUtilizationSummary::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CpuMemoryUtilizationSummary::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CpuMemoryUtilizationSummary::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CpuMemoryUtilizationSummary::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CpuMemoryUtilizationSummary::name() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationSummary.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CpuMemoryUtilizationSummary::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationSummary.name)
}
inline void CpuMemoryUtilizationSummary::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CpuMemoryUtilizationSummary.name)
}
inline void CpuMemoryUtilizationSummary::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CpuMemoryUtilizationSummary.name)
}
inline ::std::string* CpuMemoryUtilizationSummary::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CpuMemoryUtilizationSummary.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CpuMemoryUtilizationSummary::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CpuMemoryUtilizationSummary::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CpuMemoryUtilizationSummary.name)
}

// optional uint64 size = 2;
inline bool CpuMemoryUtilizationSummary::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CpuMemoryUtilizationSummary::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CpuMemoryUtilizationSummary::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CpuMemoryUtilizationSummary::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::uint64 CpuMemoryUtilizationSummary::size() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationSummary.size)
  return size_;
}
inline void CpuMemoryUtilizationSummary::set_size(::google::protobuf::uint64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationSummary.size)
}

// optional uint64 bytes_allocated = 3;
inline bool CpuMemoryUtilizationSummary::has_bytes_allocated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CpuMemoryUtilizationSummary::set_has_bytes_allocated() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CpuMemoryUtilizationSummary::clear_has_bytes_allocated() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CpuMemoryUtilizationSummary::clear_bytes_allocated() {
  bytes_allocated_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes_allocated();
}
inline ::google::protobuf::uint64 CpuMemoryUtilizationSummary::bytes_allocated() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationSummary.bytes_allocated)
  return bytes_allocated_;
}
inline void CpuMemoryUtilizationSummary::set_bytes_allocated(::google::protobuf::uint64 value) {
  set_has_bytes_allocated();
  bytes_allocated_ = value;
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationSummary.bytes_allocated)
}

// optional int32 utilization = 4;
inline bool CpuMemoryUtilizationSummary::has_utilization() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CpuMemoryUtilizationSummary::set_has_utilization() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CpuMemoryUtilizationSummary::clear_has_utilization() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CpuMemoryUtilizationSummary::clear_utilization() {
  utilization_ = 0;
  clear_has_utilization();
}
inline ::google::protobuf::int32 CpuMemoryUtilizationSummary::utilization() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationSummary.utilization)
  return utilization_;
}
inline void CpuMemoryUtilizationSummary::set_utilization(::google::protobuf::int32 value) {
  set_has_utilization();
  utilization_ = value;
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationSummary.utilization)
}

// repeated .CpuMemoryUtilizationPerApplication application_utilization = 5;
inline int CpuMemoryUtilizationSummary::application_utilization_size() const {
  return application_utilization_.size();
}
inline void CpuMemoryUtilizationSummary::clear_application_utilization() {
  application_utilization_.Clear();
}
inline const ::CpuMemoryUtilizationPerApplication& CpuMemoryUtilizationSummary::application_utilization(int index) const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationSummary.application_utilization)
  return application_utilization_.Get(index);
}
inline ::CpuMemoryUtilizationPerApplication* CpuMemoryUtilizationSummary::mutable_application_utilization(int index) {
  // @@protoc_insertion_point(field_mutable:CpuMemoryUtilizationSummary.application_utilization)
  return application_utilization_.Mutable(index);
}
inline ::CpuMemoryUtilizationPerApplication* CpuMemoryUtilizationSummary::add_application_utilization() {
  // @@protoc_insertion_point(field_add:CpuMemoryUtilizationSummary.application_utilization)
  return application_utilization_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CpuMemoryUtilizationPerApplication >*
CpuMemoryUtilizationSummary::mutable_application_utilization() {
  // @@protoc_insertion_point(field_mutable_list:CpuMemoryUtilizationSummary.application_utilization)
  return &application_utilization_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CpuMemoryUtilizationPerApplication >&
CpuMemoryUtilizationSummary::application_utilization() const {
  // @@protoc_insertion_point(field_list:CpuMemoryUtilizationSummary.application_utilization)
  return application_utilization_;
}

// -------------------------------------------------------------------

// CpuMemoryUtilizationPerApplication

// optional string name = 1;
inline bool CpuMemoryUtilizationPerApplication::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CpuMemoryUtilizationPerApplication::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CpuMemoryUtilizationPerApplication::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CpuMemoryUtilizationPerApplication::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CpuMemoryUtilizationPerApplication::name() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationPerApplication.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CpuMemoryUtilizationPerApplication::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationPerApplication.name)
}
inline void CpuMemoryUtilizationPerApplication::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CpuMemoryUtilizationPerApplication.name)
}
inline void CpuMemoryUtilizationPerApplication::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CpuMemoryUtilizationPerApplication.name)
}
inline ::std::string* CpuMemoryUtilizationPerApplication::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:CpuMemoryUtilizationPerApplication.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CpuMemoryUtilizationPerApplication::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CpuMemoryUtilizationPerApplication::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:CpuMemoryUtilizationPerApplication.name)
}

// optional uint64 bytes_allocated = 2;
inline bool CpuMemoryUtilizationPerApplication::has_bytes_allocated() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CpuMemoryUtilizationPerApplication::set_has_bytes_allocated() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CpuMemoryUtilizationPerApplication::clear_has_bytes_allocated() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CpuMemoryUtilizationPerApplication::clear_bytes_allocated() {
  bytes_allocated_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes_allocated();
}
inline ::google::protobuf::uint64 CpuMemoryUtilizationPerApplication::bytes_allocated() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationPerApplication.bytes_allocated)
  return bytes_allocated_;
}
inline void CpuMemoryUtilizationPerApplication::set_bytes_allocated(::google::protobuf::uint64 value) {
  set_has_bytes_allocated();
  bytes_allocated_ = value;
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationPerApplication.bytes_allocated)
}

// optional uint64 allocations = 3;
inline bool CpuMemoryUtilizationPerApplication::has_allocations() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CpuMemoryUtilizationPerApplication::set_has_allocations() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CpuMemoryUtilizationPerApplication::clear_has_allocations() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CpuMemoryUtilizationPerApplication::clear_allocations() {
  allocations_ = GOOGLE_ULONGLONG(0);
  clear_has_allocations();
}
inline ::google::protobuf::uint64 CpuMemoryUtilizationPerApplication::allocations() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationPerApplication.allocations)
  return allocations_;
}
inline void CpuMemoryUtilizationPerApplication::set_allocations(::google::protobuf::uint64 value) {
  set_has_allocations();
  allocations_ = value;
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationPerApplication.allocations)
}

// optional uint64 frees = 4;
inline bool CpuMemoryUtilizationPerApplication::has_frees() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CpuMemoryUtilizationPerApplication::set_has_frees() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CpuMemoryUtilizationPerApplication::clear_has_frees() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CpuMemoryUtilizationPerApplication::clear_frees() {
  frees_ = GOOGLE_ULONGLONG(0);
  clear_has_frees();
}
inline ::google::protobuf::uint64 CpuMemoryUtilizationPerApplication::frees() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationPerApplication.frees)
  return frees_;
}
inline void CpuMemoryUtilizationPerApplication::set_frees(::google::protobuf::uint64 value) {
  set_has_frees();
  frees_ = value;
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationPerApplication.frees)
}

// optional uint64 allocations_failed = 5;
inline bool CpuMemoryUtilizationPerApplication::has_allocations_failed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CpuMemoryUtilizationPerApplication::set_has_allocations_failed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CpuMemoryUtilizationPerApplication::clear_has_allocations_failed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CpuMemoryUtilizationPerApplication::clear_allocations_failed() {
  allocations_failed_ = GOOGLE_ULONGLONG(0);
  clear_has_allocations_failed();
}
inline ::google::protobuf::uint64 CpuMemoryUtilizationPerApplication::allocations_failed() const {
  // @@protoc_insertion_point(field_get:CpuMemoryUtilizationPerApplication.allocations_failed)
  return allocations_failed_;
}
inline void CpuMemoryUtilizationPerApplication::set_allocations_failed(::google::protobuf::uint64 value) {
  set_has_allocations_failed();
  allocations_failed_ = value;
  // @@protoc_insertion_point(field_set:CpuMemoryUtilizationPerApplication.allocations_failed)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cpu_5fmemory_5futilization_2eproto__INCLUDED
