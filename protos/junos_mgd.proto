
syntax = "proto3";
package junos_mgd;

service OpenConfigRpcApi {
  rpc EditConfig (EditConfigRequest) returns (EditConfigResponse);
  rpc GetConfig (GetConfigRequest) returns (GetConfigResponse);
}

message EditConfigRequest {
  // List of configuration data items, each consisting of the
  // data model path, and corresponding data encoded based on
  // the requested format
  RequestHdr RequestHeader = 1; // openconfig-rpc-api.yang:173:5
  repeated ConfigCommand ConfigCommand = 2; // openconfig-rpc-api.yang:456:5
}

message EditConfigResponse {
  // Response for the List of configuration data items requested
  // via EditConfig RPC. 

  ReplyHdr ReplyHeader = 1; 
}

message GetConfigRequest {
  // List of data model paths to retrieve
  PathList Path = 1; // openconfig-rpc-api.yang:210:5

  // Identifier sent in request messages
  RequestHdr RequestHeader = 2; // openconfig-rpc-api.yang:173:5
}

message GetConfigResponse {
  // List of configuration data items, each consisting of the
  // data model path, and corresponding data encoded based on
  // the requested format
  repeated OpenConfigDataElement Data = 1; // openconfig-rpc-api.yang:438:5

  // Status reflecting the returned message.
  ReplyHdr ReplyHeader = 2; // openconfig-rpc-api.yang:190:5
}

message OpenConfigDataElement {
  // Path of the config requested
  string Path = 1;

  // Configuration Data
  string Values = 2;
}

message ConfigCommand {
  // operation on the config
  EditConfigCommands Command = 1;

  // Configuration Data
  OpenConfigDataElement OpenCfgData = 2;
}

message Schema {
  // Name of the corresponding YANG module
  string ModelName = 1;

  // Namespace the model belongs to
  string ModelNamespace = 2;

  // Revision of the YANG models
  string ModelVersion = 3;

  // Model Data formatted according to the requested
  // format e.g JSON, YANG etc and uses the requested
  // mode i.e. URI, FILE etc
  string ModelData = 4;
}

enum OpenConfigDataEncodingTypes {
  ENCODING_XML = 0;
  ENCODING_JSON = 1;
  ENCODING_PROTO3 = 2;
}

enum EditConfigCommands {
  Invalid = 0;
  UpdateConfig = 1;
  ReplaceConfig = 2;
  DeleteConfig = 3;
}

enum OpenConfigSchemaFormatTypes {
  JsonSchema = 0;
  YangSchema = 1;
  XsdSchema = 2;
}

enum OpenConfigSchemaModeTypes {
  UriMode = 0;
  FileMode = 1;
}

message Empty { 
}

message RequestHdr {
  uint64 RequestId = 1;
}

message ReplyHdr {
  // Error or information text associated with the return-code
  // value.
  string Message = 1; // openconfig-rpc-api.yang:198:5
  // The request id corresponding to the request
  uint64 RequestId = 2; // openconfig-rpc-api.yang:184:5
  // Numerical code corresponding to the returned message.
  string ResponseCode = 3; // openconfig-rpc-api.yang:190:5
}

message PathList {
  // List of data model paths to retrieve
  repeated string Path = 1;
}



